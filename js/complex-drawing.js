{
// #layer1
	
// #path10428
	ctx.beginPath();
	ctx.fillStyle = 'rgb(154, 154, 156)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(803.930340, 48.283466);
	ctx.lineTo(766.640670, 50.473136);
	ctx.lineTo(733.034410, 67.548295);
	ctx.lineTo(794.491190, 80.204214);
	ctx.lineTo(926.961540, 127.901300);
	ctx.lineTo(894.718370, 87.113395);
	ctx.lineTo(899.113320, 80.466755);
	ctx.lineTo(919.029760, 86.600760);
	ctx.lineTo(869.720520, 60.807374);
	ctx.lineTo(866.037970, 60.106357);
	ctx.closePath();
	ctx.fill();
	
// #path10426
	ctx.beginPath();
	ctx.fillStyle = 'rgb(82, 82, 84)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(657.026550, 121.143530);
	ctx.lineTo(675.731460, 147.886040);
	ctx.lineTo(736.952780, 166.435440);
	ctx.lineTo(814.018270, 227.618980);
	ctx.lineTo(803.836380, 186.841490);
	ctx.lineTo(849.923950, 212.353770);
	ctx.lineTo(826.835970, 149.102190);
	ctx.lineTo(748.310730, 94.272721);
	ctx.lineTo(706.585140, 82.594961);
	ctx.closePath();
	ctx.fill();
	
// #path10405
	ctx.beginPath();
	ctx.fillStyle = 'rgb(115, 115, 115)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(340.271740, 451.281780);
	ctx.lineTo(288.762580, 525.475310);
	ctx.lineTo(225.528110, 727.388940);
	ctx.lineTo(251.637130, 705.519870);
	ctx.lineTo(334.628360, 528.175550);
	ctx.lineTo(405.696960, 466.040400);
	ctx.lineTo(482.343540, 463.633950);
	ctx.lineTo(496.184660, 439.687360);
	ctx.lineTo(408.239650, 417.707040);
	ctx.closePath();
	ctx.fill();
	
// #path10398
	ctx.beginPath();
	ctx.fillStyle = 'rgb(77, 75, 78)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(300.901440, 407.641610);
	ctx.lineTo(237.705200, 509.328260);
	ctx.lineTo(185.499440, 681.330240);
	ctx.lineTo(140.871460, 798.167600);
	ctx.lineTo(188.812000, 766.644930);
	ctx.lineTo(232.758720, 690.024200);
	ctx.lineTo(280.578520, 520.295290);
	ctx.lineTo(341.713980, 438.529390);
	ctx.lineTo(439.876150, 415.172110);
	ctx.lineTo(500.186170, 438.324130);
	ctx.bezierCurveTo(487.074880, 412.405040, 469.492750, 393.192230, 445.399480, 383.746120);
	ctx.lineTo(366.044640, 379.484930);
	ctx.closePath();
	ctx.fill();
	
// #path10391
	ctx.beginPath();
	ctx.fillStyle = 'rgb(2, 2, 4)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(321.213720, 351.558790);
	ctx.lineTo(283.199160, 364.060250);
	ctx.lineTo(239.263900, 389.502560);
	ctx.lineTo(200.297730, 432.351900);
	ctx.lineTo(245.333400, 411.340510);
	ctx.lineTo(261.982580, 411.945500);
	ctx.lineTo(221.369800, 466.367930);
	ctx.lineTo(170.002820, 606.742720);
	ctx.lineTo(131.108670, 689.026510);
	ctx.lineTo(150.677030, 679.650600);
	ctx.lineTo(186.039220, 634.159400);
	ctx.lineTo(207.211160, 577.863830);
	ctx.lineTo(246.914180, 477.775810);
	ctx.lineTo(286.207220, 422.318020);
	ctx.lineTo(350.288330, 381.276290);
	ctx.lineTo(439.561670, 377.148510);
	ctx.lineTo(379.880340, 354.407260);
	ctx.closePath();
	ctx.fill();
	
// #path10384
	ctx.beginPath();
	ctx.fillStyle = 'rgb(153, 153, 155)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(183.484250, 768.896810);
	ctx.lineTo(226.933950, 732.632010);
	ctx.bezierCurveTo(289.167370, 550.897320, 327.965710, 363.400450, 489.889040, 450.414270);
	ctx.lineTo(501.375850, 436.333720);
	ctx.bezierCurveTo(358.462610, 353.093740, 303.098780, 432.249540, 264.854930, 537.205090);
	ctx.bezierCurveTo(238.030240, 610.822130, 229.111680, 695.900510, 183.484250, 768.896810);
	ctx.closePath();
	ctx.fill();
	
// #path10378
	ctx.beginPath();
	ctx.fillStyle = 'rgb(82, 82, 84)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(481.634400, 462.428660);
	ctx.bezierCurveTo(316.649930, 420.278570, 288.249160, 631.693480, 250.079340, 705.396940);
	ctx.lineTo(246.259870, 732.188360);
	ctx.lineTo(227.484450, 792.273270);
	ctx.lineTo(278.222090, 732.733310);
	ctx.lineTo(312.954930, 628.256230);
	ctx.lineTo(321.450080, 660.899220);
	ctx.lineTo(349.075660, 570.027890);
	ctx.lineTo(374.062480, 527.975070);
	ctx.lineTo(415.345160, 484.999670);
	ctx.lineTo(472.473920, 472.219000);
	ctx.closePath();
	ctx.fill();
	
// #path12008
	ctx.save();
	ctx.beginPath();
	ctx.transform(0.995864, -0.090862, 0.044352, 0.999016, 0.000000, 0.000000);
	ctx.globalAlpha = 1.0;
	ctx.fillStyle = 'rgb(255, 255, 255)';
	ctx.lineWidth = 2.004430;
	ctx.moveTo(858.243650, 272.230004);
	ctx.bezierCurveTo(878.504720, 272.230004, 894.929563, 306.046992, 894.929563, 347.762360);
	ctx.bezierCurveTo(894.929563, 389.477728, 878.504720, 423.294716, 858.243650, 423.294716);
	ctx.bezierCurveTo(837.982580, 423.294716, 821.557737, 389.477728, 821.557737, 347.762360);
	ctx.bezierCurveTo(821.557737, 306.046992, 837.982580, 272.230004, 858.243650, 272.230004);
	ctx.fill();
	ctx.restore();
	
// #path11991
	ctx.save();
	ctx.beginPath();
	ctx.transform(0.999977, -0.006768, -0.016617, 0.999862, 0.000000, 0.000000);
	ctx.globalAlpha = 1.0;
	ctx.lineWidth = 2.305540;
	ctx.moveTo(881.554080, 236.958520);
	ctx.bezierCurveTo(893.704109, 236.958520, 903.553653, 256.787931, 903.553653, 281.248750);
	ctx.bezierCurveTo(903.553653, 305.709569, 893.704109, 325.538980, 881.554080, 325.538980);
	ctx.bezierCurveTo(869.404051, 325.538980, 859.554507, 305.709569, 859.554507, 281.248750);
	ctx.bezierCurveTo(859.554507, 256.787931, 869.404051, 236.958520, 881.554080, 236.958520);
	ctx.fill();
	ctx.restore();
	
// #path11996
	ctx.beginPath();
	ctx.lineWidth = 1.768510;
	ctx.globalAlpha = 1.0;
	ctx.moveTo(887.831490, 284.365610);
	ctx.lineTo(885.530920, 289.513470);
	ctx.lineTo(893.920280, 301.970660);
	ctx.bezierCurveTo(896.023240, 296.265700, 897.347620, 290.560760, 898.201830, 284.855820);
	ctx.closePath();
	ctx.fill();
	
// #path11994
	ctx.beginPath();
	ctx.lineWidth = 1.768510;
	ctx.moveTo(888.416620, 275.318860);
	ctx.lineTo(886.674650, 285.330420);
	ctx.lineTo(898.131740, 285.429120);
	ctx.bezierCurveTo(898.734190, 280.440230, 898.888190, 276.497740, 898.829420, 273.051700);
	ctx.closePath();
	ctx.fill();
	
// #path12038
	ctx.beginPath();
	ctx.globalAlpha = 1.0;
	ctx.fillStyle = 'rgb(0, 0, 0)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(873.463260, 232.682216);
	ctx.bezierCurveTo(884.268252, 232.682216, 893.027429, 250.349030, 893.027429, 272.142150);
	ctx.bezierCurveTo(893.027429, 293.935270, 884.268252, 311.602084, 873.463260, 311.602084);
	ctx.bezierCurveTo(862.658268, 311.602084, 853.899091, 293.935270, 853.899091, 272.142150);
	ctx.bezierCurveTo(853.899091, 250.349030, 862.658268, 232.682216, 873.463260, 232.682216);
	ctx.fill();
	
// #path11952
	ctx.save();
	ctx.beginPath();
	ctx.transform(0.911336, -0.411664, 0.413245, 0.910620, 0.000000, 0.000000);
	ctx.globalAlpha = 1.0;
	ctx.fillStyle = 'rgb(255, 255, 255)';
	ctx.lineWidth = 1.746480;
	ctx.moveTo(560.269840, 485.716197);
	ctx.bezierCurveTo(590.920862, 485.716197, 615.768425, 520.692578, 615.768425, 563.838130);
	ctx.bezierCurveTo(615.768425, 606.983682, 590.920862, 641.960063, 560.269840, 641.960063);
	ctx.bezierCurveTo(529.618818, 641.960063, 504.771255, 606.983682, 504.771255, 563.838130);
	ctx.bezierCurveTo(504.771255, 520.692578, 529.618818, 485.716197, 560.269840, 485.716197);
	ctx.fill();
	ctx.restore();
	
// #path11960
	ctx.save();
	ctx.beginPath();
	ctx.transform(0.976277, -0.216523, 0.350848, 0.936432, 0.000000, 0.000000);
	ctx.globalAlpha = 1.0;
	ctx.lineWidth = 1.543870;
	ctx.moveTo(617.140080, 400.056412);
	ctx.bezierCurveTo(635.820838, 400.056412, 650.964585, 424.228110, 650.964585, 454.045410);
	ctx.bezierCurveTo(650.964585, 483.862710, 635.820838, 508.034408, 617.140080, 508.034408);
	ctx.bezierCurveTo(598.459322, 508.034408, 583.315575, 483.862710, 583.315575, 454.045410);
	ctx.bezierCurveTo(583.315575, 424.228110, 598.459322, 400.056412, 617.140080, 400.056412);
	ctx.fill();
	ctx.restore();
	
// #path10503
	ctx.beginPath();
	ctx.fillStyle = 'rgb(219, 193, 98)';
	ctx.lineWidth = 1.768510;
	ctx.globalAlpha = 1.0;
	ctx.moveTo(531.195300, 628.763280);
	ctx.lineTo(514.679980, 693.406760);
	ctx.lineTo(518.600790, 761.807110);
	ctx.lineTo(563.774040, 644.274620);
	ctx.closePath();
	ctx.fill();
	
// #path10496
	ctx.beginPath();
	ctx.fillStyle = 'rgb(219, 193, 98)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(614.292660, 795.929440);
	ctx.lineTo(614.930990, 835.859480);
	ctx.lineTo(622.465890, 849.924370);
	ctx.lineTo(645.440140, 847.536390);
	ctx.lineTo(646.113950, 839.137990);
	ctx.closePath();
	ctx.fill();
	
// #path11489
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(528.161210, 621.147020);
	ctx.bezierCurveTo(528.069110, 621.384200, 526.957430, 624.182800, 525.895300, 626.894690);
	ctx.bezierCurveTo(524.833170, 629.606580, 523.923780, 632.061430, 523.684660, 632.697620);
	ctx.bezierCurveTo(511.244890, 665.795260, 508.784840, 701.617220, 509.481290, 730.629000);
	ctx.bezierCurveTo(509.829530, 745.134880, 510.960430, 757.931060, 512.078800, 767.823020);
	ctx.bezierCurveTo(513.197170, 777.714990, 514.308590, 784.923020, 514.510500, 787.276660);
	ctx.lineTo(514.510500, 787.552990);
	ctx.lineTo(514.565700, 787.829320);
	ctx.bezierCurveTo(517.606270, 801.709930, 518.846350, 813.310900, 520.644960, 823.089040);
	ctx.bezierCurveTo(522.443570, 832.867180, 524.845440, 841.149470, 530.979710, 847.406080);
	ctx.bezierCurveTo(537.113970, 853.662690, 546.369180, 857.163460, 560.215430, 858.625080);
	ctx.bezierCurveTo(574.028220, 860.083170, 592.804230, 859.629010, 619.073730, 857.575030);
	ctx.bezierCurveTo(619.120630, 857.573030, 619.192400, 857.577030, 619.239440, 857.575030);
	ctx.bezierCurveTo(625.947660, 857.241540, 635.765840, 857.087030, 643.390690, 854.590660);
	ctx.bezierCurveTo(647.229930, 853.333710, 651.118260, 851.381960, 652.730650, 847.129750);
	ctx.bezierCurveTo(654.343030, 842.877540, 652.616220, 838.151920, 649.027820, 833.644850);
	ctx.bezierCurveTo(634.329770, 815.183770, 626.498710, 801.576460, 618.134120, 787.387190);
	ctx.lineTo(573.092320, 625.126180);
	ctx.lineTo(564.581350, 627.502610);
	ctx.lineTo(609.733690, 790.205760);
	ctx.lineTo(609.899400, 790.813680);
	ctx.lineTo(610.230990, 791.311080);
	ctx.bezierCurveTo(618.684690, 805.640220, 626.843440, 819.984400, 642.119480, 839.171450);
	ctx.bezierCurveTo(644.781500, 842.515010, 644.592360, 843.725240, 644.495920, 843.979590);
	ctx.bezierCurveTo(644.399520, 844.233940, 643.326770, 845.306430, 640.627300, 846.190230);
	ctx.bezierCurveTo(635.228350, 847.957840, 625.541520, 848.383500, 618.631430, 848.732470);
	ctx.lineTo(618.576230, 848.732470);
	ctx.lineTo(618.521030, 848.732470);
	ctx.bezierCurveTo(592.381480, 850.781160, 573.962940, 851.189810, 561.154910, 849.837790);
	ctx.bezierCurveTo(548.346880, 848.485760, 541.517820, 845.482280, 537.335260, 841.216290);
	ctx.bezierCurveTo(533.152690, 836.950300, 531.020080, 830.719600, 529.321690, 821.486320);
	ctx.bezierCurveTo(527.623290, 812.253040, 526.396640, 800.349770, 523.242420, 785.950280);
	ctx.bezierCurveTo(522.921240, 782.512820, 521.933600, 776.271280, 520.865990, 766.828230);
	ctx.bezierCurveTo(519.767620, 757.113090, 518.663800, 744.573240, 518.323750, 730.407930);
	ctx.bezierCurveTo(517.643630, 702.077340, 520.087610, 667.272000, 531.919190, 635.792520);
	ctx.bezierCurveTo(531.910190, 635.813920, 533.068370, 632.810270, 534.129830, 630.100120);
	ctx.bezierCurveTo(535.191290, 627.389960, 536.249850, 624.727730, 536.395740, 624.352450);
	ctx.closePath();
	ctx.fill();
	
// #path11969
	ctx.beginPath();
	ctx.lineWidth = 1.768510;
	ctx.moveTo(751.835800, 307.459940);
	ctx.lineTo(738.417480, 317.506770);
	ctx.bezierCurveTo(741.563450, 322.088050, 745.127070, 326.515450, 749.667810, 330.582850);
	ctx.lineTo(760.369670, 315.237210);
	ctx.closePath();
	ctx.fill();
	
// #path11971
	ctx.beginPath();
	ctx.lineWidth = 1.768510;
	ctx.moveTo(748.559010, 302.109520);
	ctx.lineTo(730.306530, 302.669040);
	ctx.bezierCurveTo(732.581030, 308.231670, 735.496600, 312.960920, 738.497680, 317.579000);
	ctx.lineTo(754.046760, 306.339380);
	ctx.closePath();
	ctx.fill();
	
// #path11963
	ctx.save();
	ctx.beginPath();
	ctx.transform(0.952188, -0.305513, 0.286738, 0.958009, 0.000000, 0.000000);
	ctx.globalAlpha = 1.0;
	ctx.fillStyle = 'rgb(0, 0, 0)';
	ctx.lineWidth = 1.716500;
	ctx.moveTo(655.036250, 461.800167);
	ctx.bezierCurveTo(670.159569, 461.800167, 682.419442, 481.375551, 682.419442, 505.523010);
	ctx.bezierCurveTo(682.419442, 529.670469, 670.159569, 549.245853, 655.036250, 549.245853);
	ctx.bezierCurveTo(639.912931, 549.245853, 627.653058, 529.670469, 627.653058, 505.523010);
	ctx.bezierCurveTo(627.653058, 481.375551, 639.912931, 461.800167, 655.036250, 461.800167);
	ctx.fill();
	ctx.restore();
	
// #path7194
	ctx.beginPath();
	ctx.globalAlpha = 1.0;
	ctx.fillStyle = 'rgb(220, 194, 99)';
	ctx.lineWidth = 2.421090;
	ctx.moveTo(620.999670, 91.467551);
	ctx.lineTo(595.053790, 145.344210);
	ctx.lineTo(606.401290, 224.231700);
	ctx.lineTo(633.389940, 262.712280);
	ctx.lineTo(636.065120, 457.600530);
	ctx.lineTo(542.721230, 426.025910);
	ctx.lineTo(515.751080, 428.525160);
	ctx.lineTo(480.690640, 465.787960);
	ctx.lineTo(474.735810, 478.576320);
	ctx.lineTo(432.974930, 479.847390);
	ctx.lineTo(422.037750, 494.434490);
	ctx.lineTo(434.961330, 539.792390);
	ctx.lineTo(446.676200, 560.496030);
	ctx.lineTo(449.135180, 628.633030);
	ctx.lineTo(433.925670, 626.708340);
	ctx.lineTo(381.908820, 725.725120);
	ctx.lineTo(347.621870, 840.360010);
	ctx.lineTo(352.733920, 874.824210);
	ctx.lineTo(443.148500, 881.239320);
	ctx.lineTo(463.757870, 869.019430);
	ctx.lineTo(450.385320, 823.739570);
	ctx.lineTo(454.373790, 766.725940);
	ctx.lineTo(475.864300, 692.959490);
	ctx.lineTo(522.242420, 617.509650);
	ctx.lineTo(532.483930, 629.077030);
	ctx.lineTo(563.683390, 642.781610);
	ctx.lineTo(541.455130, 689.294210);
	ctx.lineTo(518.705750, 765.756800);
	ctx.lineTo(508.448770, 850.122320);
	ctx.lineTo(510.411020, 887.913440);
	ctx.lineTo(529.153520, 902.600630);
	ctx.lineTo(626.491510, 900.764120);
	ctx.lineTo(622.475990, 870.965060);
	ctx.lineTo(623.305050, 853.652340);
	ctx.lineTo(613.994260, 830.008940);
	ctx.lineTo(611.527980, 812.586500);
	ctx.lineTo(613.260610, 787.763200);
	ctx.lineTo(623.972470, 665.550550);
	ctx.lineTo(633.772420, 638.143860);
	ctx.lineTo(650.822280, 636.818930);
	ctx.lineTo(678.776130, 750.722390);
	ctx.lineTo(719.657570, 854.130920);
	ctx.lineTo(760.069360, 866.852190);
	ctx.lineTo(824.915970, 861.899360);
	ctx.lineTo(798.776470, 822.984430);
	ctx.lineTo(754.790960, 737.422350);
	ctx.lineTo(711.138370, 606.637940);
	ctx.lineTo(727.329240, 580.129470);
	ctx.lineTo(728.760810, 560.454880);
	ctx.lineTo(749.529060, 539.855370);
	ctx.lineTo(754.246700, 535.291670);
	ctx.lineTo(789.982540, 416.732080);
	ctx.lineTo(841.707820, 421.588680);
	ctx.lineTo(863.131330, 413.637500);
	ctx.lineTo(820.078700, 411.397470);
	ctx.lineTo(823.729740, 377.564110);
	ctx.lineTo(841.570680, 357.567190);
	ctx.lineTo(884.873400, 353.069370);
	ctx.lineTo(904.413700, 344.940220);
	ctx.lineTo(909.105820, 321.852630);
	ctx.lineTo(900.143220, 314.185080);
	ctx.lineTo(890.285530, 314.343890);
	ctx.lineTo(871.075060, 306.363940);
	ctx.lineTo(863.498910, 299.841080);
	ctx.bezierCurveTo(855.840460, 287.721270, 854.462630, 279.040020, 853.864090, 271.324160);
	ctx.bezierCurveTo(853.717480, 269.434750, 854.164140, 267.238950, 854.698120, 265.429000);
	ctx.lineTo(893.536180, 240.002990);
	ctx.lineTo(862.494080, 219.354720);
	ctx.lineTo(803.515370, 183.695710);
	ctx.lineTo(818.892550, 233.613040);
	ctx.lineTo(767.316260, 184.863050);
	ctx.lineTo(729.455950, 162.985740);
	ctx.lineTo(677.987070, 148.270370);
	ctx.lineTo(657.257800, 121.266580);
	ctx.closePath();
	ctx.moveTo(792.764760, 264.599420);
	ctx.bezierCurveTo(793.844260, 271.103620, 798.060360, 276.861190, 798.656330, 281.995340);
	ctx.bezierCurveTo(802.058300, 311.302810, 798.290610, 320.296210, 795.442010, 331.893760);
	ctx.bezierCurveTo(761.634010, 326.930980, 739.622500, 332.906020, 718.351540, 340.480280);
	ctx.bezierCurveTo(680.111640, 304.799340, 680.856180, 257.106100, 686.586670, 249.658770);
	ctx.closePath();
	ctx.fill();
	
// #path11039
	ctx.beginPath();
	ctx.fillStyle = 'rgb(108, 116, 69)';
	ctx.lineWidth = 1.768510;
	ctx.globalAlpha = 1.0;
	ctx.moveTo(650.630690, 635.681980);
	ctx.lineTo(648.692350, 659.591210);
	ctx.lineTo(655.715170, 677.242030);
	ctx.lineTo(736.624610, 677.242030);
	ctx.lineTo(729.771620, 639.219010);
	ctx.closePath();
	ctx.fill();
	
// #path10476
	ctx.beginPath();
	ctx.fillStyle = 'rgb(157, 165, 105)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(574.733900, 427.082140);
	ctx.lineTo(539.487840, 508.974610);
	ctx.lineTo(536.828000, 569.881460);
	ctx.lineTo(552.831390, 638.938290);
	ctx.lineTo(566.557450, 642.864320);
	ctx.lineTo(562.017980, 654.845780);
	ctx.lineTo(629.308940, 658.021130);
	ctx.lineTo(631.450340, 643.994060);
	ctx.lineTo(651.032390, 639.333540);
	ctx.lineTo(717.104270, 636.623400);
	ctx.lineTo(708.869540, 601.415000);
	ctx.bezierCurveTo(749.191730, 540.359850, 732.357810, 586.815090, 727.412180, 552.719560);
	ctx.lineTo(719.080700, 546.904060);
	ctx.lineTo(698.947990, 545.971500);
	ctx.lineTo(656.156450, 567.453080);
	ctx.lineTo(632.943040, 455.950330);
	ctx.lineTo(615.963290, 447.720720);
	ctx.closePath();
	ctx.fill();
	
// #path11041
	ctx.beginPath();
	ctx.fillStyle = 'rgb(108, 116, 69)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(548.941230, 656.462010);
	ctx.lineTo(538.744530, 674.453220);
	ctx.lineTo(532.361420, 698.464180);
	ctx.lineTo(631.398120, 700.232690);
	ctx.lineTo(639.577490, 656.019880);
	ctx.closePath();
	ctx.fill();
	
// #path10458
	ctx.beginPath();
	ctx.fillStyle = 'rgb(108, 116, 69)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(554.332950, 426.420510);
	ctx.lineTo(510.306620, 530.575450);
	ctx.lineTo(529.916920, 624.297190);
	ctx.lineTo(555.384260, 639.918650);
	ctx.bezierCurveTo(549.765270, 597.401670, 538.121720, 562.327910, 550.851750, 507.539940);
	ctx.bezierCurveTo(556.019520, 485.298670, 563.769690, 457.800530, 579.800270, 428.358870);
	ctx.closePath();
	ctx.fill();
	
// #path11010
	ctx.beginPath();
	ctx.fillStyle = 'rgb(123, 132, 85)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(580.277060, 423.460490);
	ctx.lineTo(577.624290, 431.916190);
	ctx.bezierCurveTo(599.670340, 438.775990, 612.731860, 451.531440, 630.458600, 467.618040);
	ctx.lineTo(634.050890, 458.057020);
	ctx.bezierCurveTo(615.447850, 444.034270, 602.998110, 430.226890, 580.277060, 423.460490);
	ctx.closePath();
	ctx.fill();
	
// #path11891
	ctx.beginPath();
	ctx.fillStyle = 'rgb(123, 132, 85)';
	ctx.lineWidth = 7.074050;
	ctx.moveTo(633.976890, 462.138110);
	ctx.lineTo(619.641190, 481.905530);
	ctx.bezierCurveTo(630.282450, 481.585080, 632.420940, 480.233880, 635.418410, 471.185460);
	ctx.closePath();
	ctx.fill();
	
// #path10377
	ctx.beginPath();
	ctx.fillStyle = 'rgb(99, 100, 68)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(713.380950, 599.151150);
	ctx.lineTo(705.565110, 599.869610);
	ctx.bezierCurveTo(706.804500, 614.929250, 711.001410, 627.982710, 715.236660, 640.600660);
	ctx.lineTo(723.637100, 637.782090);
	ctx.bezierCurveTo(719.428020, 625.242170, 714.520060, 612.992500, 713.380950, 599.151150);
	ctx.closePath();
	ctx.fill();
	
// #path11481
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(517.218540, 614.128240);
	ctx.bezierCurveTo(468.075340, 681.907490, 433.124730, 767.084260, 454.602140, 849.506190);
	ctx.bezierCurveTo(457.255600, 859.689110, 456.928780, 866.055880, 455.320600, 869.623020);
	ctx.bezierCurveTo(453.712420, 873.190160, 450.890870, 875.008600, 445.593780, 876.199680);
	ctx.bezierCurveTo(434.999620, 878.581830, 416.342230, 876.197680, 396.130700, 876.310210);
	ctx.bezierCurveTo(375.370260, 876.426400, 362.688060, 874.556670, 356.670770, 871.115200);
	ctx.bezierCurveTo(353.662120, 869.394460, 352.197090, 867.554280, 351.309960, 864.925410);
	ctx.bezierCurveTo(350.422840, 862.296530, 350.251920, 858.597550, 350.978370, 853.706410);
	ctx.bezierCurveTo(366.430180, 749.669700, 397.518220, 688.762380, 436.917020, 633.747670);
	ctx.bezierCurveTo(438.471240, 631.577430, 440.345690, 630.908080, 443.051550, 630.652780);
	ctx.bezierCurveTo(445.757410, 630.397480, 448.956200, 630.879480, 451.783580, 631.205440);
	ctx.lineTo(452.778370, 622.418140);
	ctx.bezierCurveTo(450.349310, 622.138120, 446.470290, 621.464700, 442.222560, 621.865480);
	ctx.bezierCurveTo(437.974820, 622.266260, 432.994160, 624.053410, 429.732440, 628.607940);
	ctx.bezierCurveTo(389.808820, 684.355480, 357.878750, 747.182590, 342.246340, 852.435290);
	ctx.bezierCurveTo(341.402790, 858.114920, 341.419610, 863.164980, 342.964800, 867.743980);
	ctx.bezierCurveTo(344.509980, 872.322970, 347.785320, 876.157110, 352.304750, 878.741910);
	ctx.bezierCurveTo(361.343640, 883.911540, 374.946310, 885.271560, 396.185970, 885.152770);
	ctx.bezierCurveTo(415.597500, 885.044180, 433.890170, 887.887720, 447.528090, 884.821170);
	ctx.bezierCurveTo(454.347050, 883.287890, 460.473270, 879.739050, 463.389440, 873.270580);
	ctx.bezierCurveTo(466.305610, 866.802100, 466.078250, 858.462500, 463.168380, 847.295550);
	ctx.bezierCurveTo(442.659500, 768.590500, 476.105540, 685.860010, 524.347850, 619.323240);
	ctx.closePath();
	ctx.fill();
	
// #path11855
	ctx.beginPath();
	ctx.fillStyle = 'rgb(57, 63, 37)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(554.449460, 634.159150);
	ctx.bezierCurveTo(543.695640, 629.114600, 534.581540, 622.050400, 527.829610, 613.133450);
	ctx.lineTo(515.841590, 612.042080);
	ctx.lineTo(520.755560, 618.438990);
	ctx.bezierCurveTo(528.920090, 629.221490, 539.886370, 637.473310, 552.677160, 643.115820);
	ctx.closePath();
	ctx.fill();
	
// #path11487
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(667.376300, 676.523570);
	ctx.lineTo(658.589000, 677.739420);
	ctx.bezierCurveTo(658.560700, 677.542360, 658.790420, 679.621400, 658.920600, 681.276450);
	ctx.bezierCurveTo(659.050760, 682.931490, 659.070570, 684.169730, 659.252190, 685.366130);
	ctx.bezierCurveTo(668.084070, 743.536520, 693.527850, 818.813570, 714.960330, 852.048430);
	ctx.bezierCurveTo(720.361760, 860.424300, 729.736840, 864.897570, 740.603760, 867.357110);
	ctx.bezierCurveTo(751.470690, 869.816650, 764.176550, 870.423450, 777.631990, 870.673070);
	ctx.bezierCurveTo(790.700420, 870.915520, 804.435110, 871.056380, 814.604960, 868.959830);
	ctx.bezierCurveTo(819.689870, 867.911540, 824.123250, 866.470540, 827.150340, 862.880570);
	ctx.bezierCurveTo(828.663890, 861.085580, 829.615700, 858.626640, 829.582050, 856.138110);
	ctx.bezierCurveTo(829.548450, 853.649590, 828.691160, 851.217390, 827.316140, 848.843000);
	ctx.bezierCurveTo(815.960790, 829.234630, 808.368330, 824.568930, 798.798880, 811.704240);
	ctx.bezierCurveTo(777.765570, 783.428110, 751.358870, 718.736830, 736.845670, 682.271230);
	ctx.bezierCurveTo(736.719580, 681.954550, 736.361120, 680.964130, 736.016680, 680.115860);
	ctx.bezierCurveTo(735.771360, 679.518670, 735.736160, 679.435650, 735.629820, 679.176340);
	ctx.bezierCurveTo(735.565120, 679.016460, 735.511330, 678.906500, 735.464110, 678.789480);
	ctx.bezierCurveTo(735.450010, 678.755180, 735.420810, 678.708480, 735.408910, 678.678940);
	ctx.bezierCurveTo(735.342210, 678.476770, 735.354310, 678.565760, 735.353710, 678.568410);
	ctx.bezierCurveTo(735.329110, 678.510910, 735.269910, 678.353340, 735.243180, 678.292080);
	ctx.bezierCurveTo(735.232580, 678.266580, 735.278380, 678.310480, 735.187980, 678.126370);
	ctx.bezierCurveTo(735.165380, 678.080370, 735.022270, 677.850220, 735.022270, 677.850040);
	ctx.lineTo(733.972210, 676.578920);
	ctx.lineTo(726.898160, 681.166000);
	ctx.bezierCurveTo(726.898220, 681.166200, 726.992560, 681.393800, 727.008700, 681.442330);
	ctx.bezierCurveTo(727.136740, 681.830500, 727.107600, 681.688770, 727.119230, 681.718660);
	ctx.bezierCurveTo(727.142730, 681.778460, 727.144530, 681.810060, 727.174430, 681.884370);
	ctx.bezierCurveTo(727.178430, 681.894970, 727.167430, 681.868470, 727.229630, 681.994900);
	ctx.bezierCurveTo(727.286030, 682.134970, 727.311130, 682.284360, 727.395340, 682.492300);
	ctx.bezierCurveTo(727.532760, 682.831430, 727.667750, 683.068760, 727.837470, 683.487090);
	ctx.bezierCurveTo(728.181550, 684.335160, 728.597060, 685.357570, 728.666460, 685.531930);
	ctx.bezierCurveTo(743.202040, 722.053800, 769.006670, 786.413170, 791.724980, 816.954510);
	ctx.bezierCurveTo(801.983270, 830.745230, 808.884630, 834.661620, 819.689590, 853.319550);
	ctx.bezierCurveTo(820.548460, 854.802660, 820.733220, 855.774520, 820.739640, 856.248640);
	ctx.bezierCurveTo(820.746640, 856.722770, 820.734640, 856.801760, 820.408040, 857.188170);
	ctx.bezierCurveTo(819.756400, 857.960990, 817.061700, 859.412040, 812.836600, 860.283060);
	ctx.bezierCurveTo(804.386420, 862.025100, 790.783160, 862.071420, 777.797950, 861.830510);
	ctx.bezierCurveTo(764.521490, 861.584190, 752.240270, 860.876240, 742.538230, 858.680350);
	ctx.bezierCurveTo(732.836190, 856.484460, 726.057530, 852.934010, 722.421400, 847.295550);
	ctx.bezierCurveTo(702.612590, 816.578490, 676.601990, 740.798760, 667.984380, 684.039750);
	ctx.bezierCurveTo(668.022780, 684.292730, 667.837950, 682.209320, 667.708050, 680.557990);
	ctx.bezierCurveTo(667.578060, 678.906660, 667.538620, 677.654040, 667.376280, 676.523570);
	ctx.closePath();
	ctx.moveTo(735.574560, 680.281660);
	ctx.bezierCurveTo(735.579560, 680.359660, 735.574560, 680.557990, 735.574560, 680.557990);
	ctx.bezierCurveTo(735.574560, 680.557990, 734.639610, 680.764230, 734.303440, 680.834320);
	ctx.closePath();
	ctx.fill();
	
// #path11888
	ctx.beginPath();
	ctx.fillStyle = 'rgb(57, 63, 37)';
	ctx.lineWidth = 7.074050;
	ctx.moveTo(733.142850, 633.858210);
	ctx.lineTo(729.992690, 633.913410);
	ctx.lineTo(651.017560, 634.245010);
	ctx.lineTo(647.812130, 634.245010);
	ctx.lineTo(647.535800, 637.450440);
	ctx.bezierCurveTo(646.090570, 652.384700, 644.767490, 666.190500, 653.228200, 679.176280);
	ctx.lineTo(654.278250, 680.779080);
	ctx.lineTo(656.212560, 680.779080);
	ctx.lineTo(741.045890, 680.779080);
	ctx.lineTo(746.572490, 680.779080);
	ctx.lineTo(744.196050, 675.749870);
	ctx.bezierCurveTo(735.986880, 658.302440, 734.945340, 648.731130, 733.529710, 637.008400);
	ctx.closePath();
	ctx.moveTo(727.008320, 640.987520);
	ctx.bezierCurveTo(728.188980, 650.434030, 729.940770, 660.086240, 735.740350, 673.705000);
	ctx.lineTo(658.367940, 673.705000);
	ctx.bezierCurveTo(652.886940, 664.194380, 653.113700, 653.931490, 654.278250, 641.319120);
	ctx.closePath();
	ctx.fill();
	
// #path7286
	ctx.beginPath();
	ctx.fillStyle = 'rgb(124, 133, 78)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(741.874880, 547.532690);
	ctx.bezierCurveTo(715.371830, 600.280720, 671.643840, 629.884680, 629.574340, 639.661140);
	ctx.lineTo(631.619180, 648.282640);
	ctx.bezierCurveTo(676.215780, 637.918910, 722.118670, 606.505760, 749.777920, 551.456580);
	ctx.closePath();
	ctx.fill();
	
// #path10485
	ctx.beginPath();
	ctx.fillStyle = 'rgb(154, 167, 98)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(632.489360, 635.279170);
	ctx.lineTo(572.766700, 631.791880);
	ctx.lineTo(564.984840, 653.674490);
	ctx.lineTo(628.815920, 653.607590);
	ctx.closePath();
	ctx.fill();
	
// #path12011
	ctx.beginPath();
	ctx.globalAlpha = 1.0;
	ctx.fillStyle = 'rgb(255, 255, 255)';
	ctx.lineWidth = 1.706130;
	ctx.moveTo(745.830020, 249.311971);
	ctx.bezierCurveTo(755.013630, 249.311971, 762.458417, 261.844452, 762.458417, 277.304050);
	ctx.bezierCurveTo(762.458417, 292.763648, 755.013630, 305.296129, 745.830020, 305.296129);
	ctx.bezierCurveTo(736.646410, 305.296129, 729.201623, 292.763648, 729.201623, 277.304050);
	ctx.bezierCurveTo(729.201623, 261.844452, 736.646410, 249.311971, 745.830020, 249.311971);
	ctx.fill();
	
// #path11966
	ctx.save();
	ctx.beginPath();
	ctx.transform(0.721354, 0.692566, -0.619390, 0.785083, 0.000000, 0.000000);
	ctx.globalAlpha = 1.0;
	ctx.fillStyle = 'rgb(255, 255, 255)';
	ctx.lineWidth = 1.686670;
	ctx.moveTo(798.339840, -323.100881);
	ctx.bezierCurveTo(802.190433, -323.100881, 805.311955, -319.235433, 805.311955, -314.467160);
	ctx.bezierCurveTo(805.311955, -309.698887, 802.190433, -305.833439, 798.339840, -305.833439);
	ctx.bezierCurveTo(794.489247, -305.833439, 791.367725, -309.698887, 791.367725, -314.467160);
	ctx.bezierCurveTo(791.367725, -319.235433, 794.489247, -323.100881, 798.339840, -323.100881);
	ctx.fill();
	ctx.restore();
	
// #path11986
	ctx.beginPath();
	ctx.globalAlpha = 1.0;
	ctx.fillStyle = 'rgba(255, 255, 255, 0.927273)';
	ctx.lineWidth = 1.672840;
	ctx.moveTo(866.384830, 246.392570);
	ctx.bezierCurveTo(872.834233, 246.392570, 878.062507, 256.003369, 878.062507, 267.858890);
	ctx.bezierCurveTo(878.062507, 279.714411, 872.834233, 289.325210, 866.384830, 289.325210);
	ctx.bezierCurveTo(859.935427, 289.325210, 854.707153, 279.714411, 854.707153, 267.858890);
	ctx.bezierCurveTo(854.707153, 256.003369, 859.935427, 246.392570, 866.384830, 246.392570);
	ctx.fill();
	
// #path10524
	ctx.beginPath();
	ctx.fillStyle = 'rgb(218, 192, 98)';
	ctx.lineWidth = 1.768510;
	ctx.globalAlpha = 1.0;
	ctx.moveTo(856.372020, 244.918180);
	ctx.lineTo(855.659490, 257.284650);
	ctx.lineTo(874.853350, 247.513490);
	ctx.lineTo(867.494530, 242.187970);
	ctx.closePath();
	ctx.fill();
	
// #path11847
	ctx.beginPath();
	ctx.fillStyle = 'rgb(32, 37, 33)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(335.338090, 346.364400);
	ctx.bezierCurveTo(273.566530, 349.898070, 217.000230, 384.024860, 195.404540, 439.929770);
	ctx.bezierCurveTo(192.020930, 447.966720, 189.658700, 454.538170, 187.755640, 460.450810);
	ctx.bezierCurveTo(191.990180, 455.768720, 194.896200, 452.082880, 202.533860, 444.848440);
	ctx.bezierCurveTo(217.727770, 431.070240, 235.806510, 416.587200, 256.141890, 413.346810);
	ctx.bezierCurveTo(221.166210, 448.422520, 200.167900, 500.992080, 181.201170, 553.833020);
	ctx.bezierCurveTo(160.684710, 610.991450, 135.431410, 690.218030, 100.493440, 713.912290);
	ctx.bezierCurveTo(127.881650, 717.295000, 168.939420, 662.162330, 178.489390, 647.398060);
	ctx.bezierCurveTo(171.425200, 675.787110, 153.462320, 710.758220, 133.672400, 735.492410);
	ctx.bezierCurveTo(109.473310, 765.737330, 97.165911, 775.619330, 67.730896, 783.766320);
	ctx.bezierCurveTo(38.295881, 791.913310, 20.731953, 790.705680, 20.731953, 790.705680);
	ctx.bezierCurveTo(20.731953, 790.705680, 23.365675, 793.913500, 44.859910, 797.998270);
	ctx.bezierCurveTo(66.354144, 802.083030, 102.335150, 802.006300, 147.599430, 774.952340);
	ctx.bezierCurveTo(142.461050, 785.387980, 111.840090, 809.269070, 98.963780, 811.752320);
	ctx.bezierCurveTo(98.963780, 811.752320, 115.303880, 814.293550, 140.944710, 802.576630);
	ctx.bezierCurveTo(166.585560, 790.859720, 209.950940, 763.345330, 244.528230, 717.361090);
	ctx.bezierCurveTo(241.096250, 739.619460, 222.351330, 793.987190, 202.299210, 815.474490);
	ctx.bezierCurveTo(202.299210, 815.474490, 215.810260, 808.790370, 229.641990, 798.022000);
	ctx.bezierCurveTo(254.301750, 778.823740, 274.963650, 749.244750, 292.921010, 702.119690);
	ctx.bezierCurveTo(298.691940, 686.975140, 305.107520, 668.478520, 310.081520, 649.940620);
	ctx.bezierCurveTo(311.205200, 657.868660, 313.880780, 678.826740, 323.330060, 689.117360);
	ctx.bezierCurveTo(329.252300, 625.046750, 345.210080, 582.780540, 365.679130, 546.758970);
	ctx.bezierCurveTo(378.212100, 525.265510, 393.651180, 506.289090, 411.936780, 493.814130);
	ctx.bezierCurveTo(430.222390, 481.339170, 451.206230, 475.256100, 475.879560, 479.168630);
	ctx.lineTo(477.261210, 470.436600);
	ctx.bezierCurveTo(450.376300, 466.173380, 426.768570, 473.006980, 406.962840, 486.519010);
	ctx.bezierCurveTo(387.157110, 500.031050, 370.978670, 520.075000, 357.997150, 542.337690);
	ctx.bezierCurveTo(337.298160, 577.835520, 324.868510, 618.525430, 318.979350, 649.443220);
	ctx.bezierCurveTo(317.222060, 637.544460, 322.467540, 577.085490, 325.540700, 552.901300);
	ctx.bezierCurveTo(317.024240, 582.178290, 315.112140, 591.380940, 309.939450, 613.508450);
	ctx.bezierCurveTo(296.670300, 670.270520, 273.535000, 736.237430, 236.323280, 777.637050);
	ctx.bezierCurveTo(245.663790, 752.928630, 251.647590, 714.790820, 253.433940, 704.322370);
	ctx.bezierCurveTo(255.220300, 693.853930, 257.610660, 686.329070, 257.610660, 686.329070);
	ctx.lineTo(245.420280, 701.724870);
	ctx.bezierCurveTo(216.938430, 741.304820, 183.024210, 770.432250, 148.981080, 788.658310);
	ctx.bezierCurveTo(199.622000, 719.617490, 194.088450, 681.122410, 209.560010, 624.523710);
	ctx.bezierCurveTo(249.836890, 477.181340, 294.386570, 346.845530, 456.136490, 392.073820);
	ctx.lineTo(427.981260, 373.702020);
	ctx.bezierCurveTo(246.594980, 338.694450, 199.084090, 577.559540, 191.954630, 605.094270);
	ctx.lineTo(179.764260, 631.592300);
	ctx.bezierCurveTo(167.700820, 649.061900, 152.653890, 666.663350, 138.977930, 680.557990);
	ctx.bezierCurveTo(159.183750, 645.351380, 173.699700, 600.811800, 189.491080, 556.817380);
	ctx.bezierCurveTo(209.932680, 499.867500, 232.575740, 444.168820, 270.566320, 411.578300);
	ctx.lineTo(278.856220, 404.504250);
	ctx.lineTo(267.968820, 403.841060);
	ctx.bezierCurveTo(246.574890, 402.539730, 228.172490, 412.770140, 212.647540, 424.786880);
	ctx.bezierCurveTo(265.081680, 336.263190, 422.596700, 321.255190, 499.036020, 441.200880);
	ctx.lineTo(506.496930, 436.448010);
	ctx.bezierCurveTo(464.089950, 369.904560, 397.109640, 342.830740, 335.338090, 346.364400);
	ctx.closePath();
	ctx.fill();
	
// #path11485
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(539.103880, 697.469390);
	ctx.bezierCurveTo(538.971240, 697.755800, 538.134150, 699.482100, 537.335370, 701.172210);
	ctx.bezierCurveTo(536.536580, 702.862330, 535.809190, 704.381320, 535.456320, 705.206630);
	ctx.bezierCurveTo(523.779680, 732.516090, 497.712410, 818.645260, 504.396820, 886.313360);
	ctx.bezierCurveTo(504.989890, 892.317150, 508.771930, 897.035400, 513.626250, 899.964060);
	ctx.bezierCurveTo(518.480570, 902.892720, 524.440060, 904.510090, 530.924510, 905.601190);
	ctx.bezierCurveTo(543.893380, 907.783400, 559.140420, 907.658580, 570.881840, 908.088170);
	ctx.bezierCurveTo(583.876510, 908.563610, 594.961020, 908.867370, 604.151980, 908.198700);
	ctx.bezierCurveTo(613.342940, 907.530020, 620.802640, 906.019620, 626.313650, 901.953640);
	ctx.bezierCurveTo(631.824650, 897.887650, 634.410390, 890.991370, 633.719290, 882.886860);
	ctx.bezierCurveTo(633.028190, 874.782350, 629.639720, 864.964460, 623.605610, 852.214230);
	ctx.bezierCurveTo(616.876410, 837.995230, 615.388340, 814.025640, 616.586830, 787.552990);
	ctx.bezierCurveTo(617.785310, 761.080340, 621.443500, 732.099710, 623.992470, 706.919880);
	ctx.bezierCurveTo(624.018670, 706.660810, 624.158180, 705.345350, 624.268800, 704.377640);
	ctx.bezierCurveTo(624.281200, 704.271350, 624.313000, 704.197980, 624.324000, 704.101310);
	ctx.bezierCurveTo(624.338100, 703.979990, 624.311600, 703.874140, 624.324000, 703.769710);
	ctx.bezierCurveTo(624.331000, 703.698610, 624.372500, 703.611080, 624.379200, 703.548650);
	ctx.bezierCurveTo(624.377200, 703.564550, 624.359400, 703.557650, 624.324000, 703.714360);
	ctx.bezierCurveTo(624.329000, 703.675860, 624.320000, 703.576950, 624.324000, 703.548650);
	ctx.bezierCurveTo(624.329000, 703.512950, 624.376700, 703.566350, 624.379200, 703.548650);
	ctx.bezierCurveTo(624.383200, 703.518050, 624.375200, 703.466450, 624.379200, 703.438120);
	ctx.bezierCurveTo(624.388200, 703.352520, 624.426900, 703.297170, 624.434400, 703.217050);
	ctx.bezierCurveTo(624.438400, 703.177050, 624.429400, 703.119950, 624.434400, 703.051340);
	ctx.bezierCurveTo(624.439400, 702.982740, 624.434660, 702.391600, 624.434400, 702.388150);
	ctx.lineTo(624.323870, 701.890760);
	ctx.lineTo(623.715940, 700.288040);
	ctx.lineTo(617.968270, 698.795860);
	ctx.lineTo(616.144500, 700.619640);
	ctx.lineTo(615.868170, 701.227570);
	ctx.bezierCurveTo(615.868020, 701.227940, 615.776570, 701.437880, 615.757630, 701.503900);
	ctx.bezierCurveTo(615.719630, 701.636000, 615.714630, 701.725400, 615.702430, 701.780230);
	ctx.bezierCurveTo(615.652930, 701.999520, 615.655930, 702.003540, 615.647230, 702.056560);
	ctx.bezierCurveTo(615.629530, 702.162670, 615.606230, 702.232700, 615.592030, 702.332890);
	ctx.bezierCurveTo(615.590030, 702.345290, 615.594030, 702.375190, 615.592030, 702.388090);
	ctx.bezierCurveTo(615.592420, 702.384090, 615.596030, 702.400490, 615.592030, 702.443290);
	ctx.bezierCurveTo(615.590030, 702.464890, 615.596030, 702.465890, 615.592030, 702.498490);
	ctx.bezierCurveTo(615.565830, 702.687680, 615.525930, 702.881410, 615.481500, 703.216950);
	ctx.lineTo(615.536700, 703.216950);
	ctx.bezierCurveTo(615.430060, 704.151910, 615.263900, 705.454770, 615.205100, 706.035510);
	ctx.bezierCurveTo(612.673700, 731.041550, 608.966350, 760.170330, 607.744190, 787.166020);
	ctx.bezierCurveTo(606.522020, 814.161710, 607.511910, 838.954130, 615.591960, 856.027470);
	ctx.bezierCurveTo(621.409520, 868.320100, 624.405180, 877.483460, 624.931920, 883.660480);
	ctx.bezierCurveTo(625.458650, 889.837510, 624.175970, 892.527700, 621.063300, 894.824220);
	ctx.bezierCurveTo(617.950630, 897.120730, 612.025880, 898.738940, 603.543970, 899.356030);
	ctx.bezierCurveTo(595.062060, 899.973120, 584.148380, 899.718770, 571.213350, 899.245500);
	ctx.bezierCurveTo(559.161930, 898.804550, 544.133840, 898.849950, 532.361350, 896.869060);
	ctx.bezierCurveTo(526.475100, 895.878600, 521.485350, 894.366590, 518.213250, 892.392510);
	ctx.bezierCurveTo(514.941140, 890.418430, 513.485540, 888.481140, 513.184040, 885.428990);
	ctx.bezierCurveTo(506.799360, 820.795200, 532.717220, 734.039840, 543.580350, 708.633020);
	ctx.bezierCurveTo(543.637450, 708.499320, 544.500270, 706.608760, 545.293590, 704.930190);
	ctx.bezierCurveTo(546.086910, 703.251630, 546.881280, 701.681840, 547.117370, 701.172100);
	ctx.closePath();
	ctx.moveTo(615.592040, 703.217050);
	ctx.lineTo(624.103010, 704.377640);
	ctx.bezierCurveTo(624.025210, 704.551480, 623.256600, 703.256770, 623.256690, 703.256610);
	ctx.lineTo(621.846580, 703.595390);
	ctx.lineTo(616.154180, 700.852680);
	ctx.lineTo(615.647310, 703.603920);
	ctx.bezierCurveTo(615.647340, 703.604110, 615.612610, 703.366070, 615.592110, 703.217050);
	ctx.closePath();
	ctx.fill();
	
// #path11501
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(552.920380, 418.099690);
	ctx.bezierCurveTo(522.358520, 416.786230, 490.959510, 432.026480, 471.734610, 475.465810);
	ctx.bezierCurveTo(451.635690, 520.880030, 437.014250, 528.935810, 444.626480, 625.666970);
	ctx.lineTo(447.004510, 647.193590);
	ctx.bezierCurveTo(452.965070, 640.063420, 455.750440, 630.171650, 455.818000, 625.347240);
	ctx.bezierCurveTo(448.263780, 529.353060, 459.371110, 525.350560, 479.858710, 479.058100);
	ctx.bezierCurveTo(497.991270, 438.086960, 525.015200, 425.759590, 552.533520, 426.942250);
	ctx.closePath();
	ctx.fill();
	
// #path10512
	ctx.beginPath();
	ctx.fillStyle = 'rgb(219, 193, 99)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(507.981000, 483.267990);
	ctx.lineTo(450.684610, 478.412080);
	ctx.lineTo(423.850830, 485.420790);
	ctx.lineTo(428.352980, 523.177160);
	ctx.lineTo(453.994430, 567.106910);
	ctx.lineTo(495.352280, 603.413030);
	ctx.lineTo(536.493520, 616.598160);
	ctx.lineTo(576.576590, 611.270610);
	ctx.lineTo(604.895740, 593.850650);
	ctx.lineTo(616.277850, 564.694280);
	ctx.lineTo(613.912170, 536.950500);
	ctx.lineTo(597.628390, 511.297550);
	ctx.lineTo(592.858980, 485.208870);
	ctx.lineTo(567.040060, 475.039300);
	ctx.bezierCurveTo(552.097620, 471.047430, 546.044210, 480.389140, 545.740490, 498.355370);
	ctx.closePath();
	ctx.fill();
	
// #path11493
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 7.074050;
	ctx.moveTo(596.801600, 504.148870);
	ctx.lineTo(591.274990, 508.570150);
	ctx.bezierCurveTo(615.158380, 538.525550, 615.691100, 566.331870, 603.267720, 585.666240);
	ctx.bezierCurveTo(590.844340, 605.000610, 564.843460, 616.258090, 533.411480, 611.088610);
	ctx.lineTo(532.250890, 618.052130);
	ctx.bezierCurveTo(565.936770, 623.592290, 595.062260, 611.538750, 609.236450, 589.479600);
	ctx.bezierCurveTo(623.410630, 567.420450, 622.011880, 535.768510, 596.801600, 504.148870);
	ctx.closePath();
	ctx.fill();
	
// #path11514
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(786.032430, 415.004790);
	ctx.bezierCurveTo(775.936430, 460.222310, 758.919110, 507.803080, 741.764350, 547.422160);
	ctx.lineTo(749.888450, 550.903920);
	ctx.bezierCurveTo(767.221630, 510.872810, 784.385780, 462.927660, 794.653920, 416.939100);
	ctx.closePath();
	ctx.fill();
	
// #path11105
	ctx.beginPath();
	ctx.fillStyle = 'rgb(108, 116, 69)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(675.832000, 492.929870);
	ctx.lineTo(667.652630, 565.770480);
	ctx.lineTo(703.907130, 543.664070);
	ctx.lineTo(726.870730, 559.085480);
	ctx.lineTo(752.458840, 552.080480);
	ctx.lineTo(767.773610, 588.395380);
	ctx.lineTo(784.789990, 520.253710);
	ctx.lineTo(773.224260, 499.503680);
	ctx.lineTo(756.891530, 534.368210);
	ctx.lineTo(726.919310, 559.718660);
	ctx.lineTo(718.718420, 520.341810);
	ctx.closePath();
	ctx.fill();
	
// #path11900
	ctx.beginPath();
	ctx.fillStyle = 'rgb(57, 63, 37)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(774.923960, 485.800560);
	ctx.lineTo(771.221130, 495.472110);
	ctx.bezierCurveTo(760.949350, 522.205950, 749.768740, 539.664140, 726.124070, 559.359620);
	ctx.lineTo(731.263810, 566.488940);
	ctx.bezierCurveTo(738.153810, 562.188440, 744.908640, 557.901150, 750.717440, 557.480580);
	ctx.bezierCurveTo(753.056390, 572.731910, 757.319830, 585.791560, 764.644480, 595.393060);
	ctx.lineTo(772.658050, 605.948870);
	ctx.lineTo(772.602850, 592.685030);
	ctx.bezierCurveTo(772.445810, 571.399020, 776.978910, 548.590230, 787.469410, 522.331390);
	ctx.lineTo(787.745740, 521.612930);
	ctx.lineTo(787.745740, 520.783940);
	ctx.bezierCurveTo(787.874840, 510.498730, 782.815730, 502.549240, 779.345310, 495.195780);
	ctx.closePath();
	ctx.moveTo(775.476620, 507.741160);
	ctx.bezierCurveTo(777.351630, 511.909020, 778.792830, 516.010250, 778.847840, 520.176020);
	ctx.bezierCurveTo(770.869540, 540.394820, 766.228870, 558.890520, 764.533950, 576.381550);
	ctx.bezierCurveTo(761.943040, 569.515480, 760.002130, 561.555710, 758.841550, 552.451370);
	ctx.lineTo(758.399420, 549.301210);
	ctx.lineTo(755.304520, 548.693280);
	ctx.bezierCurveTo(753.407970, 548.317210, 751.624940, 548.524560, 749.833190, 548.638080);
	ctx.bezierCurveTo(760.932460, 536.299490, 768.782830, 523.165490, 775.476620, 507.741140);
	ctx.closePath();
	ctx.fill();
	
// #path11936
	ctx.beginPath();
	ctx.fillStyle = 'rgb(0, 0, 0)';
	ctx.lineWidth = 5.482390;
	ctx.moveTo(907.341330, 229.034660);
	ctx.lineTo(850.115800, 258.676200);
	ctx.lineTo(851.221120, 235.421940);
	ctx.bezierCurveTo(848.577620, 227.860610, 833.671840, 278.158080, 849.149180, 269.220900);
	ctx.bezierCurveTo(872.711270, 255.615330, 888.480320, 245.380700, 909.938830, 233.842800);
	ctx.closePath();
	ctx.fill();
	
// #path11518
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 5.305540;
	ctx.moveTo(910.767820, 241.911640);
	ctx.lineTo(905.462280, 242.298500);
	ctx.bezierCurveTo(907.731090, 271.244930, 907.671610, 298.328650, 899.495850, 316.972260);
	ctx.lineTo(906.909330, 320.408110);
	ctx.bezierCurveTo(914.677660, 302.544060, 913.051690, 271.050520, 910.767820, 241.911640);
	ctx.closePath();
	ctx.fill();
	
// #path11818
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 3.537020;
	ctx.moveTo(625.338530, 143.423540);
	ctx.bezierCurveTo(616.862750, 166.014810, 632.975100, 219.983960, 651.076890, 226.599120);
	ctx.bezierCurveTo(635.364720, 209.721300, 624.699280, 166.136220, 625.338530, 143.423540);
	ctx.closePath();
	ctx.fill();
	
// #path11822
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 3.713880;
	ctx.moveTo(768.627380, 349.534230);
	ctx.bezierCurveTo(775.606590, 347.032440, 787.199730, 340.576100, 793.043410, 338.421710);
	ctx.bezierCurveTo(783.329470, 337.932860, 770.496930, 345.274430, 768.627380, 349.534230);
	ctx.closePath();
	ctx.fill();
	
// #path11824
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 3.890730;
	ctx.moveTo(864.843640, 322.460770);
	ctx.bezierCurveTo(861.638740, 327.036610, 866.365760, 332.794180, 871.284350, 333.125510);
	ctx.bezierCurveTo(876.630280, 333.485640, 882.280360, 328.105080, 880.257250, 325.365190);
	ctx.bezierCurveTo(876.717920, 327.860510, 873.962020, 329.313190, 871.376930, 328.843590);
	ctx.bezierCurveTo(868.928210, 328.398780, 866.606310, 326.202690, 864.843640, 322.460770);
	ctx.closePath();
	ctx.fill();
	
// #path10419
	ctx.beginPath();
	ctx.fillStyle = 'rgb(115, 115, 115)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(699.086630, 85.041500);
	ctx.lineTo(732.953670, 67.479782);
	ctx.bezierCurveTo(823.949090, 74.762683, 878.054020, 104.130700, 932.098780, 129.617230);
	ctx.lineTo(950.918090, 167.117600);
	ctx.lineTo(904.359330, 128.054770);
	ctx.lineTo(902.033700, 131.524630);
	ctx.lineTo(929.777240, 195.996330);
	ctx.lineTo(960.023610, 258.987560);
	ctx.lineTo(913.461120, 248.161140);
	ctx.lineTo(849.173270, 212.266420);
	ctx.bezierCurveTo(816.714840, 162.370850, 767.351440, 87.661360, 699.086630, 85.041500);
	ctx.closePath();
	ctx.fill();
	
// #path11826
	ctx.beginPath();
	ctx.fillStyle = 'rgb(0, 0, 0)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(801.506910, 42.125000);
	ctx.bezierCurveTo(775.078970, 42.150680, 748.449720, 48.068724, 719.493440, 65.021151);
	ctx.bezierCurveTo(699.227360, 76.885902, 677.821400, 94.155732, 654.546780, 118.593490);
	ctx.lineTo(661.307030, 125.353740);
	ctx.bezierCurveTo(715.936890, 70.647975, 759.470890, 51.867401, 801.850370, 51.826216);
	ctx.bezierCurveTo(837.486730, 51.791588, 866.872560, 58.968698, 913.172680, 84.397880);
	ctx.bezierCurveTo(888.835790, 75.463210, 853.559020, 61.804957, 803.324130, 69.295896);
	ctx.bezierCurveTo(838.407150, 74.770452, 865.126390, 68.305971, 953.962110, 111.350520);
	ctx.bezierCurveTo(898.973060, 59.664516, 851.997780, 42.849326, 801.506910, 42.125000);
	ctx.closePath();
	ctx.fill();
	
// #path11828
	ctx.beginPath();
	ctx.fillStyle = 'rgb(0, 0, 0)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(865.476620, 74.748935);
	ctx.lineTo(857.870180, 75.294574);
	ctx.bezierCurveTo(905.312810, 93.294396, 925.734630, 125.050150, 946.665440, 161.693490);
	ctx.bezierCurveTo(928.148620, 136.638340, 890.293360, 111.254590, 848.101470, 108.856370);
	ctx.bezierCurveTo(887.902540, 122.363860, 913.522370, 128.410980, 961.288900, 192.889870);
	ctx.bezierCurveTo(957.277170, 175.343380, 952.303080, 158.902530, 946.385840, 146.030270);
	ctx.bezierCurveTo(929.172710, 108.585240, 905.320090, 90.464484, 883.933790, 77.642021);
	ctx.closePath();
	ctx.fill();
	
// #path11830
	ctx.beginPath();
	ctx.fillStyle = 'rgb(0, 0, 0)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(901.503400, 126.809730);
	ctx.lineTo(890.245400, 123.990230);
	ctx.bezierCurveTo(909.361140, 150.270210, 918.019000, 176.725310, 924.860650, 198.417290);
	ctx.bezierCurveTo(930.717060, 216.985480, 937.357120, 235.167790, 953.156850, 253.517500);
	ctx.bezierCurveTo(883.275440, 242.154400, 831.634350, 193.814220, 788.992880, 170.081300);
	ctx.lineTo(799.460190, 185.950900);
	ctx.bezierCurveTo(847.667510, 215.420450, 890.902280, 260.911440, 988.722700, 267.287330);
	ctx.bezierCurveTo(953.156850, 253.517500, 940.705160, 219.013840, 933.316350, 195.764520);
	ctx.bezierCurveTo(926.550360, 174.312440, 921.506190, 154.309210, 901.503400, 126.809730);
	ctx.closePath();
	ctx.fill();
	
// #path11832
	ctx.beginPath();
	ctx.fillStyle = 'rgb(0, 0, 0)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(677.433170, 145.547980);
	ctx.lineTo(678.470030, 153.849550);
	ctx.bezierCurveTo(727.025090, 152.786130, 797.787430, 207.348170, 825.710360, 257.099060);
	ctx.bezierCurveTo(824.869810, 229.048880, 820.683190, 206.904200, 806.116710, 187.588540);
	ctx.lineTo(789.626260, 171.091610);
	ctx.bezierCurveTo(799.301960, 183.852280, 807.651010, 201.487570, 811.344260, 222.292200);
	ctx.bezierCurveTo(773.966290, 177.190730, 726.697790, 145.033080, 677.433170, 145.547980);
	ctx.closePath();
	ctx.fill();
	
// #path11902
	ctx.beginPath();
	ctx.fillStyle = 'rgb(57, 63, 37)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(695.340900, 464.191540);
	ctx.lineTo(691.748610, 465.683730);
	ctx.lineTo(662.015490, 477.676450);
	ctx.lineTo(659.252190, 478.837040);
	ctx.lineTo(659.252190, 481.821400);
	ctx.lineTo(659.528520, 564.609890);
	ctx.lineTo(659.528520, 568.920640);
	ctx.lineTo(663.784000, 569.031170);
	ctx.bezierCurveTo(674.685770, 569.390730, 688.727120, 561.468270, 712.639160, 540.734970);
	ctx.bezierCurveTo(716.680390, 546.153940, 719.443030, 554.167730, 720.708000, 564.278300);
	ctx.bezierCurveTo(720.725700, 564.413940, 720.746700, 564.528860, 720.763200, 564.665160);
	ctx.lineTo(729.550490, 563.946700);
	ctx.bezierCurveTo(729.546490, 563.844300, 729.554490, 563.717640, 729.550490, 563.615100);
	ctx.bezierCurveTo(729.543490, 563.559600, 729.557490, 563.504750, 729.550490, 563.449390);
	ctx.bezierCurveTo(729.000640, 549.024380, 729.317970, 533.169380, 721.813250, 511.223010);
	ctx.lineTo(721.647540, 510.836150);
	ctx.lineTo(721.481830, 510.449200);
	ctx.lineTo(697.220050, 467.618040);
	ctx.closePath();
	ctx.moveTo(691.472280, 475.300010);
	ctx.lineTo(713.468150, 514.373090);
	ctx.bezierCurveTo(715.914110, 521.576250, 717.333570, 527.820220, 718.331560, 533.771460);
	ctx.bezierCurveTo(717.628220, 532.955360, 717.070040, 532.023710, 716.286720, 531.284490);
	ctx.lineTo(713.357620, 528.521180);
	ctx.lineTo(710.317990, 531.173950);
	ctx.bezierCurveTo(688.927710, 550.114760, 675.906520, 557.427710, 668.371080, 559.359620);
	ctx.lineTo(668.094750, 484.805770);
	ctx.closePath();
	ctx.fill();
	
// #path10399
	ctx.beginPath();
	ctx.fillStyle = 'rgb(2, 2, 4)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(626.387640, 388.711590);
	ctx.lineTo(628.367900, 434.437330);
	ctx.lineTo(636.517880, 486.684810);
	ctx.lineTo(649.584710, 601.056420);
	ctx.lineTo(671.546480, 560.166660);
	ctx.lineTo(671.160120, 556.725240);
	ctx.lineTo(676.964900, 536.349170);
	ctx.lineTo(661.435990, 470.110930);
	ctx.closePath();
	ctx.fill();
	
// #path10401
	ctx.beginPath();
	ctx.fillStyle = 'rgb(74, 74, 76)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(634.574510, 263.549370);
	ctx.lineTo(626.736450, 307.630980);
	ctx.lineTo(657.523330, 418.470020);
	ctx.lineTo(704.119180, 489.394950);
	ctx.lineTo(703.608730, 464.792170);
	ctx.lineTo(680.901490, 411.990450);
	ctx.lineTo(714.911950, 407.793980);
	ctx.lineTo(690.125060, 387.772880);
	ctx.lineTo(669.639160, 363.804640);
	ctx.closePath();
	ctx.fill();
	
// #path10412
	ctx.beginPath();
	ctx.fillStyle = 'rgb(36, 36, 36)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(635.451900, 315.535960);
	ctx.bezierCurveTo(635.081400, 313.685850, 632.099740, 295.865820, 631.182330, 297.593890);
	ctx.bezierCurveTo(620.141360, 318.390610, 625.389230, 391.280710, 629.096700, 399.507000);
	ctx.bezierCurveTo(643.104490, 451.471150, 657.799180, 438.659970, 671.806950, 546.812910);
	ctx.lineTo(679.776150, 494.258610);
	ctx.lineTo(700.658900, 524.600640);
	ctx.lineTo(710.874420, 566.611830);
	ctx.lineTo(708.608490, 488.258810);
	ctx.bezierCurveTo(636.852430, 393.940250, 641.411190, 345.294490, 635.451900, 315.535960);
	ctx.closePath();
	ctx.fill();
	
// #path10448
	ctx.beginPath();
	ctx.fillStyle = 'rgb(57, 63, 37)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(580.336020, 423.489270);
	ctx.bezierCurveTo(572.549220, 421.161160, 561.825660, 418.613960, 552.809850, 418.099690);
	ctx.lineTo(549.714950, 417.933980);
	ctx.lineTo(548.499100, 420.752550);
	ctx.bezierCurveTo(537.648750, 446.348700, 532.219890, 469.562180, 527.332220, 492.985230);
	ctx.lineTo(535.953720, 494.809000);
	ctx.bezierCurveTo(540.610230, 472.493770, 545.800370, 450.859950, 555.462620, 427.273940);
	ctx.bezierCurveTo(562.848650, 427.935180, 571.121350, 429.891160, 577.617340, 431.882220);
	ctx.fill();
	
// #path11491
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 7.074050;
	ctx.moveTo(461.952520, 475.631610);
	ctx.bezierCurveTo(455.785990, 475.317860, 450.000830, 475.361060, 444.820060, 475.852670);
	ctx.bezierCurveTo(434.458500, 476.835900, 425.961280, 479.253740, 422.271530, 485.911090);
	ctx.bezierCurveTo(418.834030, 492.113280, 419.739670, 501.431450, 422.879450, 513.212500);
	ctx.bezierCurveTo(426.019230, 524.993550, 431.957930, 539.003780, 440.896170, 553.059290);
	ctx.bezierCurveTo(458.772670, 581.170330, 488.792950, 609.442810, 532.195630, 618.162660);
	ctx.lineTo(534.185200, 611.364940);
	ctx.bezierCurveTo(520.127320, 605.851550, 512.090910, 599.520240, 507.933850, 592.906090);
	ctx.bezierCurveTo(503.776780, 586.291940, 503.166980, 579.164320, 504.783680, 570.910220);
	ctx.lineTo(505.115280, 569.418030);
	ctx.lineTo(504.175760, 568.146920);
	ctx.bezierCurveTo(499.981870, 562.364340, 497.484660, 557.121460, 496.549050, 552.672430);
	ctx.bezierCurveTo(495.613430, 548.223400, 496.165320, 544.675450, 497.985960, 541.563960);
	ctx.bezierCurveTo(501.627280, 535.340990, 511.710430, 530.206060, 529.542860, 528.797510);
	ctx.lineTo(532.140360, 528.631810);
	ctx.lineTo(532.693020, 526.089570);
	ctx.bezierCurveTo(533.693680, 521.814120, 534.766650, 517.915930, 537.390630, 514.760040);
	ctx.bezierCurveTo(540.014610, 511.604140, 544.336480, 508.832650, 552.920380, 507.409660);
	ctx.lineTo(561.984010, 505.917470);
	ctx.lineTo(554.246770, 500.943530);
	ctx.bezierCurveTo(537.509880, 490.247760, 508.258990, 481.569870, 481.406160, 477.621190);
	ctx.bezierCurveTo(474.692960, 476.634020, 468.119060, 475.945360, 461.952520, 475.631610);
	ctx.closePath();
	ctx.moveTo(461.565660, 482.705660);
	ctx.bezierCurveTo(467.468800, 483.004960, 473.836960, 483.681330, 480.356110, 484.639970);
	ctx.bezierCurveTo(502.746500, 487.932460, 526.771710, 494.953370, 542.751440, 502.933020);
	ctx.bezierCurveTo(538.013780, 504.797170, 534.435890, 507.267860, 531.974560, 510.228130);
	ctx.bezierCurveTo(528.793890, 514.053590, 527.487580, 518.252920, 526.503230, 522.110330);
	ctx.bezierCurveTo(509.060940, 523.876380, 497.118930, 528.969540, 491.851440, 537.971670);
	ctx.bezierCurveTo(489.085390, 542.698820, 488.422130, 548.314410, 489.640800, 554.109350);
	ctx.bezierCurveTo(490.776200, 559.508390, 493.628700, 565.149180, 497.709630, 571.020750);
	ctx.bezierCurveTo(496.223380, 579.922310, 496.991190, 588.750370, 501.965120, 596.664180);
	ctx.bezierCurveTo(503.203890, 598.635130, 504.715670, 600.527670, 506.441660, 602.356580);
	ctx.bezierCurveTo(479.625230, 590.143440, 459.903880, 569.805180, 446.864900, 549.301210);
	ctx.bezierCurveTo(438.311530, 535.850910, 432.658620, 522.368350, 429.732440, 511.388720);
	ctx.bezierCurveTo(426.806260, 500.409090, 427.180030, 491.649400, 428.461320, 489.337580);
	ctx.bezierCurveTo(429.992740, 486.574440, 436.021140, 483.824600, 445.483250, 482.926720);
	ctx.bezierCurveTo(450.214310, 482.477790, 455.662530, 482.406360, 461.565660, 482.705660);
	ctx.closePath();
	ctx.fill();
	
// #path11845
	ctx.beginPath();
	ctx.fillStyle = 'rgb(36, 36, 36)';
	ctx.lineWidth = 7.074050;
	ctx.moveTo(628.966420, 260.481020);
	ctx.bezierCurveTo(615.807160, 338.229650, 618.708740, 391.353500, 625.318860, 441.587750);
	ctx.bezierCurveTo(631.928980, 491.821990, 642.190770, 539.071120, 643.998770, 605.783070);
	ctx.lineTo(645.017290, 614.850450);
	ctx.lineTo(650.575430, 607.496320);
	ctx.bezierCurveTo(655.515180, 599.226840, 663.641660, 588.505640, 670.471190, 570.578620);
	ctx.bezierCurveTo(676.568990, 554.572350, 681.413580, 532.268130, 682.629720, 500.998710);
	ctx.bezierCurveTo(691.783500, 516.157090, 700.272450, 539.010500, 705.951970, 573.010330);
	ctx.lineTo(710.790450, 599.367050);
	ctx.lineTo(712.970760, 572.568200);
	ctx.bezierCurveTo(715.383750, 542.909430, 723.492470, 488.281730, 686.277270, 415.446920);
	ctx.bezierCurveTo(699.707800, 416.086590, 709.068960, 413.094450, 717.502570, 411.191440);
	ctx.lineTo(727.339920, 408.980800);
	ctx.lineTo(718.276290, 404.559520);
	ctx.bezierCurveTo(690.665540, 391.130850, 676.057320, 370.924300, 666.215710, 347.138130);
	ctx.bezierCurveTo(656.374100, 323.351950, 651.609320, 296.024790, 644.164570, 269.323580);
	ctx.lineTo(635.020870, 264.078970);
	ctx.lineTo(637.311580, 271.257890);
	ctx.bezierCurveTo(644.629030, 297.502550, 649.436200, 325.053350, 659.694320, 349.846160);
	ctx.bezierCurveTo(668.930940, 372.170130, 682.910330, 392.211990, 706.946760, 406.383290);
	ctx.bezierCurveTo(699.702190, 408.131470, 692.130870, 409.610830, 681.027000, 408.151810);
	ctx.lineTo(674.174020, 407.212290);
	ctx.lineTo(677.434710, 413.291550);
	ctx.bezierCurveTo(707.776250, 469.747270, 709.115150, 513.964770, 707.499420, 545.929980);
	ctx.bezierCurveTo(700.745740, 518.724350, 691.975600, 499.825370, 682.353390, 487.624330);
	ctx.lineTo(676.108330, 479.721290);
	ctx.lineTo(676.053130, 489.834980);
	ctx.bezierCurveTo(675.772540, 526.807940, 670.393430, 550.977450, 663.894610, 568.036380);
	ctx.bezierCurveTo(659.480260, 579.623750, 654.770570, 587.445100, 650.409700, 594.343010);
	ctx.bezierCurveTo(647.778980, 533.130810, 638.508260, 487.597310, 632.337710, 440.703490);
	ctx.bezierCurveTo(625.776800, 390.843090, 622.942310, 338.703120, 635.985270, 261.641610);
	ctx.closePath();
	ctx.fill();
	
// #path11849
	ctx.beginPath();
	ctx.fillStyle = 'rgb(57, 63, 37)';
	ctx.lineWidth = 7.074050;
	ctx.moveTo(547.670110, 652.095990);
	ctx.lineTo(546.675320, 653.864500);
	ctx.bezierCurveTo(541.419320, 662.972170, 536.814310, 669.535500, 533.577280, 676.413040);
	ctx.bezierCurveTo(530.340240, 683.290570, 528.624950, 690.565150, 529.377060, 699.901090);
	ctx.lineTo(529.598120, 703.161790);
	ctx.lineTo(532.914080, 703.106590);
	ctx.lineTo(631.121790, 702.774990);
	ctx.lineTo(634.603550, 702.774990);
	ctx.lineTo(634.658750, 699.293230);
	ctx.bezierCurveTo(634.846490, 685.433470, 639.262630, 667.180390, 643.611840, 657.401600);
	ctx.lineTo(645.822480, 652.427660);
	ctx.lineTo(640.406410, 652.427660);
	ctx.lineTo(549.714970, 652.095970);
	ctx.closePath();
	ctx.moveTo(551.704530, 659.170040);
	ctx.lineTo(635.322010, 659.501640);
	ctx.bezierCurveTo(631.556000, 669.682360, 628.506600, 683.263000, 627.861100, 695.700880);
	ctx.lineTo(536.561640, 696.032470);
	ctx.bezierCurveTo(536.510140, 689.680200, 537.556620, 684.618760, 539.988130, 679.452670);
	ctx.bezierCurveTo(542.624330, 673.851680, 546.872830, 667.377250, 551.704530, 659.170040);
	ctx.closePath();
	ctx.fill();
	
// #path11851
	ctx.beginPath();
	ctx.fillStyle = 'rgb(124, 133, 78)';
	ctx.lineWidth = 7.074050;
	ctx.moveTo(582.416160, 615.952020);
	ctx.bezierCurveTo(579.115180, 613.168470, 562.707880, 637.283210, 557.371600, 652.307050);
	ctx.lineTo(566.643150, 652.213850);
	ctx.bezierCurveTo(571.438160, 635.859090, 584.743400, 617.914480, 582.416160, 615.952030);
	ctx.closePath();
	ctx.fill();
	
// #path11853
	ctx.beginPath();
	ctx.fillStyle = 'rgb(124, 133, 78)';
	ctx.lineWidth = 7.074050;
	ctx.moveTo(634.883010, 652.447730);
	ctx.bezierCurveTo(636.949090, 636.896920, 633.969560, 611.216150, 632.318910, 616.643150);
	ctx.bezierCurveTo(631.383000, 619.720260, 629.377060, 632.947950, 627.823510, 641.180270);
	ctx.bezierCurveTo(626.753740, 646.848990, 626.059580, 650.083670, 625.175890, 652.416750);
	ctx.closePath();
	ctx.fill();
	
// #path11893
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 5.305540;
	ctx.moveTo(562.094540, 472.647250);
	ctx.bezierCurveTo(557.041280, 472.977670, 552.878260, 474.545040, 549.991280, 478.063310);
	ctx.bezierCurveTo(546.141990, 482.754360, 545.016100, 489.912450, 545.625270, 500.390780);
	ctx.lineTo(550.930810, 500.114450);
	ctx.bezierCurveTo(550.353560, 490.185070, 551.679790, 484.360810, 554.080970, 481.434540);
	ctx.bezierCurveTo(556.482150, 478.508270, 560.336710, 477.504450, 567.013220, 478.008050);
	ctx.bezierCurveTo(573.716920, 478.513720, 580.747410, 480.104760, 585.472060, 484.363640);
	ctx.bezierCurveTo(590.196720, 488.622520, 593.182570, 495.669650, 591.496060, 508.791220);
	ctx.lineTo(596.746330, 509.454410);
	ctx.bezierCurveTo(598.572300, 495.247630, 595.136150, 485.907530, 589.009090, 480.384490);
	ctx.bezierCurveTo(582.882020, 474.861440, 574.623800, 473.247390, 567.400080, 472.702510);
	ctx.bezierCurveTo(565.543850, 472.562440, 563.778960, 472.537160, 562.094540, 472.647310);
	ctx.closePath();
	ctx.fill();
	
// #path11916
	ctx.save();
	ctx.beginPath();
	ctx.transform(0.465501, 0.885047, -0.833246, 0.552902, 0.000000, 0.000000);
	ctx.globalAlpha = 1.0;
	ctx.fillStyle = 'rgb(188, 218, 188)';
	ctx.lineWidth = 1.790920;
	ctx.moveTo(881.154300, -192.086694);
	ctx.bezierCurveTo(886.807430, -192.086694, 891.390197, -187.197436, 891.390197, -181.166230);
	ctx.bezierCurveTo(891.390197, -175.135024, 886.807430, -170.245766, 881.154300, -170.245766);
	ctx.bezierCurveTo(875.501170, -170.245766, 870.918403, -175.135024, 870.918403, -181.166230);
	ctx.bezierCurveTo(870.918403, -187.197436, 875.501170, -192.086694, 881.154300, -192.086694);
	ctx.fill();
	ctx.restore();
	
// #path11918
	ctx.save();
	ctx.beginPath();
	ctx.transform(0.789704, -0.613487, 0.613487, 0.789704, 0.000000, 0.000000);
	ctx.globalAlpha = 1.0;
	ctx.fillStyle = 'rgba(213, 255, 251, 0.587879)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(125.522770, 921.868266);
	ctx.bezierCurveTo(129.743335, 921.868266, 133.164780, 926.635222, 133.164780, 932.515560);
	ctx.bezierCurveTo(133.164780, 938.395898, 129.743335, 943.162854, 125.522770, 943.162854);
	ctx.bezierCurveTo(121.302205, 943.162854, 117.880760, 938.395898, 117.880760, 932.515560);
	ctx.bezierCurveTo(117.880760, 926.635222, 121.302205, 921.868266, 125.522770, 921.868266);
	ctx.fill();
	ctx.restore();
	
// #path11920
	ctx.beginPath();
	ctx.fillStyle = 'rgb(57, 63, 37)';
	ctx.lineWidth = 3.890730;
	ctx.globalAlpha = 1.0;
	ctx.moveTo(638.748500, 659.170040);
	ctx.bezierCurveTo(630.853380, 665.115710, 610.443250, 675.887200, 579.667350, 677.675560);
	ctx.bezierCurveTo(610.102610, 682.609660, 626.634470, 672.412100, 640.737990, 662.486000);
	ctx.closePath();
	ctx.fill();
	
// #path11922
	ctx.beginPath();
	ctx.fillStyle = 'rgb(57, 63, 37)';
	ctx.lineWidth = 3.006470;
	ctx.moveTo(633.221900, 673.649740);
	ctx.bezierCurveTo(628.149560, 682.300450, 622.774450, 678.245730, 614.566850, 684.036600);
	ctx.bezierCurveTo(627.780130, 684.401780, 630.493530, 683.837410, 635.708870, 675.307720);
	ctx.closePath();
	ctx.fill();
	
// #path11924
	ctx.beginPath();
	ctx.fillStyle = 'rgb(57, 63, 37)';
	ctx.lineWidth = 3.890730;
	ctx.moveTo(728.887370, 642.345440);
	ctx.bezierCurveTo(720.427710, 651.089990, 708.659280, 653.748560, 693.805000, 658.348850);
	ctx.bezierCurveTo(702.887490, 658.814290, 716.279610, 659.193190, 731.147350, 647.274110);
	ctx.closePath();
	ctx.fill();
	
// #path11926
	ctx.beginPath();
	ctx.fillStyle = 'rgb(57, 63, 37)';
	ctx.lineWidth = 2.652770;
	ctx.moveTo(730.637150, 658.337940);
	ctx.bezierCurveTo(726.855560, 659.878400, 723.281400, 660.601600, 722.152710, 664.763770);
	ctx.bezierCurveTo(725.737280, 664.919400, 730.022080, 664.128560, 731.914200, 663.259730);
	ctx.closePath();
	ctx.fill();
	
// #path11938
	ctx.beginPath();
	ctx.fillStyle = 'rgb(0, 0, 0)';
	ctx.lineWidth = 4.774980;
	ctx.moveTo(652.828580, 252.412180);
	ctx.bezierCurveTo(652.935220, 259.125790, 683.771110, 260.522950, 683.771110, 260.522950);
	ctx.lineTo(684.967300, 253.702050);
	ctx.closePath();
	ctx.fill();
	
// #path11940
	ctx.beginPath();
	ctx.fillStyle = 'rgb(0, 0, 0)';
	ctx.lineWidth = 4.774980;
	ctx.moveTo(683.693260, 263.353720);
	ctx.lineTo(655.380860, 270.174220);
	ctx.bezierCurveTo(658.535820, 273.605630, 673.135560, 270.838810, 683.762980, 267.653260);
	ctx.closePath();
	ctx.fill();
	
// #path11942
	ctx.beginPath();
	ctx.fillStyle = 'rgba(0, 0, 0, 0.969697)';
	ctx.lineWidth = 4.774980;
	ctx.moveTo(922.815810, 249.372550);
	ctx.lineTo(906.183590, 252.344340);
	ctx.lineTo(906.486620, 257.524280);
	ctx.lineTo(923.755330, 254.070160);
	ctx.closePath();
	ctx.fill();
	
// #path11942-9
	ctx.beginPath();
	ctx.fillStyle = 'rgba(0, 0, 0, 0.969697)';
	ctx.lineWidth = 4.774980;
	ctx.moveTo(927.547520, 258.559900);
	ctx.lineTo(906.630580, 262.291480);
	ctx.lineTo(906.851240, 265.906370);
	ctx.bezierCurveTo(913.286820, 264.565770, 926.440230, 262.785230, 927.547520, 258.559900);
	ctx.closePath();
	ctx.fill();
	
// #path7253
	ctx.beginPath();
	ctx.fillStyle = 'rgb(233, 233, 233)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(889.104200, 353.334660);
	ctx.lineTo(852.120440, 356.547070);
	ctx.bezierCurveTo(840.257670, 358.812080, 835.044310, 364.771210, 828.745240, 370.127160);
	ctx.bezierCurveTo(820.158420, 383.321430, 819.975310, 396.515690, 820.283510, 409.709960);
	ctx.lineTo(850.709930, 410.140500);
	ctx.closePath();
	ctx.fill();
	
// #path7241
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 255, 209)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(887.205770, 350.686830);
	ctx.lineTo(847.903040, 410.648910);
	ctx.lineTo(854.009620, 410.915110);
	ctx.lineTo(891.369450, 352.112070);
	ctx.closePath();
	ctx.fill();
	
// #path7243
	ctx.beginPath();
	ctx.fillStyle = 'rgb(168, 255, 229)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(823.944910, 379.910870);
	ctx.lineTo(823.050610, 383.136570);
	ctx.bezierCurveTo(827.302240, 382.339840, 841.433480, 386.952670, 848.225420, 383.071170);
	ctx.closePath();
	ctx.fill();
	
// #path12064
	ctx.beginPath();
	ctx.fillStyle = 'rgb(253, 254, 253)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(886.044620, 355.079650);
	ctx.lineTo(847.183470, 356.211800);
	ctx.lineTo(834.395390, 362.752360);
	ctx.lineTo(824.029980, 378.640110);
	ctx.lineTo(819.735090, 410.999400);
	ctx.lineTo(851.379390, 412.761580);
	ctx.lineTo(864.392560, 390.015850);
	ctx.lineTo(876.992660, 370.383170);
	ctx.closePath();
	ctx.fill();
	
// #path12052
	ctx.beginPath();
	ctx.fillStyle = 'rgb(197, 208, 210)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(885.179650, 353.106860);
	ctx.lineTo(849.809410, 411.246700);
	ctx.lineTo(854.451750, 411.578300);
	ctx.lineTo(893.801150, 352.554200);
	ctx.closePath();
	ctx.fill();
	
// #path12058
	ctx.beginPath();
	ctx.fillStyle = 'rgb(197, 208, 210)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(824.221240, 378.142360);
	ctx.lineTo(823.226450, 381.900450);
	ctx.bezierCurveTo(821.095560, 381.028630, 832.169630, 387.721930, 845.222330, 383.668960);
	ctx.bezierCurveTo(835.586460, 382.896510, 828.726170, 381.921960, 824.221240, 378.142360);
	ctx.closePath();
	ctx.fill();
	
// #path11516
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 5.305540;
	ctx.moveTo(863.136190, 299.216960);
	ctx.bezierCurveTo(867.465490, 312.881090, 889.370780, 317.829030, 895.571200, 317.383210);
	ctx.bezierCurveTo(901.753590, 317.023280, 904.053480, 322.735930, 903.362170, 327.795020);
	ctx.bezierCurveTo(901.233590, 342.895640, 896.001090, 345.675320, 889.324610, 348.796110);
	ctx.bezierCurveTo(882.648120, 351.916900, 872.054780, 351.393590, 862.907450, 351.338350);
	ctx.bezierCurveTo(823.001360, 348.313610, 817.543060, 381.130180, 816.760420, 414.396870);
	ctx.bezierCurveTo(830.191670, 414.197710, 843.621560, 413.685910, 857.049340, 413.291550);
	ctx.bezierCurveTo(844.372630, 420.492310, 823.253620, 419.020910, 803.993970, 415.999580);
	ctx.bezierCurveTo(778.281020, 411.965900, 744.417380, 401.804010, 719.162270, 387.275330);
	ctx.bezierCurveTo(731.724360, 397.393890, 757.129420, 411.365870, 780.731010, 417.035890);
	ctx.bezierCurveTo(819.877230, 426.440350, 856.508200, 427.966960, 872.835760, 408.779400);
	ctx.bezierCurveTo(855.979690, 408.553050, 838.657640, 407.992800, 821.801490, 407.772740);
	ctx.bezierCurveTo(821.152360, 389.149780, 827.307460, 353.919470, 864.676050, 356.864950);
	ctx.bezierCurveTo(873.684780, 356.919450, 885.469780, 357.940770, 893.801240, 354.046380);
	ctx.bezierCurveTo(902.132700, 350.151990, 909.446190, 342.380580, 910.823170, 326.137040);
	ctx.bezierCurveTo(911.149520, 322.287260, 910.107740, 315.896810, 907.009730, 313.646920);
	ctx.bezierCurveTo(904.167710, 311.582950, 897.642840, 310.132270, 894.212880, 310.377630);
	ctx.bezierCurveTo(887.352960, 310.868360, 872.235720, 307.383720, 863.136190, 299.216960);
	ctx.closePath();
	ctx.fill();
	
// #path11983
	ctx.beginPath();
	ctx.globalAlpha = 1.0;
	ctx.fillStyle = 'rgba(255, 255, 255, 0.927273)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(882.870910, 288.981734);
	ctx.bezierCurveTo(886.000767, 288.981734, 888.538018, 291.864974, 888.538018, 295.421630);
	ctx.bezierCurveTo(888.538018, 298.978286, 886.000767, 301.861526, 882.870910, 301.861526);
	ctx.bezierCurveTo(879.741053, 301.861526, 877.203802, 298.978286, 877.203802, 295.421630);
	ctx.bezierCurveTo(877.203802, 291.864974, 879.741053, 288.981734, 882.870910, 288.981734);
	ctx.fill();
	
// #path11820
	ctx.beginPath();
	ctx.fillStyle = 'rgb(218, 192, 98)';
	ctx.strokeStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 3.537020;
	ctx.lineCap = 'round';
	ctx.lineJoin = 'round';
	ctx.globalAlpha = 1.0;
	ctx.moveTo(710.152190, 345.402930);
	ctx.bezierCurveTo(736.378270, 334.569950, 760.605390, 325.661510, 803.220160, 332.549530);
	ctx.bezierCurveTo(761.260910, 325.112770, 735.714370, 332.469230, 710.152190, 345.402930);
	ctx.closePath();
	ctx.fill();
	ctx.stroke();
	
// #path12030
	ctx.beginPath();
	ctx.fillStyle = 'rgb(0, 0, 0)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(795.317120, 269.434110);
	ctx.lineTo(788.464130, 267.776130);
	ctx.bezierCurveTo(794.701990, 276.027990, 800.765130, 300.286440, 799.049190, 316.540250);
	ctx.bezierCurveTo(802.938900, 302.772600, 801.692040, 277.425470, 795.317120, 269.434110);
	ctx.closePath();
	ctx.fill();
	
// #path11520
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 8.842560;
	ctx.moveTo(619.515930, 86.558875);
	ctx.bezierCurveTo(589.920540, 118.334060, 586.936710, 161.571760, 595.917340, 198.969950);
	ctx.bezierCurveTo(598.696150, 212.915600, 612.647340, 268.075540, 650.703750, 272.252680);
	ctx.bezierCurveTo(634.224660, 263.078190, 613.002090, 232.343670, 604.483570, 196.869840);
	ctx.bezierCurveTo(596.245700, 162.564730, 598.945880, 124.398050, 623.605610, 95.622501);
	ctx.bezierCurveTo(651.668330, 114.858960, 665.062110, 135.057140, 683.750950, 169.025440);
	ctx.bezierCurveTo(685.915540, 139.483100, 636.740430, 83.156144, 619.515930, 86.558875);
	ctx.closePath();
	ctx.fill();
	
// #path11495
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 3.537020;
	ctx.moveTo(437.248620, 532.113480);
	ctx.lineTo(435.259040, 534.987310);
	ctx.lineTo(499.367610, 578.702720);
	ctx.lineTo(501.357190, 575.828890);
	ctx.closePath();
	ctx.fill();
	
// #path11497
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 3.537020;
	ctx.moveTo(426.471740, 491.935080);
	ctx.lineTo(424.647960, 495.029980);
	ctx.lineTo(497.267510, 537.253210);
	ctx.lineTo(499.036020, 534.213580);
	ctx.closePath();
	ctx.fill();
	
// #path11499
	ctx.beginPath();
	ctx.fillStyle = 'rgb(165, 140, 60)';
	ctx.lineWidth = 3.537020;
	ctx.moveTo(449.628200, 478.063310);
	ctx.lineTo(448.136020, 481.213480);
	ctx.lineTo(529.984990, 519.623360);
	ctx.lineTo(531.477170, 516.417930);
	ctx.closePath();
	ctx.fill();
	
// #path10518
	ctx.beginPath();
	ctx.fillStyle = 'rgb(220, 194, 100)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(734.690300, 249.040950);
	ctx.lineTo(733.331980, 254.154290);
	ctx.lineTo(761.969900, 258.776370);
	ctx.lineTo(759.442420, 248.562890);
	ctx.closePath();
	ctx.fill();
	
// #path11934
	ctx.beginPath();
	ctx.fillStyle = 'rgb(0, 0, 0)';
	ctx.lineWidth = 5.482390;
	ctx.moveTo(673.658070, 239.249970);
	ctx.bezierCurveTo(656.135080, 233.150430, 677.451400, 248.123560, 689.587040, 251.597780);
	ctx.bezierCurveTo(689.587040, 251.597780, 757.943480, 263.761220, 780.026240, 267.711490);
	ctx.bezierCurveTo(802.108980, 271.661770, 821.153470, 274.633770, 822.243660, 273.469330);
	ctx.bezierCurveTo(823.333840, 272.304890, 820.855020, 267.101760, 820.855020, 267.101760);
	ctx.bezierCurveTo(815.552240, 251.399350, 797.565210, 232.772760, 804.311560, 250.262630);
	ctx.lineTo(809.467920, 263.630420);
	ctx.lineTo(689.899720, 246.237070);
	ctx.closePath();
	ctx.fill();
	{
// #layer1

// #path10428
		ctx.beginPath();
		ctx.fillStyle = 'rgb(154, 154, 156)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(803.930340, 48.283466);
		ctx.lineTo(766.640670, 50.473136);
		ctx.lineTo(733.034410, 67.548295);
		ctx.lineTo(794.491190, 80.204214);
		ctx.lineTo(926.961540, 127.901300);
		ctx.lineTo(894.718370, 87.113395);
		ctx.lineTo(899.113320, 80.466755);
		ctx.lineTo(919.029760, 86.600760);
		ctx.lineTo(869.720520, 60.807374);
		ctx.lineTo(866.037970, 60.106357);
		ctx.closePath();
		ctx.fill();

// #path10426
		ctx.beginPath();
		ctx.fillStyle = 'rgb(82, 82, 84)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(657.026550, 121.143530);
		ctx.lineTo(675.731460, 147.886040);
		ctx.lineTo(736.952780, 166.435440);
		ctx.lineTo(814.018270, 227.618980);
		ctx.lineTo(803.836380, 186.841490);
		ctx.lineTo(849.923950, 212.353770);
		ctx.lineTo(826.835970, 149.102190);
		ctx.lineTo(748.310730, 94.272721);
		ctx.lineTo(706.585140, 82.594961);
		ctx.closePath();
		ctx.fill();

// #path10405
		ctx.beginPath();
		ctx.fillStyle = 'rgb(115, 115, 115)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(340.271740, 451.281780);
		ctx.lineTo(288.762580, 525.475310);
		ctx.lineTo(225.528110, 727.388940);
		ctx.lineTo(251.637130, 705.519870);
		ctx.lineTo(334.628360, 528.175550);
		ctx.lineTo(405.696960, 466.040400);
		ctx.lineTo(482.343540, 463.633950);
		ctx.lineTo(496.184660, 439.687360);
		ctx.lineTo(408.239650, 417.707040);
		ctx.closePath();
		ctx.fill();

// #path10398
		ctx.beginPath();
		ctx.fillStyle = 'rgb(77, 75, 78)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(300.901440, 407.641610);
		ctx.lineTo(237.705200, 509.328260);
		ctx.lineTo(185.499440, 681.330240);
		ctx.lineTo(140.871460, 798.167600);
		ctx.lineTo(188.812000, 766.644930);
		ctx.lineTo(232.758720, 690.024200);
		ctx.lineTo(280.578520, 520.295290);
		ctx.lineTo(341.713980, 438.529390);
		ctx.lineTo(439.876150, 415.172110);
		ctx.lineTo(500.186170, 438.324130);
		ctx.bezierCurveTo(487.074880, 412.405040, 469.492750, 393.192230, 445.399480, 383.746120);
		ctx.lineTo(366.044640, 379.484930);
		ctx.closePath();
		ctx.fill();

// #path10391
		ctx.beginPath();
		ctx.fillStyle = 'rgb(2, 2, 4)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(321.213720, 351.558790);
		ctx.lineTo(283.199160, 364.060250);
		ctx.lineTo(239.263900, 389.502560);
		ctx.lineTo(200.297730, 432.351900);
		ctx.lineTo(245.333400, 411.340510);
		ctx.lineTo(261.982580, 411.945500);
		ctx.lineTo(221.369800, 466.367930);
		ctx.lineTo(170.002820, 606.742720);
		ctx.lineTo(131.108670, 689.026510);
		ctx.lineTo(150.677030, 679.650600);
		ctx.lineTo(186.039220, 634.159400);
		ctx.lineTo(207.211160, 577.863830);
		ctx.lineTo(246.914180, 477.775810);
		ctx.lineTo(286.207220, 422.318020);
		ctx.lineTo(350.288330, 381.276290);
		ctx.lineTo(439.561670, 377.148510);
		ctx.lineTo(379.880340, 354.407260);
		ctx.closePath();
		ctx.fill();

// #path10384
		ctx.beginPath();
		ctx.fillStyle = 'rgb(153, 153, 155)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(183.484250, 768.896810);
		ctx.lineTo(226.933950, 732.632010);
		ctx.bezierCurveTo(289.167370, 550.897320, 327.965710, 363.400450, 489.889040, 450.414270);
		ctx.lineTo(501.375850, 436.333720);
		ctx.bezierCurveTo(358.462610, 353.093740, 303.098780, 432.249540, 264.854930, 537.205090);
		ctx.bezierCurveTo(238.030240, 610.822130, 229.111680, 695.900510, 183.484250, 768.896810);
		ctx.closePath();
		ctx.fill();

// #path10378
		ctx.beginPath();
		ctx.fillStyle = 'rgb(82, 82, 84)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(481.634400, 462.428660);
		ctx.bezierCurveTo(316.649930, 420.278570, 288.249160, 631.693480, 250.079340, 705.396940);
		ctx.lineTo(246.259870, 732.188360);
		ctx.lineTo(227.484450, 792.273270);
		ctx.lineTo(278.222090, 732.733310);
		ctx.lineTo(312.954930, 628.256230);
		ctx.lineTo(321.450080, 660.899220);
		ctx.lineTo(349.075660, 570.027890);
		ctx.lineTo(374.062480, 527.975070);
		ctx.lineTo(415.345160, 484.999670);
		ctx.lineTo(472.473920, 472.219000);
		ctx.closePath();
		ctx.fill();

// #path12008
		ctx.save();
		ctx.beginPath();
		ctx.transform(0.995864, -0.090862, 0.044352, 0.999016, 0.000000, 0.000000);
		ctx.globalAlpha = 1.0;
		ctx.fillStyle = 'rgb(255, 255, 255)';
		ctx.lineWidth = 2.004430;
		ctx.moveTo(858.243650, 272.230004);
		ctx.bezierCurveTo(878.504720, 272.230004, 894.929563, 306.046992, 894.929563, 347.762360);
		ctx.bezierCurveTo(894.929563, 389.477728, 878.504720, 423.294716, 858.243650, 423.294716);
		ctx.bezierCurveTo(837.982580, 423.294716, 821.557737, 389.477728, 821.557737, 347.762360);
		ctx.bezierCurveTo(821.557737, 306.046992, 837.982580, 272.230004, 858.243650, 272.230004);
		ctx.fill();
		ctx.restore();

// #path11991
		ctx.save();
		ctx.beginPath();
		ctx.transform(0.999977, -0.006768, -0.016617, 0.999862, 0.000000, 0.000000);
		ctx.globalAlpha = 1.0;
		ctx.lineWidth = 2.305540;
		ctx.moveTo(881.554080, 236.958520);
		ctx.bezierCurveTo(893.704109, 236.958520, 903.553653, 256.787931, 903.553653, 281.248750);
		ctx.bezierCurveTo(903.553653, 305.709569, 893.704109, 325.538980, 881.554080, 325.538980);
		ctx.bezierCurveTo(869.404051, 325.538980, 859.554507, 305.709569, 859.554507, 281.248750);
		ctx.bezierCurveTo(859.554507, 256.787931, 869.404051, 236.958520, 881.554080, 236.958520);
		ctx.fill();
		ctx.restore();

// #path11996
		ctx.beginPath();
		ctx.lineWidth = 1.768510;
		ctx.globalAlpha = 1.0;
		ctx.moveTo(887.831490, 284.365610);
		ctx.lineTo(885.530920, 289.513470);
		ctx.lineTo(893.920280, 301.970660);
		ctx.bezierCurveTo(896.023240, 296.265700, 897.347620, 290.560760, 898.201830, 284.855820);
		ctx.closePath();
		ctx.fill();

// #path11994
		ctx.beginPath();
		ctx.lineWidth = 1.768510;
		ctx.moveTo(888.416620, 275.318860);
		ctx.lineTo(886.674650, 285.330420);
		ctx.lineTo(898.131740, 285.429120);
		ctx.bezierCurveTo(898.734190, 280.440230, 898.888190, 276.497740, 898.829420, 273.051700);
		ctx.closePath();
		ctx.fill();

// #path12038
		ctx.beginPath();
		ctx.globalAlpha = 1.0;
		ctx.fillStyle = 'rgb(0, 0, 0)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(873.463260, 232.682216);
		ctx.bezierCurveTo(884.268252, 232.682216, 893.027429, 250.349030, 893.027429, 272.142150);
		ctx.bezierCurveTo(893.027429, 293.935270, 884.268252, 311.602084, 873.463260, 311.602084);
		ctx.bezierCurveTo(862.658268, 311.602084, 853.899091, 293.935270, 853.899091, 272.142150);
		ctx.bezierCurveTo(853.899091, 250.349030, 862.658268, 232.682216, 873.463260, 232.682216);
		ctx.fill();

// #path11952
		ctx.save();
		ctx.beginPath();
		ctx.transform(0.911336, -0.411664, 0.413245, 0.910620, 0.000000, 0.000000);
		ctx.globalAlpha = 1.0;
		ctx.fillStyle = 'rgb(255, 255, 255)';
		ctx.lineWidth = 1.746480;
		ctx.moveTo(560.269840, 485.716197);
		ctx.bezierCurveTo(590.920862, 485.716197, 615.768425, 520.692578, 615.768425, 563.838130);
		ctx.bezierCurveTo(615.768425, 606.983682, 590.920862, 641.960063, 560.269840, 641.960063);
		ctx.bezierCurveTo(529.618818, 641.960063, 504.771255, 606.983682, 504.771255, 563.838130);
		ctx.bezierCurveTo(504.771255, 520.692578, 529.618818, 485.716197, 560.269840, 485.716197);
		ctx.fill();
		ctx.restore();

// #path11960
		ctx.save();
		ctx.beginPath();
		ctx.transform(0.976277, -0.216523, 0.350848, 0.936432, 0.000000, 0.000000);
		ctx.globalAlpha = 1.0;
		ctx.lineWidth = 1.543870;
		ctx.moveTo(617.140080, 400.056412);
		ctx.bezierCurveTo(635.820838, 400.056412, 650.964585, 424.228110, 650.964585, 454.045410);
		ctx.bezierCurveTo(650.964585, 483.862710, 635.820838, 508.034408, 617.140080, 508.034408);
		ctx.bezierCurveTo(598.459322, 508.034408, 583.315575, 483.862710, 583.315575, 454.045410);
		ctx.bezierCurveTo(583.315575, 424.228110, 598.459322, 400.056412, 617.140080, 400.056412);
		ctx.fill();
		ctx.restore();

// #path10503
		ctx.beginPath();
		ctx.fillStyle = 'rgb(219, 193, 98)';
		ctx.lineWidth = 1.768510;
		ctx.globalAlpha = 1.0;
		ctx.moveTo(531.195300, 628.763280);
		ctx.lineTo(514.679980, 693.406760);
		ctx.lineTo(518.600790, 761.807110);
		ctx.lineTo(563.774040, 644.274620);
		ctx.closePath();
		ctx.fill();

// #path10496
		ctx.beginPath();
		ctx.fillStyle = 'rgb(219, 193, 98)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(614.292660, 795.929440);
		ctx.lineTo(614.930990, 835.859480);
		ctx.lineTo(622.465890, 849.924370);
		ctx.lineTo(645.440140, 847.536390);
		ctx.lineTo(646.113950, 839.137990);
		ctx.closePath();
		ctx.fill();

// #path11489
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(528.161210, 621.147020);
		ctx.bezierCurveTo(528.069110, 621.384200, 526.957430, 624.182800, 525.895300, 626.894690);
		ctx.bezierCurveTo(524.833170, 629.606580, 523.923780, 632.061430, 523.684660, 632.697620);
		ctx.bezierCurveTo(511.244890, 665.795260, 508.784840, 701.617220, 509.481290, 730.629000);
		ctx.bezierCurveTo(509.829530, 745.134880, 510.960430, 757.931060, 512.078800, 767.823020);
		ctx.bezierCurveTo(513.197170, 777.714990, 514.308590, 784.923020, 514.510500, 787.276660);
		ctx.lineTo(514.510500, 787.552990);
		ctx.lineTo(514.565700, 787.829320);
		ctx.bezierCurveTo(517.606270, 801.709930, 518.846350, 813.310900, 520.644960, 823.089040);
		ctx.bezierCurveTo(522.443570, 832.867180, 524.845440, 841.149470, 530.979710, 847.406080);
		ctx.bezierCurveTo(537.113970, 853.662690, 546.369180, 857.163460, 560.215430, 858.625080);
		ctx.bezierCurveTo(574.028220, 860.083170, 592.804230, 859.629010, 619.073730, 857.575030);
		ctx.bezierCurveTo(619.120630, 857.573030, 619.192400, 857.577030, 619.239440, 857.575030);
		ctx.bezierCurveTo(625.947660, 857.241540, 635.765840, 857.087030, 643.390690, 854.590660);
		ctx.bezierCurveTo(647.229930, 853.333710, 651.118260, 851.381960, 652.730650, 847.129750);
		ctx.bezierCurveTo(654.343030, 842.877540, 652.616220, 838.151920, 649.027820, 833.644850);
		ctx.bezierCurveTo(634.329770, 815.183770, 626.498710, 801.576460, 618.134120, 787.387190);
		ctx.lineTo(573.092320, 625.126180);
		ctx.lineTo(564.581350, 627.502610);
		ctx.lineTo(609.733690, 790.205760);
		ctx.lineTo(609.899400, 790.813680);
		ctx.lineTo(610.230990, 791.311080);
		ctx.bezierCurveTo(618.684690, 805.640220, 626.843440, 819.984400, 642.119480, 839.171450);
		ctx.bezierCurveTo(644.781500, 842.515010, 644.592360, 843.725240, 644.495920, 843.979590);
		ctx.bezierCurveTo(644.399520, 844.233940, 643.326770, 845.306430, 640.627300, 846.190230);
		ctx.bezierCurveTo(635.228350, 847.957840, 625.541520, 848.383500, 618.631430, 848.732470);
		ctx.lineTo(618.576230, 848.732470);
		ctx.lineTo(618.521030, 848.732470);
		ctx.bezierCurveTo(592.381480, 850.781160, 573.962940, 851.189810, 561.154910, 849.837790);
		ctx.bezierCurveTo(548.346880, 848.485760, 541.517820, 845.482280, 537.335260, 841.216290);
		ctx.bezierCurveTo(533.152690, 836.950300, 531.020080, 830.719600, 529.321690, 821.486320);
		ctx.bezierCurveTo(527.623290, 812.253040, 526.396640, 800.349770, 523.242420, 785.950280);
		ctx.bezierCurveTo(522.921240, 782.512820, 521.933600, 776.271280, 520.865990, 766.828230);
		ctx.bezierCurveTo(519.767620, 757.113090, 518.663800, 744.573240, 518.323750, 730.407930);
		ctx.bezierCurveTo(517.643630, 702.077340, 520.087610, 667.272000, 531.919190, 635.792520);
		ctx.bezierCurveTo(531.910190, 635.813920, 533.068370, 632.810270, 534.129830, 630.100120);
		ctx.bezierCurveTo(535.191290, 627.389960, 536.249850, 624.727730, 536.395740, 624.352450);
		ctx.closePath();
		ctx.fill();

// #path11969
		ctx.beginPath();
		ctx.lineWidth = 1.768510;
		ctx.moveTo(751.835800, 307.459940);
		ctx.lineTo(738.417480, 317.506770);
		ctx.bezierCurveTo(741.563450, 322.088050, 745.127070, 326.515450, 749.667810, 330.582850);
		ctx.lineTo(760.369670, 315.237210);
		ctx.closePath();
		ctx.fill();

// #path11971
		ctx.beginPath();
		ctx.lineWidth = 1.768510;
		ctx.moveTo(748.559010, 302.109520);
		ctx.lineTo(730.306530, 302.669040);
		ctx.bezierCurveTo(732.581030, 308.231670, 735.496600, 312.960920, 738.497680, 317.579000);
		ctx.lineTo(754.046760, 306.339380);
		ctx.closePath();
		ctx.fill();

// #path11963
		ctx.save();
		ctx.beginPath();
		ctx.transform(0.952188, -0.305513, 0.286738, 0.958009, 0.000000, 0.000000);
		ctx.globalAlpha = 1.0;
		ctx.fillStyle = 'rgb(0, 0, 0)';
		ctx.lineWidth = 1.716500;
		ctx.moveTo(655.036250, 461.800167);
		ctx.bezierCurveTo(670.159569, 461.800167, 682.419442, 481.375551, 682.419442, 505.523010);
		ctx.bezierCurveTo(682.419442, 529.670469, 670.159569, 549.245853, 655.036250, 549.245853);
		ctx.bezierCurveTo(639.912931, 549.245853, 627.653058, 529.670469, 627.653058, 505.523010);
		ctx.bezierCurveTo(627.653058, 481.375551, 639.912931, 461.800167, 655.036250, 461.800167);
		ctx.fill();
		ctx.restore();

// #path7194
		ctx.beginPath();
		ctx.globalAlpha = 1.0;
		ctx.fillStyle = 'rgb(220, 194, 99)';
		ctx.lineWidth = 2.421090;
		ctx.moveTo(620.999670, 91.467551);
		ctx.lineTo(595.053790, 145.344210);
		ctx.lineTo(606.401290, 224.231700);
		ctx.lineTo(633.389940, 262.712280);
		ctx.lineTo(636.065120, 457.600530);
		ctx.lineTo(542.721230, 426.025910);
		ctx.lineTo(515.751080, 428.525160);
		ctx.lineTo(480.690640, 465.787960);
		ctx.lineTo(474.735810, 478.576320);
		ctx.lineTo(432.974930, 479.847390);
		ctx.lineTo(422.037750, 494.434490);
		ctx.lineTo(434.961330, 539.792390);
		ctx.lineTo(446.676200, 560.496030);
		ctx.lineTo(449.135180, 628.633030);
		ctx.lineTo(433.925670, 626.708340);
		ctx.lineTo(381.908820, 725.725120);
		ctx.lineTo(347.621870, 840.360010);
		ctx.lineTo(352.733920, 874.824210);
		ctx.lineTo(443.148500, 881.239320);
		ctx.lineTo(463.757870, 869.019430);
		ctx.lineTo(450.385320, 823.739570);
		ctx.lineTo(454.373790, 766.725940);
		ctx.lineTo(475.864300, 692.959490);
		ctx.lineTo(522.242420, 617.509650);
		ctx.lineTo(532.483930, 629.077030);
		ctx.lineTo(563.683390, 642.781610);
		ctx.lineTo(541.455130, 689.294210);
		ctx.lineTo(518.705750, 765.756800);
		ctx.lineTo(508.448770, 850.122320);
		ctx.lineTo(510.411020, 887.913440);
		ctx.lineTo(529.153520, 902.600630);
		ctx.lineTo(626.491510, 900.764120);
		ctx.lineTo(622.475990, 870.965060);
		ctx.lineTo(623.305050, 853.652340);
		ctx.lineTo(613.994260, 830.008940);
		ctx.lineTo(611.527980, 812.586500);
		ctx.lineTo(613.260610, 787.763200);
		ctx.lineTo(623.972470, 665.550550);
		ctx.lineTo(633.772420, 638.143860);
		ctx.lineTo(650.822280, 636.818930);
		ctx.lineTo(678.776130, 750.722390);
		ctx.lineTo(719.657570, 854.130920);
		ctx.lineTo(760.069360, 866.852190);
		ctx.lineTo(824.915970, 861.899360);
		ctx.lineTo(798.776470, 822.984430);
		ctx.lineTo(754.790960, 737.422350);
		ctx.lineTo(711.138370, 606.637940);
		ctx.lineTo(727.329240, 580.129470);
		ctx.lineTo(728.760810, 560.454880);
		ctx.lineTo(749.529060, 539.855370);
		ctx.lineTo(754.246700, 535.291670);
		ctx.lineTo(789.982540, 416.732080);
		ctx.lineTo(841.707820, 421.588680);
		ctx.lineTo(863.131330, 413.637500);
		ctx.lineTo(820.078700, 411.397470);
		ctx.lineTo(823.729740, 377.564110);
		ctx.lineTo(841.570680, 357.567190);
		ctx.lineTo(884.873400, 353.069370);
		ctx.lineTo(904.413700, 344.940220);
		ctx.lineTo(909.105820, 321.852630);
		ctx.lineTo(900.143220, 314.185080);
		ctx.lineTo(890.285530, 314.343890);
		ctx.lineTo(871.075060, 306.363940);
		ctx.lineTo(863.498910, 299.841080);
		ctx.bezierCurveTo(855.840460, 287.721270, 854.462630, 279.040020, 853.864090, 271.324160);
		ctx.bezierCurveTo(853.717480, 269.434750, 854.164140, 267.238950, 854.698120, 265.429000);
		ctx.lineTo(893.536180, 240.002990);
		ctx.lineTo(862.494080, 219.354720);
		ctx.lineTo(803.515370, 183.695710);
		ctx.lineTo(818.892550, 233.613040);
		ctx.lineTo(767.316260, 184.863050);
		ctx.lineTo(729.455950, 162.985740);
		ctx.lineTo(677.987070, 148.270370);
		ctx.lineTo(657.257800, 121.266580);
		ctx.closePath();
		ctx.moveTo(792.764760, 264.599420);
		ctx.bezierCurveTo(793.844260, 271.103620, 798.060360, 276.861190, 798.656330, 281.995340);
		ctx.bezierCurveTo(802.058300, 311.302810, 798.290610, 320.296210, 795.442010, 331.893760);
		ctx.bezierCurveTo(761.634010, 326.930980, 739.622500, 332.906020, 718.351540, 340.480280);
		ctx.bezierCurveTo(680.111640, 304.799340, 680.856180, 257.106100, 686.586670, 249.658770);
		ctx.closePath();
		ctx.fill();

// #path11039
		ctx.beginPath();
		ctx.fillStyle = 'rgb(108, 116, 69)';
		ctx.lineWidth = 1.768510;
		ctx.globalAlpha = 1.0;
		ctx.moveTo(650.630690, 635.681980);
		ctx.lineTo(648.692350, 659.591210);
		ctx.lineTo(655.715170, 677.242030);
		ctx.lineTo(736.624610, 677.242030);
		ctx.lineTo(729.771620, 639.219010);
		ctx.closePath();
		ctx.fill();

// #path10476
		ctx.beginPath();
		ctx.fillStyle = 'rgb(157, 165, 105)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(574.733900, 427.082140);
		ctx.lineTo(539.487840, 508.974610);
		ctx.lineTo(536.828000, 569.881460);
		ctx.lineTo(552.831390, 638.938290);
		ctx.lineTo(566.557450, 642.864320);
		ctx.lineTo(562.017980, 654.845780);
		ctx.lineTo(629.308940, 658.021130);
		ctx.lineTo(631.450340, 643.994060);
		ctx.lineTo(651.032390, 639.333540);
		ctx.lineTo(717.104270, 636.623400);
		ctx.lineTo(708.869540, 601.415000);
		ctx.bezierCurveTo(749.191730, 540.359850, 732.357810, 586.815090, 727.412180, 552.719560);
		ctx.lineTo(719.080700, 546.904060);
		ctx.lineTo(698.947990, 545.971500);
		ctx.lineTo(656.156450, 567.453080);
		ctx.lineTo(632.943040, 455.950330);
		ctx.lineTo(615.963290, 447.720720);
		ctx.closePath();
		ctx.fill();

// #path11041
		ctx.beginPath();
		ctx.fillStyle = 'rgb(108, 116, 69)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(548.941230, 656.462010);
		ctx.lineTo(538.744530, 674.453220);
		ctx.lineTo(532.361420, 698.464180);
		ctx.lineTo(631.398120, 700.232690);
		ctx.lineTo(639.577490, 656.019880);
		ctx.closePath();
		ctx.fill();

// #path10458
		ctx.beginPath();
		ctx.fillStyle = 'rgb(108, 116, 69)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(554.332950, 426.420510);
		ctx.lineTo(510.306620, 530.575450);
		ctx.lineTo(529.916920, 624.297190);
		ctx.lineTo(555.384260, 639.918650);
		ctx.bezierCurveTo(549.765270, 597.401670, 538.121720, 562.327910, 550.851750, 507.539940);
		ctx.bezierCurveTo(556.019520, 485.298670, 563.769690, 457.800530, 579.800270, 428.358870);
		ctx.closePath();
		ctx.fill();

// #path11010
		ctx.beginPath();
		ctx.fillStyle = 'rgb(123, 132, 85)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(580.277060, 423.460490);
		ctx.lineTo(577.624290, 431.916190);
		ctx.bezierCurveTo(599.670340, 438.775990, 612.731860, 451.531440, 630.458600, 467.618040);
		ctx.lineTo(634.050890, 458.057020);
		ctx.bezierCurveTo(615.447850, 444.034270, 602.998110, 430.226890, 580.277060, 423.460490);
		ctx.closePath();
		ctx.fill();

// #path11891
		ctx.beginPath();
		ctx.fillStyle = 'rgb(123, 132, 85)';
		ctx.lineWidth = 7.074050;
		ctx.moveTo(633.976890, 462.138110);
		ctx.lineTo(619.641190, 481.905530);
		ctx.bezierCurveTo(630.282450, 481.585080, 632.420940, 480.233880, 635.418410, 471.185460);
		ctx.closePath();
		ctx.fill();

// #path10377
		ctx.beginPath();
		ctx.fillStyle = 'rgb(99, 100, 68)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(713.380950, 599.151150);
		ctx.lineTo(705.565110, 599.869610);
		ctx.bezierCurveTo(706.804500, 614.929250, 711.001410, 627.982710, 715.236660, 640.600660);
		ctx.lineTo(723.637100, 637.782090);
		ctx.bezierCurveTo(719.428020, 625.242170, 714.520060, 612.992500, 713.380950, 599.151150);
		ctx.closePath();
		ctx.fill();

// #path11481
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(517.218540, 614.128240);
		ctx.bezierCurveTo(468.075340, 681.907490, 433.124730, 767.084260, 454.602140, 849.506190);
		ctx.bezierCurveTo(457.255600, 859.689110, 456.928780, 866.055880, 455.320600, 869.623020);
		ctx.bezierCurveTo(453.712420, 873.190160, 450.890870, 875.008600, 445.593780, 876.199680);
		ctx.bezierCurveTo(434.999620, 878.581830, 416.342230, 876.197680, 396.130700, 876.310210);
		ctx.bezierCurveTo(375.370260, 876.426400, 362.688060, 874.556670, 356.670770, 871.115200);
		ctx.bezierCurveTo(353.662120, 869.394460, 352.197090, 867.554280, 351.309960, 864.925410);
		ctx.bezierCurveTo(350.422840, 862.296530, 350.251920, 858.597550, 350.978370, 853.706410);
		ctx.bezierCurveTo(366.430180, 749.669700, 397.518220, 688.762380, 436.917020, 633.747670);
		ctx.bezierCurveTo(438.471240, 631.577430, 440.345690, 630.908080, 443.051550, 630.652780);
		ctx.bezierCurveTo(445.757410, 630.397480, 448.956200, 630.879480, 451.783580, 631.205440);
		ctx.lineTo(452.778370, 622.418140);
		ctx.bezierCurveTo(450.349310, 622.138120, 446.470290, 621.464700, 442.222560, 621.865480);
		ctx.bezierCurveTo(437.974820, 622.266260, 432.994160, 624.053410, 429.732440, 628.607940);
		ctx.bezierCurveTo(389.808820, 684.355480, 357.878750, 747.182590, 342.246340, 852.435290);
		ctx.bezierCurveTo(341.402790, 858.114920, 341.419610, 863.164980, 342.964800, 867.743980);
		ctx.bezierCurveTo(344.509980, 872.322970, 347.785320, 876.157110, 352.304750, 878.741910);
		ctx.bezierCurveTo(361.343640, 883.911540, 374.946310, 885.271560, 396.185970, 885.152770);
		ctx.bezierCurveTo(415.597500, 885.044180, 433.890170, 887.887720, 447.528090, 884.821170);
		ctx.bezierCurveTo(454.347050, 883.287890, 460.473270, 879.739050, 463.389440, 873.270580);
		ctx.bezierCurveTo(466.305610, 866.802100, 466.078250, 858.462500, 463.168380, 847.295550);
		ctx.bezierCurveTo(442.659500, 768.590500, 476.105540, 685.860010, 524.347850, 619.323240);
		ctx.closePath();
		ctx.fill();

// #path11855
		ctx.beginPath();
		ctx.fillStyle = 'rgb(57, 63, 37)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(554.449460, 634.159150);
		ctx.bezierCurveTo(543.695640, 629.114600, 534.581540, 622.050400, 527.829610, 613.133450);
		ctx.lineTo(515.841590, 612.042080);
		ctx.lineTo(520.755560, 618.438990);
		ctx.bezierCurveTo(528.920090, 629.221490, 539.886370, 637.473310, 552.677160, 643.115820);
		ctx.closePath();
		ctx.fill();

// #path11487
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(667.376300, 676.523570);
		ctx.lineTo(658.589000, 677.739420);
		ctx.bezierCurveTo(658.560700, 677.542360, 658.790420, 679.621400, 658.920600, 681.276450);
		ctx.bezierCurveTo(659.050760, 682.931490, 659.070570, 684.169730, 659.252190, 685.366130);
		ctx.bezierCurveTo(668.084070, 743.536520, 693.527850, 818.813570, 714.960330, 852.048430);
		ctx.bezierCurveTo(720.361760, 860.424300, 729.736840, 864.897570, 740.603760, 867.357110);
		ctx.bezierCurveTo(751.470690, 869.816650, 764.176550, 870.423450, 777.631990, 870.673070);
		ctx.bezierCurveTo(790.700420, 870.915520, 804.435110, 871.056380, 814.604960, 868.959830);
		ctx.bezierCurveTo(819.689870, 867.911540, 824.123250, 866.470540, 827.150340, 862.880570);
		ctx.bezierCurveTo(828.663890, 861.085580, 829.615700, 858.626640, 829.582050, 856.138110);
		ctx.bezierCurveTo(829.548450, 853.649590, 828.691160, 851.217390, 827.316140, 848.843000);
		ctx.bezierCurveTo(815.960790, 829.234630, 808.368330, 824.568930, 798.798880, 811.704240);
		ctx.bezierCurveTo(777.765570, 783.428110, 751.358870, 718.736830, 736.845670, 682.271230);
		ctx.bezierCurveTo(736.719580, 681.954550, 736.361120, 680.964130, 736.016680, 680.115860);
		ctx.bezierCurveTo(735.771360, 679.518670, 735.736160, 679.435650, 735.629820, 679.176340);
		ctx.bezierCurveTo(735.565120, 679.016460, 735.511330, 678.906500, 735.464110, 678.789480);
		ctx.bezierCurveTo(735.450010, 678.755180, 735.420810, 678.708480, 735.408910, 678.678940);
		ctx.bezierCurveTo(735.342210, 678.476770, 735.354310, 678.565760, 735.353710, 678.568410);
		ctx.bezierCurveTo(735.329110, 678.510910, 735.269910, 678.353340, 735.243180, 678.292080);
		ctx.bezierCurveTo(735.232580, 678.266580, 735.278380, 678.310480, 735.187980, 678.126370);
		ctx.bezierCurveTo(735.165380, 678.080370, 735.022270, 677.850220, 735.022270, 677.850040);
		ctx.lineTo(733.972210, 676.578920);
		ctx.lineTo(726.898160, 681.166000);
		ctx.bezierCurveTo(726.898220, 681.166200, 726.992560, 681.393800, 727.008700, 681.442330);
		ctx.bezierCurveTo(727.136740, 681.830500, 727.107600, 681.688770, 727.119230, 681.718660);
		ctx.bezierCurveTo(727.142730, 681.778460, 727.144530, 681.810060, 727.174430, 681.884370);
		ctx.bezierCurveTo(727.178430, 681.894970, 727.167430, 681.868470, 727.229630, 681.994900);
		ctx.bezierCurveTo(727.286030, 682.134970, 727.311130, 682.284360, 727.395340, 682.492300);
		ctx.bezierCurveTo(727.532760, 682.831430, 727.667750, 683.068760, 727.837470, 683.487090);
		ctx.bezierCurveTo(728.181550, 684.335160, 728.597060, 685.357570, 728.666460, 685.531930);
		ctx.bezierCurveTo(743.202040, 722.053800, 769.006670, 786.413170, 791.724980, 816.954510);
		ctx.bezierCurveTo(801.983270, 830.745230, 808.884630, 834.661620, 819.689590, 853.319550);
		ctx.bezierCurveTo(820.548460, 854.802660, 820.733220, 855.774520, 820.739640, 856.248640);
		ctx.bezierCurveTo(820.746640, 856.722770, 820.734640, 856.801760, 820.408040, 857.188170);
		ctx.bezierCurveTo(819.756400, 857.960990, 817.061700, 859.412040, 812.836600, 860.283060);
		ctx.bezierCurveTo(804.386420, 862.025100, 790.783160, 862.071420, 777.797950, 861.830510);
		ctx.bezierCurveTo(764.521490, 861.584190, 752.240270, 860.876240, 742.538230, 858.680350);
		ctx.bezierCurveTo(732.836190, 856.484460, 726.057530, 852.934010, 722.421400, 847.295550);
		ctx.bezierCurveTo(702.612590, 816.578490, 676.601990, 740.798760, 667.984380, 684.039750);
		ctx.bezierCurveTo(668.022780, 684.292730, 667.837950, 682.209320, 667.708050, 680.557990);
		ctx.bezierCurveTo(667.578060, 678.906660, 667.538620, 677.654040, 667.376280, 676.523570);
		ctx.closePath();
		ctx.moveTo(735.574560, 680.281660);
		ctx.bezierCurveTo(735.579560, 680.359660, 735.574560, 680.557990, 735.574560, 680.557990);
		ctx.bezierCurveTo(735.574560, 680.557990, 734.639610, 680.764230, 734.303440, 680.834320);
		ctx.closePath();
		ctx.fill();

// #path11888
		ctx.beginPath();
		ctx.fillStyle = 'rgb(57, 63, 37)';
		ctx.lineWidth = 7.074050;
		ctx.moveTo(733.142850, 633.858210);
		ctx.lineTo(729.992690, 633.913410);
		ctx.lineTo(651.017560, 634.245010);
		ctx.lineTo(647.812130, 634.245010);
		ctx.lineTo(647.535800, 637.450440);
		ctx.bezierCurveTo(646.090570, 652.384700, 644.767490, 666.190500, 653.228200, 679.176280);
		ctx.lineTo(654.278250, 680.779080);
		ctx.lineTo(656.212560, 680.779080);
		ctx.lineTo(741.045890, 680.779080);
		ctx.lineTo(746.572490, 680.779080);
		ctx.lineTo(744.196050, 675.749870);
		ctx.bezierCurveTo(735.986880, 658.302440, 734.945340, 648.731130, 733.529710, 637.008400);
		ctx.closePath();
		ctx.moveTo(727.008320, 640.987520);
		ctx.bezierCurveTo(728.188980, 650.434030, 729.940770, 660.086240, 735.740350, 673.705000);
		ctx.lineTo(658.367940, 673.705000);
		ctx.bezierCurveTo(652.886940, 664.194380, 653.113700, 653.931490, 654.278250, 641.319120);
		ctx.closePath();
		ctx.fill();

// #path7286
		ctx.beginPath();
		ctx.fillStyle = 'rgb(124, 133, 78)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(741.874880, 547.532690);
		ctx.bezierCurveTo(715.371830, 600.280720, 671.643840, 629.884680, 629.574340, 639.661140);
		ctx.lineTo(631.619180, 648.282640);
		ctx.bezierCurveTo(676.215780, 637.918910, 722.118670, 606.505760, 749.777920, 551.456580);
		ctx.closePath();
		ctx.fill();

// #path10485
		ctx.beginPath();
		ctx.fillStyle = 'rgb(154, 167, 98)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(632.489360, 635.279170);
		ctx.lineTo(572.766700, 631.791880);
		ctx.lineTo(564.984840, 653.674490);
		ctx.lineTo(628.815920, 653.607590);
		ctx.closePath();
		ctx.fill();

// #path12011
		ctx.beginPath();
		ctx.globalAlpha = 1.0;
		ctx.fillStyle = 'rgb(255, 255, 255)';
		ctx.lineWidth = 1.706130;
		ctx.moveTo(745.830020, 249.311971);
		ctx.bezierCurveTo(755.013630, 249.311971, 762.458417, 261.844452, 762.458417, 277.304050);
		ctx.bezierCurveTo(762.458417, 292.763648, 755.013630, 305.296129, 745.830020, 305.296129);
		ctx.bezierCurveTo(736.646410, 305.296129, 729.201623, 292.763648, 729.201623, 277.304050);
		ctx.bezierCurveTo(729.201623, 261.844452, 736.646410, 249.311971, 745.830020, 249.311971);
		ctx.fill();

// #path11966
		ctx.save();
		ctx.beginPath();
		ctx.transform(0.721354, 0.692566, -0.619390, 0.785083, 0.000000, 0.000000);
		ctx.globalAlpha = 1.0;
		ctx.fillStyle = 'rgb(255, 255, 255)';
		ctx.lineWidth = 1.686670;
		ctx.moveTo(798.339840, -323.100881);
		ctx.bezierCurveTo(802.190433, -323.100881, 805.311955, -319.235433, 805.311955, -314.467160);
		ctx.bezierCurveTo(805.311955, -309.698887, 802.190433, -305.833439, 798.339840, -305.833439);
		ctx.bezierCurveTo(794.489247, -305.833439, 791.367725, -309.698887, 791.367725, -314.467160);
		ctx.bezierCurveTo(791.367725, -319.235433, 794.489247, -323.100881, 798.339840, -323.100881);
		ctx.fill();
		ctx.restore();

// #path11986
		ctx.beginPath();
		ctx.globalAlpha = 1.0;
		ctx.fillStyle = 'rgba(255, 255, 255, 0.927273)';
		ctx.lineWidth = 1.672840;
		ctx.moveTo(866.384830, 246.392570);
		ctx.bezierCurveTo(872.834233, 246.392570, 878.062507, 256.003369, 878.062507, 267.858890);
		ctx.bezierCurveTo(878.062507, 279.714411, 872.834233, 289.325210, 866.384830, 289.325210);
		ctx.bezierCurveTo(859.935427, 289.325210, 854.707153, 279.714411, 854.707153, 267.858890);
		ctx.bezierCurveTo(854.707153, 256.003369, 859.935427, 246.392570, 866.384830, 246.392570);
		ctx.fill();

// #path10524
		ctx.beginPath();
		ctx.fillStyle = 'rgb(218, 192, 98)';
		ctx.lineWidth = 1.768510;
		ctx.globalAlpha = 1.0;
		ctx.moveTo(856.372020, 244.918180);
		ctx.lineTo(855.659490, 257.284650);
		ctx.lineTo(874.853350, 247.513490);
		ctx.lineTo(867.494530, 242.187970);
		ctx.closePath();
		ctx.fill();

// #path11847
		ctx.beginPath();
		ctx.fillStyle = 'rgb(32, 37, 33)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(335.338090, 346.364400);
		ctx.bezierCurveTo(273.566530, 349.898070, 217.000230, 384.024860, 195.404540, 439.929770);
		ctx.bezierCurveTo(192.020930, 447.966720, 189.658700, 454.538170, 187.755640, 460.450810);
		ctx.bezierCurveTo(191.990180, 455.768720, 194.896200, 452.082880, 202.533860, 444.848440);
		ctx.bezierCurveTo(217.727770, 431.070240, 235.806510, 416.587200, 256.141890, 413.346810);
		ctx.bezierCurveTo(221.166210, 448.422520, 200.167900, 500.992080, 181.201170, 553.833020);
		ctx.bezierCurveTo(160.684710, 610.991450, 135.431410, 690.218030, 100.493440, 713.912290);
		ctx.bezierCurveTo(127.881650, 717.295000, 168.939420, 662.162330, 178.489390, 647.398060);
		ctx.bezierCurveTo(171.425200, 675.787110, 153.462320, 710.758220, 133.672400, 735.492410);
		ctx.bezierCurveTo(109.473310, 765.737330, 97.165911, 775.619330, 67.730896, 783.766320);
		ctx.bezierCurveTo(38.295881, 791.913310, 20.731953, 790.705680, 20.731953, 790.705680);
		ctx.bezierCurveTo(20.731953, 790.705680, 23.365675, 793.913500, 44.859910, 797.998270);
		ctx.bezierCurveTo(66.354144, 802.083030, 102.335150, 802.006300, 147.599430, 774.952340);
		ctx.bezierCurveTo(142.461050, 785.387980, 111.840090, 809.269070, 98.963780, 811.752320);
		ctx.bezierCurveTo(98.963780, 811.752320, 115.303880, 814.293550, 140.944710, 802.576630);
		ctx.bezierCurveTo(166.585560, 790.859720, 209.950940, 763.345330, 244.528230, 717.361090);
		ctx.bezierCurveTo(241.096250, 739.619460, 222.351330, 793.987190, 202.299210, 815.474490);
		ctx.bezierCurveTo(202.299210, 815.474490, 215.810260, 808.790370, 229.641990, 798.022000);
		ctx.bezierCurveTo(254.301750, 778.823740, 274.963650, 749.244750, 292.921010, 702.119690);
		ctx.bezierCurveTo(298.691940, 686.975140, 305.107520, 668.478520, 310.081520, 649.940620);
		ctx.bezierCurveTo(311.205200, 657.868660, 313.880780, 678.826740, 323.330060, 689.117360);
		ctx.bezierCurveTo(329.252300, 625.046750, 345.210080, 582.780540, 365.679130, 546.758970);
		ctx.bezierCurveTo(378.212100, 525.265510, 393.651180, 506.289090, 411.936780, 493.814130);
		ctx.bezierCurveTo(430.222390, 481.339170, 451.206230, 475.256100, 475.879560, 479.168630);
		ctx.lineTo(477.261210, 470.436600);
		ctx.bezierCurveTo(450.376300, 466.173380, 426.768570, 473.006980, 406.962840, 486.519010);
		ctx.bezierCurveTo(387.157110, 500.031050, 370.978670, 520.075000, 357.997150, 542.337690);
		ctx.bezierCurveTo(337.298160, 577.835520, 324.868510, 618.525430, 318.979350, 649.443220);
		ctx.bezierCurveTo(317.222060, 637.544460, 322.467540, 577.085490, 325.540700, 552.901300);
		ctx.bezierCurveTo(317.024240, 582.178290, 315.112140, 591.380940, 309.939450, 613.508450);
		ctx.bezierCurveTo(296.670300, 670.270520, 273.535000, 736.237430, 236.323280, 777.637050);
		ctx.bezierCurveTo(245.663790, 752.928630, 251.647590, 714.790820, 253.433940, 704.322370);
		ctx.bezierCurveTo(255.220300, 693.853930, 257.610660, 686.329070, 257.610660, 686.329070);
		ctx.lineTo(245.420280, 701.724870);
		ctx.bezierCurveTo(216.938430, 741.304820, 183.024210, 770.432250, 148.981080, 788.658310);
		ctx.bezierCurveTo(199.622000, 719.617490, 194.088450, 681.122410, 209.560010, 624.523710);
		ctx.bezierCurveTo(249.836890, 477.181340, 294.386570, 346.845530, 456.136490, 392.073820);
		ctx.lineTo(427.981260, 373.702020);
		ctx.bezierCurveTo(246.594980, 338.694450, 199.084090, 577.559540, 191.954630, 605.094270);
		ctx.lineTo(179.764260, 631.592300);
		ctx.bezierCurveTo(167.700820, 649.061900, 152.653890, 666.663350, 138.977930, 680.557990);
		ctx.bezierCurveTo(159.183750, 645.351380, 173.699700, 600.811800, 189.491080, 556.817380);
		ctx.bezierCurveTo(209.932680, 499.867500, 232.575740, 444.168820, 270.566320, 411.578300);
		ctx.lineTo(278.856220, 404.504250);
		ctx.lineTo(267.968820, 403.841060);
		ctx.bezierCurveTo(246.574890, 402.539730, 228.172490, 412.770140, 212.647540, 424.786880);
		ctx.bezierCurveTo(265.081680, 336.263190, 422.596700, 321.255190, 499.036020, 441.200880);
		ctx.lineTo(506.496930, 436.448010);
		ctx.bezierCurveTo(464.089950, 369.904560, 397.109640, 342.830740, 335.338090, 346.364400);
		ctx.closePath();
		ctx.fill();

// #path11485
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(539.103880, 697.469390);
		ctx.bezierCurveTo(538.971240, 697.755800, 538.134150, 699.482100, 537.335370, 701.172210);
		ctx.bezierCurveTo(536.536580, 702.862330, 535.809190, 704.381320, 535.456320, 705.206630);
		ctx.bezierCurveTo(523.779680, 732.516090, 497.712410, 818.645260, 504.396820, 886.313360);
		ctx.bezierCurveTo(504.989890, 892.317150, 508.771930, 897.035400, 513.626250, 899.964060);
		ctx.bezierCurveTo(518.480570, 902.892720, 524.440060, 904.510090, 530.924510, 905.601190);
		ctx.bezierCurveTo(543.893380, 907.783400, 559.140420, 907.658580, 570.881840, 908.088170);
		ctx.bezierCurveTo(583.876510, 908.563610, 594.961020, 908.867370, 604.151980, 908.198700);
		ctx.bezierCurveTo(613.342940, 907.530020, 620.802640, 906.019620, 626.313650, 901.953640);
		ctx.bezierCurveTo(631.824650, 897.887650, 634.410390, 890.991370, 633.719290, 882.886860);
		ctx.bezierCurveTo(633.028190, 874.782350, 629.639720, 864.964460, 623.605610, 852.214230);
		ctx.bezierCurveTo(616.876410, 837.995230, 615.388340, 814.025640, 616.586830, 787.552990);
		ctx.bezierCurveTo(617.785310, 761.080340, 621.443500, 732.099710, 623.992470, 706.919880);
		ctx.bezierCurveTo(624.018670, 706.660810, 624.158180, 705.345350, 624.268800, 704.377640);
		ctx.bezierCurveTo(624.281200, 704.271350, 624.313000, 704.197980, 624.324000, 704.101310);
		ctx.bezierCurveTo(624.338100, 703.979990, 624.311600, 703.874140, 624.324000, 703.769710);
		ctx.bezierCurveTo(624.331000, 703.698610, 624.372500, 703.611080, 624.379200, 703.548650);
		ctx.bezierCurveTo(624.377200, 703.564550, 624.359400, 703.557650, 624.324000, 703.714360);
		ctx.bezierCurveTo(624.329000, 703.675860, 624.320000, 703.576950, 624.324000, 703.548650);
		ctx.bezierCurveTo(624.329000, 703.512950, 624.376700, 703.566350, 624.379200, 703.548650);
		ctx.bezierCurveTo(624.383200, 703.518050, 624.375200, 703.466450, 624.379200, 703.438120);
		ctx.bezierCurveTo(624.388200, 703.352520, 624.426900, 703.297170, 624.434400, 703.217050);
		ctx.bezierCurveTo(624.438400, 703.177050, 624.429400, 703.119950, 624.434400, 703.051340);
		ctx.bezierCurveTo(624.439400, 702.982740, 624.434660, 702.391600, 624.434400, 702.388150);
		ctx.lineTo(624.323870, 701.890760);
		ctx.lineTo(623.715940, 700.288040);
		ctx.lineTo(617.968270, 698.795860);
		ctx.lineTo(616.144500, 700.619640);
		ctx.lineTo(615.868170, 701.227570);
		ctx.bezierCurveTo(615.868020, 701.227940, 615.776570, 701.437880, 615.757630, 701.503900);
		ctx.bezierCurveTo(615.719630, 701.636000, 615.714630, 701.725400, 615.702430, 701.780230);
		ctx.bezierCurveTo(615.652930, 701.999520, 615.655930, 702.003540, 615.647230, 702.056560);
		ctx.bezierCurveTo(615.629530, 702.162670, 615.606230, 702.232700, 615.592030, 702.332890);
		ctx.bezierCurveTo(615.590030, 702.345290, 615.594030, 702.375190, 615.592030, 702.388090);
		ctx.bezierCurveTo(615.592420, 702.384090, 615.596030, 702.400490, 615.592030, 702.443290);
		ctx.bezierCurveTo(615.590030, 702.464890, 615.596030, 702.465890, 615.592030, 702.498490);
		ctx.bezierCurveTo(615.565830, 702.687680, 615.525930, 702.881410, 615.481500, 703.216950);
		ctx.lineTo(615.536700, 703.216950);
		ctx.bezierCurveTo(615.430060, 704.151910, 615.263900, 705.454770, 615.205100, 706.035510);
		ctx.bezierCurveTo(612.673700, 731.041550, 608.966350, 760.170330, 607.744190, 787.166020);
		ctx.bezierCurveTo(606.522020, 814.161710, 607.511910, 838.954130, 615.591960, 856.027470);
		ctx.bezierCurveTo(621.409520, 868.320100, 624.405180, 877.483460, 624.931920, 883.660480);
		ctx.bezierCurveTo(625.458650, 889.837510, 624.175970, 892.527700, 621.063300, 894.824220);
		ctx.bezierCurveTo(617.950630, 897.120730, 612.025880, 898.738940, 603.543970, 899.356030);
		ctx.bezierCurveTo(595.062060, 899.973120, 584.148380, 899.718770, 571.213350, 899.245500);
		ctx.bezierCurveTo(559.161930, 898.804550, 544.133840, 898.849950, 532.361350, 896.869060);
		ctx.bezierCurveTo(526.475100, 895.878600, 521.485350, 894.366590, 518.213250, 892.392510);
		ctx.bezierCurveTo(514.941140, 890.418430, 513.485540, 888.481140, 513.184040, 885.428990);
		ctx.bezierCurveTo(506.799360, 820.795200, 532.717220, 734.039840, 543.580350, 708.633020);
		ctx.bezierCurveTo(543.637450, 708.499320, 544.500270, 706.608760, 545.293590, 704.930190);
		ctx.bezierCurveTo(546.086910, 703.251630, 546.881280, 701.681840, 547.117370, 701.172100);
		ctx.closePath();
		ctx.moveTo(615.592040, 703.217050);
		ctx.lineTo(624.103010, 704.377640);
		ctx.bezierCurveTo(624.025210, 704.551480, 623.256600, 703.256770, 623.256690, 703.256610);
		ctx.lineTo(621.846580, 703.595390);
		ctx.lineTo(616.154180, 700.852680);
		ctx.lineTo(615.647310, 703.603920);
		ctx.bezierCurveTo(615.647340, 703.604110, 615.612610, 703.366070, 615.592110, 703.217050);
		ctx.closePath();
		ctx.fill();

// #path11501
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(552.920380, 418.099690);
		ctx.bezierCurveTo(522.358520, 416.786230, 490.959510, 432.026480, 471.734610, 475.465810);
		ctx.bezierCurveTo(451.635690, 520.880030, 437.014250, 528.935810, 444.626480, 625.666970);
		ctx.lineTo(447.004510, 647.193590);
		ctx.bezierCurveTo(452.965070, 640.063420, 455.750440, 630.171650, 455.818000, 625.347240);
		ctx.bezierCurveTo(448.263780, 529.353060, 459.371110, 525.350560, 479.858710, 479.058100);
		ctx.bezierCurveTo(497.991270, 438.086960, 525.015200, 425.759590, 552.533520, 426.942250);
		ctx.closePath();
		ctx.fill();

// #path10512
		ctx.beginPath();
		ctx.fillStyle = 'rgb(219, 193, 99)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(507.981000, 483.267990);
		ctx.lineTo(450.684610, 478.412080);
		ctx.lineTo(423.850830, 485.420790);
		ctx.lineTo(428.352980, 523.177160);
		ctx.lineTo(453.994430, 567.106910);
		ctx.lineTo(495.352280, 603.413030);
		ctx.lineTo(536.493520, 616.598160);
		ctx.lineTo(576.576590, 611.270610);
		ctx.lineTo(604.895740, 593.850650);
		ctx.lineTo(616.277850, 564.694280);
		ctx.lineTo(613.912170, 536.950500);
		ctx.lineTo(597.628390, 511.297550);
		ctx.lineTo(592.858980, 485.208870);
		ctx.lineTo(567.040060, 475.039300);
		ctx.bezierCurveTo(552.097620, 471.047430, 546.044210, 480.389140, 545.740490, 498.355370);
		ctx.closePath();
		ctx.fill();

// #path11493
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 7.074050;
		ctx.moveTo(596.801600, 504.148870);
		ctx.lineTo(591.274990, 508.570150);
		ctx.bezierCurveTo(615.158380, 538.525550, 615.691100, 566.331870, 603.267720, 585.666240);
		ctx.bezierCurveTo(590.844340, 605.000610, 564.843460, 616.258090, 533.411480, 611.088610);
		ctx.lineTo(532.250890, 618.052130);
		ctx.bezierCurveTo(565.936770, 623.592290, 595.062260, 611.538750, 609.236450, 589.479600);
		ctx.bezierCurveTo(623.410630, 567.420450, 622.011880, 535.768510, 596.801600, 504.148870);
		ctx.closePath();
		ctx.fill();

// #path11514
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(786.032430, 415.004790);
		ctx.bezierCurveTo(775.936430, 460.222310, 758.919110, 507.803080, 741.764350, 547.422160);
		ctx.lineTo(749.888450, 550.903920);
		ctx.bezierCurveTo(767.221630, 510.872810, 784.385780, 462.927660, 794.653920, 416.939100);
		ctx.closePath();
		ctx.fill();

// #path11105
		ctx.beginPath();
		ctx.fillStyle = 'rgb(108, 116, 69)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(675.832000, 492.929870);
		ctx.lineTo(667.652630, 565.770480);
		ctx.lineTo(703.907130, 543.664070);
		ctx.lineTo(726.870730, 559.085480);
		ctx.lineTo(752.458840, 552.080480);
		ctx.lineTo(767.773610, 588.395380);
		ctx.lineTo(784.789990, 520.253710);
		ctx.lineTo(773.224260, 499.503680);
		ctx.lineTo(756.891530, 534.368210);
		ctx.lineTo(726.919310, 559.718660);
		ctx.lineTo(718.718420, 520.341810);
		ctx.closePath();
		ctx.fill();

// #path11900
		ctx.beginPath();
		ctx.fillStyle = 'rgb(57, 63, 37)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(774.923960, 485.800560);
		ctx.lineTo(771.221130, 495.472110);
		ctx.bezierCurveTo(760.949350, 522.205950, 749.768740, 539.664140, 726.124070, 559.359620);
		ctx.lineTo(731.263810, 566.488940);
		ctx.bezierCurveTo(738.153810, 562.188440, 744.908640, 557.901150, 750.717440, 557.480580);
		ctx.bezierCurveTo(753.056390, 572.731910, 757.319830, 585.791560, 764.644480, 595.393060);
		ctx.lineTo(772.658050, 605.948870);
		ctx.lineTo(772.602850, 592.685030);
		ctx.bezierCurveTo(772.445810, 571.399020, 776.978910, 548.590230, 787.469410, 522.331390);
		ctx.lineTo(787.745740, 521.612930);
		ctx.lineTo(787.745740, 520.783940);
		ctx.bezierCurveTo(787.874840, 510.498730, 782.815730, 502.549240, 779.345310, 495.195780);
		ctx.closePath();
		ctx.moveTo(775.476620, 507.741160);
		ctx.bezierCurveTo(777.351630, 511.909020, 778.792830, 516.010250, 778.847840, 520.176020);
		ctx.bezierCurveTo(770.869540, 540.394820, 766.228870, 558.890520, 764.533950, 576.381550);
		ctx.bezierCurveTo(761.943040, 569.515480, 760.002130, 561.555710, 758.841550, 552.451370);
		ctx.lineTo(758.399420, 549.301210);
		ctx.lineTo(755.304520, 548.693280);
		ctx.bezierCurveTo(753.407970, 548.317210, 751.624940, 548.524560, 749.833190, 548.638080);
		ctx.bezierCurveTo(760.932460, 536.299490, 768.782830, 523.165490, 775.476620, 507.741140);
		ctx.closePath();
		ctx.fill();

// #path11936
		ctx.beginPath();
		ctx.fillStyle = 'rgb(0, 0, 0)';
		ctx.lineWidth = 5.482390;
		ctx.moveTo(907.341330, 229.034660);
		ctx.lineTo(850.115800, 258.676200);
		ctx.lineTo(851.221120, 235.421940);
		ctx.bezierCurveTo(848.577620, 227.860610, 833.671840, 278.158080, 849.149180, 269.220900);
		ctx.bezierCurveTo(872.711270, 255.615330, 888.480320, 245.380700, 909.938830, 233.842800);
		ctx.closePath();
		ctx.fill();

// #path11518
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 5.305540;
		ctx.moveTo(910.767820, 241.911640);
		ctx.lineTo(905.462280, 242.298500);
		ctx.bezierCurveTo(907.731090, 271.244930, 907.671610, 298.328650, 899.495850, 316.972260);
		ctx.lineTo(906.909330, 320.408110);
		ctx.bezierCurveTo(914.677660, 302.544060, 913.051690, 271.050520, 910.767820, 241.911640);
		ctx.closePath();
		ctx.fill();

// #path11818
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 3.537020;
		ctx.moveTo(625.338530, 143.423540);
		ctx.bezierCurveTo(616.862750, 166.014810, 632.975100, 219.983960, 651.076890, 226.599120);
		ctx.bezierCurveTo(635.364720, 209.721300, 624.699280, 166.136220, 625.338530, 143.423540);
		ctx.closePath();
		ctx.fill();

// #path11822
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 3.713880;
		ctx.moveTo(768.627380, 349.534230);
		ctx.bezierCurveTo(775.606590, 347.032440, 787.199730, 340.576100, 793.043410, 338.421710);
		ctx.bezierCurveTo(783.329470, 337.932860, 770.496930, 345.274430, 768.627380, 349.534230);
		ctx.closePath();
		ctx.fill();

// #path11824
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 3.890730;
		ctx.moveTo(864.843640, 322.460770);
		ctx.bezierCurveTo(861.638740, 327.036610, 866.365760, 332.794180, 871.284350, 333.125510);
		ctx.bezierCurveTo(876.630280, 333.485640, 882.280360, 328.105080, 880.257250, 325.365190);
		ctx.bezierCurveTo(876.717920, 327.860510, 873.962020, 329.313190, 871.376930, 328.843590);
		ctx.bezierCurveTo(868.928210, 328.398780, 866.606310, 326.202690, 864.843640, 322.460770);
		ctx.closePath();
		ctx.fill();

// #path10419
		ctx.beginPath();
		ctx.fillStyle = 'rgb(115, 115, 115)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(699.086630, 85.041500);
		ctx.lineTo(732.953670, 67.479782);
		ctx.bezierCurveTo(823.949090, 74.762683, 878.054020, 104.130700, 932.098780, 129.617230);
		ctx.lineTo(950.918090, 167.117600);
		ctx.lineTo(904.359330, 128.054770);
		ctx.lineTo(902.033700, 131.524630);
		ctx.lineTo(929.777240, 195.996330);
		ctx.lineTo(960.023610, 258.987560);
		ctx.lineTo(913.461120, 248.161140);
		ctx.lineTo(849.173270, 212.266420);
		ctx.bezierCurveTo(816.714840, 162.370850, 767.351440, 87.661360, 699.086630, 85.041500);
		ctx.closePath();
		ctx.fill();

// #path11826
		ctx.beginPath();
		ctx.fillStyle = 'rgb(0, 0, 0)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(801.506910, 42.125000);
		ctx.bezierCurveTo(775.078970, 42.150680, 748.449720, 48.068724, 719.493440, 65.021151);
		ctx.bezierCurveTo(699.227360, 76.885902, 677.821400, 94.155732, 654.546780, 118.593490);
		ctx.lineTo(661.307030, 125.353740);
		ctx.bezierCurveTo(715.936890, 70.647975, 759.470890, 51.867401, 801.850370, 51.826216);
		ctx.bezierCurveTo(837.486730, 51.791588, 866.872560, 58.968698, 913.172680, 84.397880);
		ctx.bezierCurveTo(888.835790, 75.463210, 853.559020, 61.804957, 803.324130, 69.295896);
		ctx.bezierCurveTo(838.407150, 74.770452, 865.126390, 68.305971, 953.962110, 111.350520);
		ctx.bezierCurveTo(898.973060, 59.664516, 851.997780, 42.849326, 801.506910, 42.125000);
		ctx.closePath();
		ctx.fill();

// #path11828
		ctx.beginPath();
		ctx.fillStyle = 'rgb(0, 0, 0)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(865.476620, 74.748935);
		ctx.lineTo(857.870180, 75.294574);
		ctx.bezierCurveTo(905.312810, 93.294396, 925.734630, 125.050150, 946.665440, 161.693490);
		ctx.bezierCurveTo(928.148620, 136.638340, 890.293360, 111.254590, 848.101470, 108.856370);
		ctx.bezierCurveTo(887.902540, 122.363860, 913.522370, 128.410980, 961.288900, 192.889870);
		ctx.bezierCurveTo(957.277170, 175.343380, 952.303080, 158.902530, 946.385840, 146.030270);
		ctx.bezierCurveTo(929.172710, 108.585240, 905.320090, 90.464484, 883.933790, 77.642021);
		ctx.closePath();
		ctx.fill();

// #path11830
		ctx.beginPath();
		ctx.fillStyle = 'rgb(0, 0, 0)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(901.503400, 126.809730);
		ctx.lineTo(890.245400, 123.990230);
		ctx.bezierCurveTo(909.361140, 150.270210, 918.019000, 176.725310, 924.860650, 198.417290);
		ctx.bezierCurveTo(930.717060, 216.985480, 937.357120, 235.167790, 953.156850, 253.517500);
		ctx.bezierCurveTo(883.275440, 242.154400, 831.634350, 193.814220, 788.992880, 170.081300);
		ctx.lineTo(799.460190, 185.950900);
		ctx.bezierCurveTo(847.667510, 215.420450, 890.902280, 260.911440, 988.722700, 267.287330);
		ctx.bezierCurveTo(953.156850, 253.517500, 940.705160, 219.013840, 933.316350, 195.764520);
		ctx.bezierCurveTo(926.550360, 174.312440, 921.506190, 154.309210, 901.503400, 126.809730);
		ctx.closePath();
		ctx.fill();

// #path11832
		ctx.beginPath();
		ctx.fillStyle = 'rgb(0, 0, 0)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(677.433170, 145.547980);
		ctx.lineTo(678.470030, 153.849550);
		ctx.bezierCurveTo(727.025090, 152.786130, 797.787430, 207.348170, 825.710360, 257.099060);
		ctx.bezierCurveTo(824.869810, 229.048880, 820.683190, 206.904200, 806.116710, 187.588540);
		ctx.lineTo(789.626260, 171.091610);
		ctx.bezierCurveTo(799.301960, 183.852280, 807.651010, 201.487570, 811.344260, 222.292200);
		ctx.bezierCurveTo(773.966290, 177.190730, 726.697790, 145.033080, 677.433170, 145.547980);
		ctx.closePath();
		ctx.fill();

// #path11902
		ctx.beginPath();
		ctx.fillStyle = 'rgb(57, 63, 37)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(695.340900, 464.191540);
		ctx.lineTo(691.748610, 465.683730);
		ctx.lineTo(662.015490, 477.676450);
		ctx.lineTo(659.252190, 478.837040);
		ctx.lineTo(659.252190, 481.821400);
		ctx.lineTo(659.528520, 564.609890);
		ctx.lineTo(659.528520, 568.920640);
		ctx.lineTo(663.784000, 569.031170);
		ctx.bezierCurveTo(674.685770, 569.390730, 688.727120, 561.468270, 712.639160, 540.734970);
		ctx.bezierCurveTo(716.680390, 546.153940, 719.443030, 554.167730, 720.708000, 564.278300);
		ctx.bezierCurveTo(720.725700, 564.413940, 720.746700, 564.528860, 720.763200, 564.665160);
		ctx.lineTo(729.550490, 563.946700);
		ctx.bezierCurveTo(729.546490, 563.844300, 729.554490, 563.717640, 729.550490, 563.615100);
		ctx.bezierCurveTo(729.543490, 563.559600, 729.557490, 563.504750, 729.550490, 563.449390);
		ctx.bezierCurveTo(729.000640, 549.024380, 729.317970, 533.169380, 721.813250, 511.223010);
		ctx.lineTo(721.647540, 510.836150);
		ctx.lineTo(721.481830, 510.449200);
		ctx.lineTo(697.220050, 467.618040);
		ctx.closePath();
		ctx.moveTo(691.472280, 475.300010);
		ctx.lineTo(713.468150, 514.373090);
		ctx.bezierCurveTo(715.914110, 521.576250, 717.333570, 527.820220, 718.331560, 533.771460);
		ctx.bezierCurveTo(717.628220, 532.955360, 717.070040, 532.023710, 716.286720, 531.284490);
		ctx.lineTo(713.357620, 528.521180);
		ctx.lineTo(710.317990, 531.173950);
		ctx.bezierCurveTo(688.927710, 550.114760, 675.906520, 557.427710, 668.371080, 559.359620);
		ctx.lineTo(668.094750, 484.805770);
		ctx.closePath();
		ctx.fill();

// #path10399
		ctx.beginPath();
		ctx.fillStyle = 'rgb(2, 2, 4)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(626.387640, 388.711590);
		ctx.lineTo(628.367900, 434.437330);
		ctx.lineTo(636.517880, 486.684810);
		ctx.lineTo(649.584710, 601.056420);
		ctx.lineTo(671.546480, 560.166660);
		ctx.lineTo(671.160120, 556.725240);
		ctx.lineTo(676.964900, 536.349170);
		ctx.lineTo(661.435990, 470.110930);
		ctx.closePath();
		ctx.fill();

// #path10401
		ctx.beginPath();
		ctx.fillStyle = 'rgb(74, 74, 76)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(634.574510, 263.549370);
		ctx.lineTo(626.736450, 307.630980);
		ctx.lineTo(657.523330, 418.470020);
		ctx.lineTo(704.119180, 489.394950);
		ctx.lineTo(703.608730, 464.792170);
		ctx.lineTo(680.901490, 411.990450);
		ctx.lineTo(714.911950, 407.793980);
		ctx.lineTo(690.125060, 387.772880);
		ctx.lineTo(669.639160, 363.804640);
		ctx.closePath();
		ctx.fill();

// #path10412
		ctx.beginPath();
		ctx.fillStyle = 'rgb(36, 36, 36)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(635.451900, 315.535960);
		ctx.bezierCurveTo(635.081400, 313.685850, 632.099740, 295.865820, 631.182330, 297.593890);
		ctx.bezierCurveTo(620.141360, 318.390610, 625.389230, 391.280710, 629.096700, 399.507000);
		ctx.bezierCurveTo(643.104490, 451.471150, 657.799180, 438.659970, 671.806950, 546.812910);
		ctx.lineTo(679.776150, 494.258610);
		ctx.lineTo(700.658900, 524.600640);
		ctx.lineTo(710.874420, 566.611830);
		ctx.lineTo(708.608490, 488.258810);
		ctx.bezierCurveTo(636.852430, 393.940250, 641.411190, 345.294490, 635.451900, 315.535960);
		ctx.closePath();
		ctx.fill();

// #path10448
		ctx.beginPath();
		ctx.fillStyle = 'rgb(57, 63, 37)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(580.336020, 423.489270);
		ctx.bezierCurveTo(572.549220, 421.161160, 561.825660, 418.613960, 552.809850, 418.099690);
		ctx.lineTo(549.714950, 417.933980);
		ctx.lineTo(548.499100, 420.752550);
		ctx.bezierCurveTo(537.648750, 446.348700, 532.219890, 469.562180, 527.332220, 492.985230);
		ctx.lineTo(535.953720, 494.809000);
		ctx.bezierCurveTo(540.610230, 472.493770, 545.800370, 450.859950, 555.462620, 427.273940);
		ctx.bezierCurveTo(562.848650, 427.935180, 571.121350, 429.891160, 577.617340, 431.882220);
		ctx.fill();

// #path11491
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 7.074050;
		ctx.moveTo(461.952520, 475.631610);
		ctx.bezierCurveTo(455.785990, 475.317860, 450.000830, 475.361060, 444.820060, 475.852670);
		ctx.bezierCurveTo(434.458500, 476.835900, 425.961280, 479.253740, 422.271530, 485.911090);
		ctx.bezierCurveTo(418.834030, 492.113280, 419.739670, 501.431450, 422.879450, 513.212500);
		ctx.bezierCurveTo(426.019230, 524.993550, 431.957930, 539.003780, 440.896170, 553.059290);
		ctx.bezierCurveTo(458.772670, 581.170330, 488.792950, 609.442810, 532.195630, 618.162660);
		ctx.lineTo(534.185200, 611.364940);
		ctx.bezierCurveTo(520.127320, 605.851550, 512.090910, 599.520240, 507.933850, 592.906090);
		ctx.bezierCurveTo(503.776780, 586.291940, 503.166980, 579.164320, 504.783680, 570.910220);
		ctx.lineTo(505.115280, 569.418030);
		ctx.lineTo(504.175760, 568.146920);
		ctx.bezierCurveTo(499.981870, 562.364340, 497.484660, 557.121460, 496.549050, 552.672430);
		ctx.bezierCurveTo(495.613430, 548.223400, 496.165320, 544.675450, 497.985960, 541.563960);
		ctx.bezierCurveTo(501.627280, 535.340990, 511.710430, 530.206060, 529.542860, 528.797510);
		ctx.lineTo(532.140360, 528.631810);
		ctx.lineTo(532.693020, 526.089570);
		ctx.bezierCurveTo(533.693680, 521.814120, 534.766650, 517.915930, 537.390630, 514.760040);
		ctx.bezierCurveTo(540.014610, 511.604140, 544.336480, 508.832650, 552.920380, 507.409660);
		ctx.lineTo(561.984010, 505.917470);
		ctx.lineTo(554.246770, 500.943530);
		ctx.bezierCurveTo(537.509880, 490.247760, 508.258990, 481.569870, 481.406160, 477.621190);
		ctx.bezierCurveTo(474.692960, 476.634020, 468.119060, 475.945360, 461.952520, 475.631610);
		ctx.closePath();
		ctx.moveTo(461.565660, 482.705660);
		ctx.bezierCurveTo(467.468800, 483.004960, 473.836960, 483.681330, 480.356110, 484.639970);
		ctx.bezierCurveTo(502.746500, 487.932460, 526.771710, 494.953370, 542.751440, 502.933020);
		ctx.bezierCurveTo(538.013780, 504.797170, 534.435890, 507.267860, 531.974560, 510.228130);
		ctx.bezierCurveTo(528.793890, 514.053590, 527.487580, 518.252920, 526.503230, 522.110330);
		ctx.bezierCurveTo(509.060940, 523.876380, 497.118930, 528.969540, 491.851440, 537.971670);
		ctx.bezierCurveTo(489.085390, 542.698820, 488.422130, 548.314410, 489.640800, 554.109350);
		ctx.bezierCurveTo(490.776200, 559.508390, 493.628700, 565.149180, 497.709630, 571.020750);
		ctx.bezierCurveTo(496.223380, 579.922310, 496.991190, 588.750370, 501.965120, 596.664180);
		ctx.bezierCurveTo(503.203890, 598.635130, 504.715670, 600.527670, 506.441660, 602.356580);
		ctx.bezierCurveTo(479.625230, 590.143440, 459.903880, 569.805180, 446.864900, 549.301210);
		ctx.bezierCurveTo(438.311530, 535.850910, 432.658620, 522.368350, 429.732440, 511.388720);
		ctx.bezierCurveTo(426.806260, 500.409090, 427.180030, 491.649400, 428.461320, 489.337580);
		ctx.bezierCurveTo(429.992740, 486.574440, 436.021140, 483.824600, 445.483250, 482.926720);
		ctx.bezierCurveTo(450.214310, 482.477790, 455.662530, 482.406360, 461.565660, 482.705660);
		ctx.closePath();
		ctx.fill();

// #path11845
		ctx.beginPath();
		ctx.fillStyle = 'rgb(36, 36, 36)';
		ctx.lineWidth = 7.074050;
		ctx.moveTo(628.966420, 260.481020);
		ctx.bezierCurveTo(615.807160, 338.229650, 618.708740, 391.353500, 625.318860, 441.587750);
		ctx.bezierCurveTo(631.928980, 491.821990, 642.190770, 539.071120, 643.998770, 605.783070);
		ctx.lineTo(645.017290, 614.850450);
		ctx.lineTo(650.575430, 607.496320);
		ctx.bezierCurveTo(655.515180, 599.226840, 663.641660, 588.505640, 670.471190, 570.578620);
		ctx.bezierCurveTo(676.568990, 554.572350, 681.413580, 532.268130, 682.629720, 500.998710);
		ctx.bezierCurveTo(691.783500, 516.157090, 700.272450, 539.010500, 705.951970, 573.010330);
		ctx.lineTo(710.790450, 599.367050);
		ctx.lineTo(712.970760, 572.568200);
		ctx.bezierCurveTo(715.383750, 542.909430, 723.492470, 488.281730, 686.277270, 415.446920);
		ctx.bezierCurveTo(699.707800, 416.086590, 709.068960, 413.094450, 717.502570, 411.191440);
		ctx.lineTo(727.339920, 408.980800);
		ctx.lineTo(718.276290, 404.559520);
		ctx.bezierCurveTo(690.665540, 391.130850, 676.057320, 370.924300, 666.215710, 347.138130);
		ctx.bezierCurveTo(656.374100, 323.351950, 651.609320, 296.024790, 644.164570, 269.323580);
		ctx.lineTo(635.020870, 264.078970);
		ctx.lineTo(637.311580, 271.257890);
		ctx.bezierCurveTo(644.629030, 297.502550, 649.436200, 325.053350, 659.694320, 349.846160);
		ctx.bezierCurveTo(668.930940, 372.170130, 682.910330, 392.211990, 706.946760, 406.383290);
		ctx.bezierCurveTo(699.702190, 408.131470, 692.130870, 409.610830, 681.027000, 408.151810);
		ctx.lineTo(674.174020, 407.212290);
		ctx.lineTo(677.434710, 413.291550);
		ctx.bezierCurveTo(707.776250, 469.747270, 709.115150, 513.964770, 707.499420, 545.929980);
		ctx.bezierCurveTo(700.745740, 518.724350, 691.975600, 499.825370, 682.353390, 487.624330);
		ctx.lineTo(676.108330, 479.721290);
		ctx.lineTo(676.053130, 489.834980);
		ctx.bezierCurveTo(675.772540, 526.807940, 670.393430, 550.977450, 663.894610, 568.036380);
		ctx.bezierCurveTo(659.480260, 579.623750, 654.770570, 587.445100, 650.409700, 594.343010);
		ctx.bezierCurveTo(647.778980, 533.130810, 638.508260, 487.597310, 632.337710, 440.703490);
		ctx.bezierCurveTo(625.776800, 390.843090, 622.942310, 338.703120, 635.985270, 261.641610);
		ctx.closePath();
		ctx.fill();

// #path11849
		ctx.beginPath();
		ctx.fillStyle = 'rgb(57, 63, 37)';
		ctx.lineWidth = 7.074050;
		ctx.moveTo(547.670110, 652.095990);
		ctx.lineTo(546.675320, 653.864500);
		ctx.bezierCurveTo(541.419320, 662.972170, 536.814310, 669.535500, 533.577280, 676.413040);
		ctx.bezierCurveTo(530.340240, 683.290570, 528.624950, 690.565150, 529.377060, 699.901090);
		ctx.lineTo(529.598120, 703.161790);
		ctx.lineTo(532.914080, 703.106590);
		ctx.lineTo(631.121790, 702.774990);
		ctx.lineTo(634.603550, 702.774990);
		ctx.lineTo(634.658750, 699.293230);
		ctx.bezierCurveTo(634.846490, 685.433470, 639.262630, 667.180390, 643.611840, 657.401600);
		ctx.lineTo(645.822480, 652.427660);
		ctx.lineTo(640.406410, 652.427660);
		ctx.lineTo(549.714970, 652.095970);
		ctx.closePath();
		ctx.moveTo(551.704530, 659.170040);
		ctx.lineTo(635.322010, 659.501640);
		ctx.bezierCurveTo(631.556000, 669.682360, 628.506600, 683.263000, 627.861100, 695.700880);
		ctx.lineTo(536.561640, 696.032470);
		ctx.bezierCurveTo(536.510140, 689.680200, 537.556620, 684.618760, 539.988130, 679.452670);
		ctx.bezierCurveTo(542.624330, 673.851680, 546.872830, 667.377250, 551.704530, 659.170040);
		ctx.closePath();
		ctx.fill();

// #path11851
		ctx.beginPath();
		ctx.fillStyle = 'rgb(124, 133, 78)';
		ctx.lineWidth = 7.074050;
		ctx.moveTo(582.416160, 615.952020);
		ctx.bezierCurveTo(579.115180, 613.168470, 562.707880, 637.283210, 557.371600, 652.307050);
		ctx.lineTo(566.643150, 652.213850);
		ctx.bezierCurveTo(571.438160, 635.859090, 584.743400, 617.914480, 582.416160, 615.952030);
		ctx.closePath();
		ctx.fill();

// #path11853
		ctx.beginPath();
		ctx.fillStyle = 'rgb(124, 133, 78)';
		ctx.lineWidth = 7.074050;
		ctx.moveTo(634.883010, 652.447730);
		ctx.bezierCurveTo(636.949090, 636.896920, 633.969560, 611.216150, 632.318910, 616.643150);
		ctx.bezierCurveTo(631.383000, 619.720260, 629.377060, 632.947950, 627.823510, 641.180270);
		ctx.bezierCurveTo(626.753740, 646.848990, 626.059580, 650.083670, 625.175890, 652.416750);
		ctx.closePath();
		ctx.fill();

// #path11893
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 5.305540;
		ctx.moveTo(562.094540, 472.647250);
		ctx.bezierCurveTo(557.041280, 472.977670, 552.878260, 474.545040, 549.991280, 478.063310);
		ctx.bezierCurveTo(546.141990, 482.754360, 545.016100, 489.912450, 545.625270, 500.390780);
		ctx.lineTo(550.930810, 500.114450);
		ctx.bezierCurveTo(550.353560, 490.185070, 551.679790, 484.360810, 554.080970, 481.434540);
		ctx.bezierCurveTo(556.482150, 478.508270, 560.336710, 477.504450, 567.013220, 478.008050);
		ctx.bezierCurveTo(573.716920, 478.513720, 580.747410, 480.104760, 585.472060, 484.363640);
		ctx.bezierCurveTo(590.196720, 488.622520, 593.182570, 495.669650, 591.496060, 508.791220);
		ctx.lineTo(596.746330, 509.454410);
		ctx.bezierCurveTo(598.572300, 495.247630, 595.136150, 485.907530, 589.009090, 480.384490);
		ctx.bezierCurveTo(582.882020, 474.861440, 574.623800, 473.247390, 567.400080, 472.702510);
		ctx.bezierCurveTo(565.543850, 472.562440, 563.778960, 472.537160, 562.094540, 472.647310);
		ctx.closePath();
		ctx.fill();

// #path11916
		ctx.save();
		ctx.beginPath();
		ctx.transform(0.465501, 0.885047, -0.833246, 0.552902, 0.000000, 0.000000);
		ctx.globalAlpha = 1.0;
		ctx.fillStyle = 'rgb(188, 218, 188)';
		ctx.lineWidth = 1.790920;
		ctx.moveTo(881.154300, -192.086694);
		ctx.bezierCurveTo(886.807430, -192.086694, 891.390197, -187.197436, 891.390197, -181.166230);
		ctx.bezierCurveTo(891.390197, -175.135024, 886.807430, -170.245766, 881.154300, -170.245766);
		ctx.bezierCurveTo(875.501170, -170.245766, 870.918403, -175.135024, 870.918403, -181.166230);
		ctx.bezierCurveTo(870.918403, -187.197436, 875.501170, -192.086694, 881.154300, -192.086694);
		ctx.fill();
		ctx.restore();

// #path11918
		ctx.save();
		ctx.beginPath();
		ctx.transform(0.789704, -0.613487, 0.613487, 0.789704, 0.000000, 0.000000);
		ctx.globalAlpha = 1.0;
		ctx.fillStyle = 'rgba(213, 255, 251, 0.587879)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(125.522770, 921.868266);
		ctx.bezierCurveTo(129.743335, 921.868266, 133.164780, 926.635222, 133.164780, 932.515560);
		ctx.bezierCurveTo(133.164780, 938.395898, 129.743335, 943.162854, 125.522770, 943.162854);
		ctx.bezierCurveTo(121.302205, 943.162854, 117.880760, 938.395898, 117.880760, 932.515560);
		ctx.bezierCurveTo(117.880760, 926.635222, 121.302205, 921.868266, 125.522770, 921.868266);
		ctx.fill();
		ctx.restore();

// #path11920
		ctx.beginPath();
		ctx.fillStyle = 'rgb(57, 63, 37)';
		ctx.lineWidth = 3.890730;
		ctx.globalAlpha = 1.0;
		ctx.moveTo(638.748500, 659.170040);
		ctx.bezierCurveTo(630.853380, 665.115710, 610.443250, 675.887200, 579.667350, 677.675560);
		ctx.bezierCurveTo(610.102610, 682.609660, 626.634470, 672.412100, 640.737990, 662.486000);
		ctx.closePath();
		ctx.fill();

// #path11922
		ctx.beginPath();
		ctx.fillStyle = 'rgb(57, 63, 37)';
		ctx.lineWidth = 3.006470;
		ctx.moveTo(633.221900, 673.649740);
		ctx.bezierCurveTo(628.149560, 682.300450, 622.774450, 678.245730, 614.566850, 684.036600);
		ctx.bezierCurveTo(627.780130, 684.401780, 630.493530, 683.837410, 635.708870, 675.307720);
		ctx.closePath();
		ctx.fill();

// #path11924
		ctx.beginPath();
		ctx.fillStyle = 'rgb(57, 63, 37)';
		ctx.lineWidth = 3.890730;
		ctx.moveTo(728.887370, 642.345440);
		ctx.bezierCurveTo(720.427710, 651.089990, 708.659280, 653.748560, 693.805000, 658.348850);
		ctx.bezierCurveTo(702.887490, 658.814290, 716.279610, 659.193190, 731.147350, 647.274110);
		ctx.closePath();
		ctx.fill();

// #path11926
		ctx.beginPath();
		ctx.fillStyle = 'rgb(57, 63, 37)';
		ctx.lineWidth = 2.652770;
		ctx.moveTo(730.637150, 658.337940);
		ctx.bezierCurveTo(726.855560, 659.878400, 723.281400, 660.601600, 722.152710, 664.763770);
		ctx.bezierCurveTo(725.737280, 664.919400, 730.022080, 664.128560, 731.914200, 663.259730);
		ctx.closePath();
		ctx.fill();

// #path11938
		ctx.beginPath();
		ctx.fillStyle = 'rgb(0, 0, 0)';
		ctx.lineWidth = 4.774980;
		ctx.moveTo(652.828580, 252.412180);
		ctx.bezierCurveTo(652.935220, 259.125790, 683.771110, 260.522950, 683.771110, 260.522950);
		ctx.lineTo(684.967300, 253.702050);
		ctx.closePath();
		ctx.fill();

// #path11940
		ctx.beginPath();
		ctx.fillStyle = 'rgb(0, 0, 0)';
		ctx.lineWidth = 4.774980;
		ctx.moveTo(683.693260, 263.353720);
		ctx.lineTo(655.380860, 270.174220);
		ctx.bezierCurveTo(658.535820, 273.605630, 673.135560, 270.838810, 683.762980, 267.653260);
		ctx.closePath();
		ctx.fill();

// #path11942
		ctx.beginPath();
		ctx.fillStyle = 'rgba(0, 0, 0, 0.969697)';
		ctx.lineWidth = 4.774980;
		ctx.moveTo(922.815810, 249.372550);
		ctx.lineTo(906.183590, 252.344340);
		ctx.lineTo(906.486620, 257.524280);
		ctx.lineTo(923.755330, 254.070160);
		ctx.closePath();
		ctx.fill();

// #path11942-9
		ctx.beginPath();
		ctx.fillStyle = 'rgba(0, 0, 0, 0.969697)';
		ctx.lineWidth = 4.774980;
		ctx.moveTo(927.547520, 258.559900);
		ctx.lineTo(906.630580, 262.291480);
		ctx.lineTo(906.851240, 265.906370);
		ctx.bezierCurveTo(913.286820, 264.565770, 926.440230, 262.785230, 927.547520, 258.559900);
		ctx.closePath();
		ctx.fill();

// #path7253
		ctx.beginPath();
		ctx.fillStyle = 'rgb(233, 233, 233)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(889.104200, 353.334660);
		ctx.lineTo(852.120440, 356.547070);
		ctx.bezierCurveTo(840.257670, 358.812080, 835.044310, 364.771210, 828.745240, 370.127160);
		ctx.bezierCurveTo(820.158420, 383.321430, 819.975310, 396.515690, 820.283510, 409.709960);
		ctx.lineTo(850.709930, 410.140500);
		ctx.closePath();
		ctx.fill();

// #path7241
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 255, 209)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(887.205770, 350.686830);
		ctx.lineTo(847.903040, 410.648910);
		ctx.lineTo(854.009620, 410.915110);
		ctx.lineTo(891.369450, 352.112070);
		ctx.closePath();
		ctx.fill();

// #path7243
		ctx.beginPath();
		ctx.fillStyle = 'rgb(168, 255, 229)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(823.944910, 379.910870);
		ctx.lineTo(823.050610, 383.136570);
		ctx.bezierCurveTo(827.302240, 382.339840, 841.433480, 386.952670, 848.225420, 383.071170);
		ctx.closePath();
		ctx.fill();

// #path12064
		ctx.beginPath();
		ctx.fillStyle = 'rgb(253, 254, 253)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(886.044620, 355.079650);
		ctx.lineTo(847.183470, 356.211800);
		ctx.lineTo(834.395390, 362.752360);
		ctx.lineTo(824.029980, 378.640110);
		ctx.lineTo(819.735090, 410.999400);
		ctx.lineTo(851.379390, 412.761580);
		ctx.lineTo(864.392560, 390.015850);
		ctx.lineTo(876.992660, 370.383170);
		ctx.closePath();
		ctx.fill();

// #path12052
		ctx.beginPath();
		ctx.fillStyle = 'rgb(197, 208, 210)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(885.179650, 353.106860);
		ctx.lineTo(849.809410, 411.246700);
		ctx.lineTo(854.451750, 411.578300);
		ctx.lineTo(893.801150, 352.554200);
		ctx.closePath();
		ctx.fill();

// #path12058
		ctx.beginPath();
		ctx.fillStyle = 'rgb(197, 208, 210)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(824.221240, 378.142360);
		ctx.lineTo(823.226450, 381.900450);
		ctx.bezierCurveTo(821.095560, 381.028630, 832.169630, 387.721930, 845.222330, 383.668960);
		ctx.bezierCurveTo(835.586460, 382.896510, 828.726170, 381.921960, 824.221240, 378.142360);
		ctx.closePath();
		ctx.fill();

// #path11516
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 5.305540;
		ctx.moveTo(863.136190, 299.216960);
		ctx.bezierCurveTo(867.465490, 312.881090, 889.370780, 317.829030, 895.571200, 317.383210);
		ctx.bezierCurveTo(901.753590, 317.023280, 904.053480, 322.735930, 903.362170, 327.795020);
		ctx.bezierCurveTo(901.233590, 342.895640, 896.001090, 345.675320, 889.324610, 348.796110);
		ctx.bezierCurveTo(882.648120, 351.916900, 872.054780, 351.393590, 862.907450, 351.338350);
		ctx.bezierCurveTo(823.001360, 348.313610, 817.543060, 381.130180, 816.760420, 414.396870);
		ctx.bezierCurveTo(830.191670, 414.197710, 843.621560, 413.685910, 857.049340, 413.291550);
		ctx.bezierCurveTo(844.372630, 420.492310, 823.253620, 419.020910, 803.993970, 415.999580);
		ctx.bezierCurveTo(778.281020, 411.965900, 744.417380, 401.804010, 719.162270, 387.275330);
		ctx.bezierCurveTo(731.724360, 397.393890, 757.129420, 411.365870, 780.731010, 417.035890);
		ctx.bezierCurveTo(819.877230, 426.440350, 856.508200, 427.966960, 872.835760, 408.779400);
		ctx.bezierCurveTo(855.979690, 408.553050, 838.657640, 407.992800, 821.801490, 407.772740);
		ctx.bezierCurveTo(821.152360, 389.149780, 827.307460, 353.919470, 864.676050, 356.864950);
		ctx.bezierCurveTo(873.684780, 356.919450, 885.469780, 357.940770, 893.801240, 354.046380);
		ctx.bezierCurveTo(902.132700, 350.151990, 909.446190, 342.380580, 910.823170, 326.137040);
		ctx.bezierCurveTo(911.149520, 322.287260, 910.107740, 315.896810, 907.009730, 313.646920);
		ctx.bezierCurveTo(904.167710, 311.582950, 897.642840, 310.132270, 894.212880, 310.377630);
		ctx.bezierCurveTo(887.352960, 310.868360, 872.235720, 307.383720, 863.136190, 299.216960);
		ctx.closePath();
		ctx.fill();

// #path11983
		ctx.beginPath();
		ctx.globalAlpha = 1.0;
		ctx.fillStyle = 'rgba(255, 255, 255, 0.927273)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(882.870910, 288.981734);
		ctx.bezierCurveTo(886.000767, 288.981734, 888.538018, 291.864974, 888.538018, 295.421630);
		ctx.bezierCurveTo(888.538018, 298.978286, 886.000767, 301.861526, 882.870910, 301.861526);
		ctx.bezierCurveTo(879.741053, 301.861526, 877.203802, 298.978286, 877.203802, 295.421630);
		ctx.bezierCurveTo(877.203802, 291.864974, 879.741053, 288.981734, 882.870910, 288.981734);
		ctx.fill();

// #path11820
		ctx.beginPath();
		ctx.fillStyle = 'rgb(218, 192, 98)';
		ctx.strokeStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 3.537020;
		ctx.lineCap = 'round';
		ctx.lineJoin = 'round';
		ctx.globalAlpha = 1.0;
		ctx.moveTo(710.152190, 345.402930);
		ctx.bezierCurveTo(736.378270, 334.569950, 760.605390, 325.661510, 803.220160, 332.549530);
		ctx.bezierCurveTo(761.260910, 325.112770, 735.714370, 332.469230, 710.152190, 345.402930);
		ctx.closePath();
		ctx.fill();
		ctx.stroke();

// #path12030
		ctx.beginPath();
		ctx.fillStyle = 'rgb(0, 0, 0)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(795.317120, 269.434110);
		ctx.lineTo(788.464130, 267.776130);
		ctx.bezierCurveTo(794.701990, 276.027990, 800.765130, 300.286440, 799.049190, 316.540250);
		ctx.bezierCurveTo(802.938900, 302.772600, 801.692040, 277.425470, 795.317120, 269.434110);
		ctx.closePath();
		ctx.fill();

// #path11520
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 8.842560;
		ctx.moveTo(619.515930, 86.558875);
		ctx.bezierCurveTo(589.920540, 118.334060, 586.936710, 161.571760, 595.917340, 198.969950);
		ctx.bezierCurveTo(598.696150, 212.915600, 612.647340, 268.075540, 650.703750, 272.252680);
		ctx.bezierCurveTo(634.224660, 263.078190, 613.002090, 232.343670, 604.483570, 196.869840);
		ctx.bezierCurveTo(596.245700, 162.564730, 598.945880, 124.398050, 623.605610, 95.622501);
		ctx.bezierCurveTo(651.668330, 114.858960, 665.062110, 135.057140, 683.750950, 169.025440);
		ctx.bezierCurveTo(685.915540, 139.483100, 636.740430, 83.156144, 619.515930, 86.558875);
		ctx.closePath();
		ctx.fill();

// #path11495
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 3.537020;
		ctx.moveTo(437.248620, 532.113480);
		ctx.lineTo(435.259040, 534.987310);
		ctx.lineTo(499.367610, 578.702720);
		ctx.lineTo(501.357190, 575.828890);
		ctx.closePath();
		ctx.fill();

// #path11497
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 3.537020;
		ctx.moveTo(426.471740, 491.935080);
		ctx.lineTo(424.647960, 495.029980);
		ctx.lineTo(497.267510, 537.253210);
		ctx.lineTo(499.036020, 534.213580);
		ctx.closePath();
		ctx.fill();

// #path11499
		ctx.beginPath();
		ctx.fillStyle = 'rgb(165, 140, 60)';
		ctx.lineWidth = 3.537020;
		ctx.moveTo(449.628200, 478.063310);
		ctx.lineTo(448.136020, 481.213480);
		ctx.lineTo(529.984990, 519.623360);
		ctx.lineTo(531.477170, 516.417930);
		ctx.closePath();
		ctx.fill();

// #path10518
		ctx.beginPath();
		ctx.fillStyle = 'rgb(220, 194, 100)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(734.690300, 249.040950);
		ctx.lineTo(733.331980, 254.154290);
		ctx.lineTo(761.969900, 258.776370);
		ctx.lineTo(759.442420, 248.562890);
		ctx.closePath();
		ctx.fill();

// #path11934
		ctx.beginPath();
		ctx.fillStyle = 'rgb(0, 0, 0)';
		ctx.lineWidth = 5.482390;
		ctx.moveTo(673.658070, 239.249970);
		ctx.bezierCurveTo(656.135080, 233.150430, 677.451400, 248.123560, 689.587040, 251.597780);
		ctx.bezierCurveTo(689.587040, 251.597780, 757.943480, 263.761220, 780.026240, 267.711490);
		ctx.bezierCurveTo(802.108980, 271.661770, 821.153470, 274.633770, 822.243660, 273.469330);
		ctx.bezierCurveTo(823.333840, 272.304890, 820.855020, 267.101760, 820.855020, 267.101760);
		ctx.bezierCurveTo(815.552240, 251.399350, 797.565210, 232.772760, 804.311560, 250.262630);
		ctx.lineTo(809.467920, 263.630420);
		ctx.lineTo(689.899720, 246.237070);
		ctx.closePath();
		ctx.fill();

// #path11017
		ctx.beginPath();
		ctx.fillStyle = 'rgb(124, 133, 78)';
		ctx.lineWidth = 1.768510;
		ctx.moveTo(554.323430, 634.188460);
		ctx.lineTo(552.271550, 643.003770);
		ctx.bezierCurveTo(553.875170, 643.636520, 557.997300, 645.336670, 560.353650, 646.037860);
		ctx.lineTo(564.294750, 637.984340);
		ctx.bezierCurveTo(560.985720, 636.934590, 557.511860, 635.906550, 554.323430, 634.188460);
		ctx.closePath();
		ctx.fill();
	}

// #path11017
	ctx.beginPath();
	ctx.fillStyle = 'rgb(124, 133, 78)';
	ctx.lineWidth = 1.768510;
	ctx.moveTo(554.323430, 634.188460);
	ctx.lineTo(552.271550, 643.003770);
	ctx.bezierCurveTo(553.875170, 643.636520, 557.997300, 645.336670, 560.353650, 646.037860);
	ctx.lineTo(564.294750, 637.984340);
	ctx.bezierCurveTo(560.985720, 636.934590, 557.511860, 635.906550, 554.323430, 634.188460);
	ctx.closePath();
	ctx.fill();
}
