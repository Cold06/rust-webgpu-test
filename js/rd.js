let s = 2;
ctx.save();
ctx.scale(s, s);
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgba(175, 224, 233, 0.992157)';
ctx.lineWidth = s * 0.046450;
ctx.rect(-24.148365, -51.340355, 259.979060, 363.653900);
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(30, 138, 0)';
ctx.lineWidth = s * 0.490030;
ctx.globalAlpha = 1.0;
ctx.moveTo(-120.850270, 302.318540);
ctx.lineTo(8.301830, 366.150430);
ctx.lineTo(188.975630, 381.274200);
ctx.lineTo(360.692560, 300.803090);
ctx.bezierCurveTo(276.475660, 242.718230, -50.066660, 242.922570, -120.850270, 302.318540);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgba(0, 0, 0, 0.333333)';
ctx.lineWidth = s * 0.086058;
ctx.moveTo(146.917640, 269.428750);
ctx.bezierCurveTo(182.313024, 273.411696, 191.013010, 281.255522, 166.367840, 286.964870);
ctx.bezierCurveTo(141.722679, 292.674218, 93.029125, 294.095383, 57.505660, 290.142110);
ctx.bezierCurveTo(21.982183, 286.188836, 13.029132, 278.352394, 37.489693, 272.622500);
ctx.bezierCurveTo(61.950238, 266.892606, 110.597263, 265.430715, 146.247850, 269.354210);
ctx.fill();
ctx.save();
ctx.transform(0.264583, 0.000000, 0.000000, 0.264583, -35.120100, 17.776800);
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.852083;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(341.964280, 713.612180);
ctx.bezierCurveTo(347.384490, 720.148340, 359.466130, 724.602660, 369.642850, 724.683610);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(119, 198, 245)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(439.861830, 644.277280);
ctx.lineTo(349.083250, 706.112790);
ctx.bezierCurveTo(392.262820, 761.872950, 475.222600, 747.919700, 521.811560, 724.547750);
ctx.lineTo(539.606610, 704.633570);
ctx.lineTo(502.043290, 658.242060);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(76, 154, 210)';
ctx.lineWidth = s * 1.852083;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(542.956990, 698.303720);
ctx.bezierCurveTo(538.065010, 707.715770, 531.488240, 717.373330, 520.626050, 726.084770);
ctx.bezierCurveTo(459.502570, 764.870350, 356.385140, 740.033010, 347.239940, 703.607020);
ctx.stroke();
ctx.beginPath();
ctx.fillStyle = 'rgb(100, 180, 239)';
ctx.lineWidth = s * 0.264583;
ctx.globalAlpha = 1.0;
ctx.moveTo(198.958280, 746.633100);
ctx.bezierCurveTo(198.054510, 711.089740, 208.397580, 673.565060, 237.921800, 640.874330);
ctx.bezierCurveTo(251.904480, 642.473120, 266.617620, 648.112020, 288.101090, 660.024400);
ctx.lineTo(343.808410, 716.004150);
ctx.lineTo(342.593270, 720.247220);
ctx.bezierCurveTo(340.013380, 720.300820, 344.593780, 722.018390, 342.186980, 722.112600);
ctx.bezierCurveTo(297.851630, 723.847900, 281.972270, 731.738820, 260.941230, 718.840170);
ctx.lineTo(279.320130, 752.984770);
ctx.bezierCurveTo(273.934590, 785.362650, 270.310230, 818.296690, 229.781250, 839.576640);
ctx.bezierCurveTo(191.222320, 815.894710, 209.132460, 777.640120, 198.958280, 746.633100);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(79, 153, 219)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(244.593750, 637.156250);
ctx.bezierCurveTo(240.395810, 637.029970, 236.086360, 638.240410, 232.031250, 641.250000);
ctx.bezierCurveTo(226.624440, 645.262780, 221.375440, 652.080530, 214.937500, 662.937500);
ctx.bezierCurveTo(201.588570, 685.449190, 194.934890, 725.260640, 196.250000, 762.187500);
ctx.bezierCurveTo(196.907560, 780.650930, 199.602450, 798.361980, 204.781250, 812.781250);
ctx.bezierCurveTo(209.960050, 827.200520, 217.686030, 838.584720, 228.937500, 843.437500);
ctx.lineTo(230.500000, 844.125000);
ctx.lineTo(232.000000, 843.281250);
ctx.bezierCurveTo(257.712860, 829.062880, 271.397370, 805.643830, 277.937500, 785.437500);
ctx.bezierCurveTo(281.207560, 775.334340, 282.707050, 766.012110, 283.062500, 758.843750);
ctx.bezierCurveTo(283.240230, 755.259570, 283.151400, 752.232670, 282.781250, 749.781250);
ctx.bezierCurveTo(282.596170, 748.555540, 282.327090, 747.482260, 281.937500, 746.468750);
ctx.bezierCurveTo(281.634950, 745.681660, 281.186120, 744.878130, 280.406250, 744.125000);
ctx.lineTo(280.468750, 744.093800);
ctx.bezierCurveTo(252.749280, 710.402490, 258.605420, 701.706280, 255.959820, 690.477730);
ctx.bezierCurveTo(250.748170, 729.572640, 275.184180, 743.139740, 275.156250, 748.656300);
ctx.lineTo(275.406250, 748.968800);
ctx.bezierCurveTo(275.523950, 749.275000, 275.710230, 749.928310, 275.843750, 750.812550);
ctx.bezierCurveTo(276.110780, 752.581020, 276.223130, 755.260670, 276.062500, 758.500050);
ctx.bezierCurveTo(275.741240, 764.978810, 274.356240, 773.780840, 271.281250, 783.281300);
ctx.bezierCurveTo(265.271350, 801.849450, 252.904340, 822.960850, 230.156250, 836.187550);
ctx.bezierCurveTo(222.281350, 832.046530, 215.898950, 823.002270, 211.375000, 810.406300);
ctx.bezierCurveTo(206.554430, 796.984450, 203.888780, 779.873620, 203.250000, 761.937550);
ctx.bezierCurveTo(201.972450, 726.065410, 208.961510, 686.696410, 220.937500, 666.500050);
ctx.bezierCurveTo(227.162020, 656.002990, 232.169380, 649.880380, 236.218750, 646.875050);
ctx.bezierCurveTo(240.268120, 643.869720, 243.094640, 643.578270, 247.125000, 644.531300);
ctx.bezierCurveTo(255.185720, 646.437350, 267.009870, 655.517830, 286.937500, 661.250050);
ctx.lineTo(288.875000, 654.531300);
ctx.bezierCurveTo(270.183600, 649.154630, 259.679820, 640.303240, 248.750000, 637.718750);
ctx.bezierCurveTo(247.383770, 637.395690, 245.993060, 637.198340, 244.593750, 637.156250);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(79, 153, 219)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(347.468750, 715.718750);
ctx.bezierCurveTo(326.983590, 720.124950, 309.353190, 723.060220, 295.156250, 723.437500);
ctx.bezierCurveTo(280.959310, 723.814780, 265.941210, 720.000030, 259.098210, 714.767860);
ctx.lineTo(261.098210, 721.937500);
ctx.bezierCurveTo(269.889780, 728.659550, 280.343430, 730.836130, 295.343750, 730.437500);
ctx.bezierCurveTo(307.601010, 730.111770, 321.814960, 728.027720, 337.877250, 724.851530);
ctx.bezierCurveTo(341.471840, 724.140730, 336.698960, 721.733730, 340.477470, 720.921000);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(120, 200, 245)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(592.950890, 722.236610);
ctx.lineTo(539.289250, 708.339750);
ctx.lineTo(527.473980, 721.723390);
ctx.lineTo(528.102680, 728.227680);
ctx.bezierCurveTo(570.641800, 797.360330, 592.602720, 873.695350, 554.784420, 970.953100);
ctx.bezierCurveTo(546.268910, 1001.847300, 629.368050, 993.513860, 654.021660, 981.376400);
ctx.bezierCurveTo(676.001500, 921.282460, 650.187880, 812.901050, 613.560290, 744.001410);
ctx.lineTo(593.763970, 740.835970);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(74, 157, 222)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(590.935750, 721.396570);
ctx.bezierCurveTo(588.804760, 728.867340, 587.578220, 748.605200, 595.607710, 750.858930);
ctx.bezierCurveTo(594.690420, 742.975460, 595.533710, 726.402470, 599.385630, 718.397320);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(102, 179, 237)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(524.495530, 725.352680);
ctx.lineTo(498.316960, 739.794640);
ctx.bezierCurveTo(525.598710, 786.865390, 534.113450, 831.643580, 530.414440, 873.752550);
ctx.bezierCurveTo(528.327100, 897.514400, 526.815390, 918.540740, 507.719800, 942.664230);
ctx.bezierCurveTo(504.429980, 946.820270, 507.927900, 952.839280, 505.705360, 957.718750);
ctx.lineTo(561.462380, 962.326800);
ctx.bezierCurveTo(569.615400, 924.454590, 577.062480, 886.450010, 570.276790, 845.776790);
ctx.bezierCurveTo(571.417780, 812.141300, 549.579540, 764.131120, 524.495530, 725.352680);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.strokeStyle = 'rgb(74, 157, 222)';
ctx.lineWidth = s * 1.852083;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(592.500000, 740.755040);
ctx.bezierCurveTo(597.338170, 740.404590, 606.663220, 741.250420, 612.777920, 743.624870);
ctx.bezierCurveTo(635.882910, 790.389450, 656.890610, 824.019670, 663.928570, 949.505040);
ctx.bezierCurveTo(664.372580, 974.000700, 652.309250, 989.712910, 633.571430, 990.576470);
ctx.bezierCurveTo(601.614880, 991.587570, 549.321660, 996.013660, 552.359920, 976.353940);
ctx.bezierCurveTo(553.723180, 967.532660, 560.895290, 959.645250, 565.000000, 939.862180);
ctx.bezierCurveTo(589.431480, 841.493160, 557.018590, 779.782490, 524.642860, 723.076470);
ctx.stroke();
ctx.beginPath();
ctx.strokeStyle = 'rgb(74, 157, 222)';
ctx.lineWidth = s * 1.852083;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(496.489980, 738.204740);
ctx.bezierCurveTo(527.363830, 780.150910, 544.762110, 869.894910, 517.144880, 926.947200);
ctx.bezierCurveTo(507.702470, 942.519300, 496.856340, 960.829200, 513.033000, 961.694080);
ctx.bezierCurveTo(527.625310, 963.504860, 547.667220, 962.007860, 560.634660, 958.417990);
ctx.stroke();
ctx.beginPath();
ctx.fillStyle = 'rgb(119, 199, 244)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(458.836460, 724.446220);
ctx.lineTo(412.915920, 734.292670);
ctx.bezierCurveTo(418.391410, 802.890290, 416.592340, 871.167830, 412.639740, 939.765450);
ctx.bezierCurveTo(418.570150, 947.275650, 391.954070, 986.133170, 397.757610, 994.125480);
ctx.bezierCurveTo(407.202790, 1007.132800, 429.796350, 1005.545300, 448.937440, 1006.460800);
ctx.bezierCurveTo(472.133220, 1007.570200, 491.925150, 1003.881200, 511.854110, 987.408530);
ctx.bezierCurveTo(517.273810, 895.354410, 501.287910, 844.738030, 488.900230, 794.152290);
ctx.bezierCurveTo(479.963010, 770.049710, 473.953460, 743.604980, 458.836460, 724.446220);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(80, 156, 208)';
ctx.strokeStyle = 'rgba(0, 0, 0, 0)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(453.752540, 718.888480);
ctx.bezierCurveTo(476.205380, 753.944470, 490.665340, 806.668240, 499.343750, 853.906250);
ctx.bezierCurveTo(508.022160, 901.144260, 510.736140, 944.842550, 509.718750, 965.031250);
ctx.lineTo(509.718750, 965.156250);
ctx.lineTo(509.718750, 965.312500);
ctx.bezierCurveTo(509.962230, 975.955790, 508.044550, 983.293820, 505.000000, 988.406250);
ctx.bezierCurveTo(501.955450, 993.518680, 497.761060, 996.572450, 492.625000, 998.593750);
ctx.bezierCurveTo(482.352880, 1002.636400, 468.440630, 1001.813500, 456.968750, 1002.062500);
ctx.bezierCurveTo(445.828750, 1002.304200, 430.778940, 1002.346800, 418.937500, 1000.781200);
ctx.bezierCurveTo(413.016780, 999.998500, 407.890250, 998.752390, 404.718750, 997.218750);
ctx.bezierCurveTo(403.133000, 996.451930, 402.061000, 995.632580, 401.531250, 994.968750);
ctx.bezierCurveTo(401.001500, 994.304920, 400.877720, 993.915900, 400.937500, 993.156250);
ctx.bezierCurveTo(402.380100, 974.823660, 412.878970, 958.188980, 417.656250, 933.562500);
ctx.lineTo(417.687450, 933.437500);
ctx.lineTo(417.718650, 933.343800);
ctx.bezierCurveTo(425.942390, 866.865870, 424.776980, 803.672370, 417.062400, 729.843800);
ctx.lineTo(410.093650, 730.593800);
ctx.bezierCurveTo(417.764350, 804.002370, 418.898980, 866.468210, 410.781150, 932.250050);
ctx.bezierCurveTo(410.772150, 932.323650, 410.758950, 932.395200, 410.749950, 932.468800);
ctx.bezierCurveTo(406.211810, 955.618070, 395.580060, 972.116610, 393.968700, 992.593800);
ctx.bezierCurveTo(393.774330, 995.063850, 394.609590, 997.523210, 396.062450, 999.343800);
ctx.bezierCurveTo(397.515310, 1001.164400, 399.452640, 1002.465700, 401.656200, 1003.531200);
ctx.bezierCurveTo(406.063320, 1005.662500, 411.695680, 1006.885400, 417.999950, 1007.718800);
ctx.bezierCurveTo(430.608480, 1009.385800, 445.872750, 1009.306700, 457.124950, 1009.062500);
ctx.bezierCurveTo(468.045280, 1008.825600, 482.719430, 1010.031800, 495.187450, 1005.125000);
ctx.bezierCurveTo(501.421460, 1002.671600, 507.138130, 998.506060, 511.031200, 991.968800);
ctx.bezierCurveTo(514.890740, 985.487840, 516.941050, 976.812980, 516.718700, 965.406300);
ctx.bezierCurveTo(516.716700, 965.307200, 516.720700, 965.224560, 516.718700, 965.125050);
ctx.bezierCurveTo(517.761000, 943.746590, 514.988390, 900.189800, 506.249950, 852.625050);
ctx.bezierCurveTo(502.393110, 834.788680, 483.009410, 736.404460, 453.752540, 718.888480);
ctx.closePath();
ctx.fill();
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(102, 180, 249)';
ctx.strokeStyle = 'rgb(86, 148, 215)';
ctx.lineWidth = s * 1.852083;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(555.569640, 532.882130);
ctx.bezierCurveTo(541.516610, 531.827100, 429.927630, 582.146550, 428.965130, 574.283230);
ctx.bezierCurveTo(426.402460, 553.347140, 420.364070, 517.387470, 421.722900, 514.904620);
ctx.bezierCurveTo(441.341660, 479.057380, 450.058210, 464.505720, 457.857140, 445.933620);
ctx.lineTo(555.714280, 380.219330);
ctx.bezierCurveTo(618.774460, 334.844300, 644.398190, 338.581780, 639.285710, 369.505040);
ctx.lineTo(572.612030, 437.362190);
ctx.bezierCurveTo(573.732380, 442.976130, 562.095850, 450.128540, 527.857140, 477.362190);
ctx.bezierCurveTo(572.410650, 472.894070, 548.815370, 478.552460, 550.714280, 481.647900);
ctx.fill();
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(173, 141, 52)';
ctx.strokeStyle = 'rgb(143, 107, 45)';
ctx.lineWidth = s * 1.852083;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(415.306380, 492.885210);
ctx.lineTo(516.071430, 526.290760);
ctx.lineTo(501.428570, 479.505040);
ctx.fill();
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(255, 116, 23)';
ctx.moveTo(691.954480, 555.367110);
ctx.lineTo(735.896120, 542.235130);
ctx.bezierCurveTo(784.428360, 608.550320, 793.611620, 724.808440, 808.627100, 833.664140);
ctx.lineTo(781.858060, 816.491540);
ctx.bezierCurveTo(756.435880, 746.094380, 769.399510, 651.304680, 691.954480, 555.367110);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(66, 148, 52)';
ctx.moveTo(654.520840, 496.208240);
ctx.lineTo(693.462480, 469.504830);
ctx.bezierCurveTo(859.402410, 471.146280, 835.553020, 759.317190, 866.528930, 908.459220);
ctx.lineTo(826.567270, 875.904100);
ctx.bezierCurveTo(785.569490, 792.922480, 829.811240, 492.005010, 654.520840, 496.208240);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(255, 82, 44)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(696.160720, 554.241070);
ctx.lineTo(649.571430, 561.558040);
ctx.bezierCurveTo(685.582330, 584.029300, 718.746380, 617.888000, 728.482140, 745.459820);
ctx.lineTo(738.421820, 729.122710);
ctx.bezierCurveTo(757.552060, 887.825260, 772.943060, 863.305160, 789.428330, 892.404470);
ctx.lineTo(785.785710, 818.531250);
ctx.bezierCurveTo(758.091860, 745.189590, 777.032360, 631.951490, 696.160720, 554.241070);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(246, 229, 139)';
ctx.moveTo(625.714280, 512.362200);
ctx.lineTo(659.285710, 493.076480);
ctx.bezierCurveTo(866.136290, 476.209870, 771.964460, 793.123110, 839.285710, 884.505060);
ctx.lineTo(806.428570, 840.219340);
ctx.bezierCurveTo(765.186600, 679.445080, 800.994140, 502.126280, 625.714280, 512.362200);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(86, 56, 130)';
ctx.moveTo(712.142830, 465.219340);
ctx.lineTo(734.999970, 451.647910);
ctx.bezierCurveTo(784.197070, 460.335710, 834.556820, 464.372890, 867.142830, 539.505050);
ctx.lineTo(816.188270, 517.929700);
ctx.bezierCurveTo(858.048160, 545.219330, 874.282700, 678.952720, 892.142830, 805.933620);
ctx.bezierCurveTo(885.622580, 819.933520, 873.606200, 782.636120, 863.383940, 762.083880);
ctx.bezierCurveTo(834.046280, 631.175020, 839.570200, 502.342400, 712.142830, 465.219340);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(0, 127, 221)';
ctx.moveTo(693.974780, 475.565070);
ctx.lineTo(720.238740, 462.433090);
ctx.bezierCurveTo(863.305810, 508.788700, 839.964130, 648.991950, 862.670250, 751.841790);
ctx.lineTo(863.550840, 820.527360);
ctx.bezierCurveTo(872.373770, 841.812230, 886.268570, 870.243810, 905.089560, 888.572850);
ctx.bezierCurveTo(927.369400, 910.270350, 953.401540, 920.436640, 941.193800, 925.249810);
ctx.lineTo(864.430450, 889.136880);
ctx.lineTo(864.690560, 909.425590);
ctx.bezierCurveTo(794.448270, 774.383930, 894.353800, 514.680500, 693.974780, 475.565070);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(0, 127, 221)';
ctx.lineWidth = s * 2.381250;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 20;
ctx.moveTo(638.701770, 554.198530);
ctx.bezierCurveTo(702.589670, 587.842350, 722.767680, 665.314170, 726.047140, 761.690790);
ctx.bezierCurveTo(735.643790, 740.140860, 740.178280, 717.328250, 741.451970, 698.808790);
ctx.bezierCurveTo(747.783820, 763.290190, 737.466010, 838.125660, 793.727360, 900.334220);
ctx.bezierCurveTo(788.748050, 871.095340, 779.560220, 838.830500, 783.120760, 803.612120);
ctx.bezierCurveTo(804.721740, 846.176450, 834.192550, 896.498180, 881.428570, 921.647900);
ctx.bezierCurveTo(868.133170, 908.314560, 861.484420, 893.909800, 858.214290, 879.862180);
ctx.bezierCurveTo(883.021880, 901.348910, 921.908640, 929.099900, 960.714280, 922.719320);
ctx.bezierCurveTo(893.757680, 906.715530, 854.959950, 823.875310, 858.405580, 753.500600);
ctx.bezierCurveTo(873.298710, 782.816700, 880.029670, 808.556170, 900.803540, 822.552480);
ctx.bezierCurveTo(869.861030, 757.032080, 877.890090, 563.155160, 814.400840, 515.612370);
ctx.bezierCurveTo(835.414570, 517.197520, 860.589760, 532.951010, 873.755250, 553.982010);
ctx.bezierCurveTo(854.826510, 480.728550, 796.077740, 453.891490, 730.168970, 451.229470);
ctx.stroke();
ctx.beginPath();
ctx.fillStyle = 'rgb(119, 199, 247)';
ctx.globalAlpha = 1.0;
ctx.moveTo(307.857130, 343.790740);
ctx.bezierCurveTo(310.726990, 302.513540, 337.220240, 293.450070, 360.131960, 279.502680);
ctx.lineTo(522.857130, 258.790740);
ctx.bezierCurveTo(543.887260, 290.254570, 558.987630, 319.888660, 552.142850, 399.505030);
ctx.bezierCurveTo(552.696360, 416.023570, 552.627570, 432.378350, 535.460670, 444.233620);
ctx.bezierCurveTo(520.659070, 474.677490, 490.217970, 496.568510, 414.801520, 493.863640);
ctx.lineTo(439.513290, 566.212930);
ctx.lineTo(335.435110, 647.590600);
ctx.lineTo(314.226140, 589.201900);
ctx.bezierCurveTo(312.215660, 558.513320, 309.247090, 527.249870, 297.857130, 490.933600);
ctx.lineTo(362.049730, 439.717030);
ctx.bezierCurveTo(304.001000, 414.190720, 308.914120, 378.509270, 307.857130, 343.790740);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(73, 154, 217)';
ctx.lineWidth = s * 1.852083;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(297.413340, 482.416020);
ctx.bezierCurveTo(303.728770, 519.544320, 312.349500, 545.915180, 314.642860, 592.719330);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(73, 154, 217)';
ctx.lineWidth = s * 1.852083;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(413.214280, 492.362180);
ctx.bezierCurveTo(422.396520, 529.381410, 432.756950, 545.502200, 438.571430, 570.576460);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(73, 154, 217)';
ctx.lineWidth = s * 1.587500;
ctx.moveTo(522.228900, 256.650380);
ctx.lineTo(519.749210, 258.093750);
ctx.bezierCurveTo(551.332470, 294.205980, 553.834990, 341.686140, 550.725100, 404.667190);
ctx.lineTo(554.581010, 412.064860);
ctx.bezierCurveTo(560.463640, 349.929190, 555.729110, 287.651390, 522.228900, 256.650380);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(255, 255, 255)';
ctx.moveTo(504.950000, 424.804930);
ctx.bezierCurveTo(513.159050, 432.931580, 518.441740, 448.247900, 537.058250, 445.660990);
ctx.lineTo(524.231100, 464.114220);
ctx.bezierCurveTo(511.335140, 462.756380, 499.823220, 433.807900, 504.950000, 424.804930);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(73, 154, 217)';
ctx.lineWidth = s * 1.322917;
ctx.moveTo(519.425600, 410.885940);
ctx.bezierCurveTo(516.415800, 421.428710, 528.992250, 427.805830, 534.442100, 413.923060);
ctx.bezierCurveTo(528.662620, 418.792920, 523.523710, 418.794520, 519.425600, 410.885940);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(60, 64, 69)';
ctx.lineWidth = s * 0.264583;
ctx.globalAlpha = 1.0;
ctx.moveTo(395.112880, 576.165960);
ctx.bezierCurveTo(368.279470, 580.309770, 347.694750, 606.935540, 336.347870, 640.705740);
ctx.bezierCurveTo(328.111760, 622.433780, 321.163870, 604.161810, 307.970810, 585.889850);
ctx.lineTo(293.331080, 618.712570);
ctx.bezierCurveTo(288.930220, 636.861470, 289.689230, 655.281930, 294.331850, 673.906800);
ctx.lineTo(320.748010, 710.614640);
ctx.bezierCurveTo(329.471470, 703.537190, 333.773600, 690.143550, 339.422170, 678.673400);
ctx.bezierCurveTo(362.028250, 715.243510, 388.921120, 739.191420, 428.569900, 725.580260);
ctx.bezierCurveTo(450.433210, 720.136150, 456.746800, 706.537390, 454.196430, 688.290180);
ctx.bezierCurveTo(440.083370, 684.238880, 410.455720, 683.364350, 436.155630, 651.837880);
ctx.bezierCurveTo(468.999610, 644.732080, 493.261590, 657.991420, 515.740790, 683.558650);
ctx.bezierCurveTo(539.629820, 710.729390, 576.658460, 720.477640, 615.243730, 717.165790);
ctx.bezierCurveTo(621.950880, 684.746960, 620.441560, 650.087280, 616.756660, 614.834250);
ctx.bezierCurveTo(559.991590, 474.085240, 478.651830, 572.412620, 395.112880, 576.165960);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(124, 128, 136)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(535.885930, 699.061330);
ctx.bezierCurveTo(547.587670, 673.639160, 547.722740, 648.216980, 544.724760, 622.794810);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(124, 128, 136)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(586.646090, 718.254230);
ctx.bezierCurveTo(594.879170, 684.245760, 596.575570, 653.368460, 587.656250, 616.481360);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(217, 188, 83)';
ctx.lineWidth = s * 1.058333;
ctx.moveTo(298.500000, 603.437500);
ctx.lineTo(297.500000, 607.312500);
ctx.bezierCurveTo(305.791700, 609.468120, 309.665320, 613.762420, 311.250000, 619.000000);
ctx.bezierCurveTo(312.834680, 624.237580, 311.926520, 630.630830, 309.531250, 636.500000);
ctx.bezierCurveTo(307.292360, 641.985980, 303.905320, 645.667070, 300.906250, 651.156250);
ctx.bezierCurveTo(297.907180, 656.645430, 295.526720, 663.826060, 295.500000, 675.812500);
ctx.lineTo(299.500000, 675.843700);
ctx.bezierCurveTo(299.525600, 664.372150, 301.668610, 658.104380, 304.406250, 653.093700);
ctx.bezierCurveTo(307.143890, 648.083020, 310.696170, 644.212300, 313.218750, 638.031200);
ctx.bezierCurveTo(315.856590, 631.567660, 317.055360, 624.327100, 315.093750, 617.843700);
ctx.bezierCurveTo(313.132140, 611.360350, 307.806700, 605.856990, 298.500000, 603.437500);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(217, 188, 83)';
ctx.lineWidth = s * 0.793750;
ctx.moveTo(299.931160, 626.085020);
ctx.bezierCurveTo(301.282020, 636.454040, 294.470420, 635.954770, 291.723820, 630.406400);
ctx.lineTo(290.440670, 635.112940);
ctx.lineTo(289.960180, 637.977000);
ctx.bezierCurveTo(298.026510, 643.776050, 309.132920, 635.210960, 299.931160, 626.085020);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.strokeStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.852083;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.globalAlpha = 1.0;
ctx.moveTo(340.844270, 676.673280);
ctx.bezierCurveTo(331.372280, 683.221820, 341.665080, 692.181010, 321.785710, 712.362180);
ctx.bezierCurveTo(302.131440, 690.108260, 269.385550, 655.318050, 306.428570, 584.862180);
ctx.bezierCurveTo(323.538210, 599.513340, 331.371160, 627.905650, 337.142860, 652.560880);
ctx.bezierCurveTo(344.239740, 572.489250, 416.366860, 575.685270, 456.083870, 562.438200);
ctx.bezierCurveTo(493.376970, 551.483260, 527.053600, 519.733550, 571.746340, 551.326520);
ctx.bezierCurveTo(636.409710, 603.003080, 619.391220, 659.283670, 616.698130, 718.001690);
ctx.bezierCurveTo(563.260070, 719.693830, 537.659050, 709.135150, 513.915110, 682.646350);
ctx.bezierCurveTo(463.433310, 626.328730, 426.579170, 655.319810, 426.789450, 667.494060);
ctx.bezierCurveTo(426.999730, 679.668310, 432.187320, 695.342300, 453.997040, 685.528870);
ctx.bezierCurveTo(454.953960, 700.402800, 458.546740, 729.759520, 405.968380, 730.406690);
ctx.bezierCurveTo(366.444150, 730.893190, 355.138010, 699.459260, 340.844270, 676.673280);
ctx.closePath();
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(215, 188, 83)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(523.832490, 667.231600);
ctx.bezierCurveTo(521.106820, 669.579420, 520.171490, 675.086340, 522.380390, 677.925760);
ctx.bezierCurveTo(524.433200, 680.564540, 529.786280, 681.213370, 532.345500, 679.062180);
ctx.bezierCurveTo(535.337270, 676.547410, 535.700900, 670.220430, 533.039980, 667.357870);
ctx.bezierCurveTo(530.950170, 665.109700, 526.158110, 665.228350, 523.832490, 667.231600);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(215, 188, 83)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(574.597970, 689.347140);
ctx.bezierCurveTo(572.223980, 692.423590, 571.783770, 699.157970, 574.085350, 702.392840);
ctx.bezierCurveTo(576.224290, 705.399130, 581.305620, 705.710540, 583.538870, 702.886310);
ctx.bezierCurveTo(586.149600, 699.584720, 585.987330, 691.910230, 583.259200, 688.687280);
ctx.bezierCurveTo(581.116610, 686.156080, 576.623540, 686.722200, 574.597970, 689.347140);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(215, 188, 83)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(600.974730, 696.420340);
ctx.bezierCurveTo(598.522080, 698.818850, 597.160090, 704.733730, 598.622830, 707.926050);
ctx.bezierCurveTo(599.982210, 710.892790, 604.216890, 711.879060, 606.513850, 709.684720);
ctx.bezierCurveTo(609.199060, 707.119490, 610.191890, 700.286150, 608.368070, 697.044810);
ctx.bezierCurveTo(606.935690, 694.499180, 603.067410, 694.373850, 600.974730, 696.420340);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(217, 188, 83)';
ctx.lineWidth = s * 1.322917;
ctx.moveTo(398.312500, 603.343750);
ctx.bezierCurveTo(394.158980, 603.343750, 389.992420, 605.100170, 386.718750, 607.968750);
ctx.bezierCurveTo(383.445080, 610.837330, 381.022440, 614.929700, 380.812500, 619.656250);
ctx.bezierCurveTo(380.731000, 621.490950, 380.929790, 625.206500, 382.687500, 628.968750);
ctx.bezierCurveTo(384.445210, 632.731000, 388.283610, 636.475700, 394.281250, 636.468750);
ctx.bezierCurveTo(405.637650, 635.526050, 405.743780, 622.466620, 396.530930, 621.542190);
ctx.bezierCurveTo(401.114310, 626.676430, 399.100460, 631.419200, 394.281200, 631.468750);
ctx.bezierCurveTo(390.170490, 631.473750, 388.455670, 629.491390, 387.218700, 626.843750);
ctx.bezierCurveTo(385.981730, 624.196110, 385.771130, 620.805300, 385.812450, 619.875000);
ctx.bezierCurveTo(385.951360, 616.747620, 387.597880, 613.882220, 390.031200, 611.750000);
ctx.bezierCurveTo(392.464520, 609.617780, 395.642760, 608.343750, 398.312450, 608.343750);
ctx.bezierCurveTo(402.009900, 608.343750, 405.984540, 610.460640, 408.968700, 613.437500);
ctx.bezierCurveTo(411.952860, 616.414360, 413.749950, 620.229360, 413.749950, 622.531250);
ctx.bezierCurveTo(413.749950, 632.814110, 406.767120, 639.834150, 399.031200, 648.000000);
ctx.bezierCurveTo(391.295280, 656.165850, 382.937450, 665.519040, 382.937450, 679.875000);
ctx.bezierCurveTo(382.937450, 686.222270, 385.730250, 692.632570, 389.687450, 697.625000);
ctx.bezierCurveTo(393.644650, 702.617430, 398.846280, 706.375000, 404.468700, 706.375000);
ctx.bezierCurveTo(409.339010, 706.375000, 413.321760, 704.072350, 415.968700, 701.062500);
ctx.bezierCurveTo(418.615640, 698.052650, 420.093700, 694.386220, 420.093700, 690.937500);
ctx.bezierCurveTo(420.093700, 688.205950, 419.882670, 685.409750, 418.468700, 682.968750);
ctx.bezierCurveTo(417.054730, 680.527750, 414.149170, 678.875000, 410.531200, 678.875000);
ctx.bezierCurveTo(401.770860, 678.987980, 400.600900, 693.287710, 408.756250, 691.276020);
ctx.bezierCurveTo(404.970850, 687.853460, 408.332910, 683.897350, 410.531200, 683.875000);
ctx.bezierCurveTo(412.919590, 683.875000, 413.544970, 684.444810, 414.156200, 685.500000);
ctx.bezierCurveTo(414.767430, 686.555190, 415.093700, 688.546680, 415.093700, 690.937500);
ctx.bezierCurveTo(415.093700, 692.857450, 414.084130, 695.660050, 412.218700, 697.781250);
ctx.bezierCurveTo(410.353270, 699.902450, 407.798910, 701.375000, 404.468700, 701.375000);
ctx.bezierCurveTo(401.274470, 701.375000, 396.941260, 698.723300, 393.593700, 694.500000);
ctx.bezierCurveTo(390.246140, 690.276700, 387.937450, 684.700540, 387.937450, 679.875000);
ctx.bezierCurveTo(387.937450, 667.434970, 394.990330, 659.529400, 402.656200, 651.437500);
ctx.bezierCurveTo(410.322070, 643.345600, 418.749950, 635.064270, 418.749950, 622.531250);
ctx.bezierCurveTo(418.749950, 618.072180, 416.190090, 613.556110, 412.499950, 609.875000);
ctx.bezierCurveTo(408.809860, 606.193890, 403.810700, 603.343750, 398.312500, 603.343750);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(217, 188, 83)';
ctx.lineWidth = s * 1.058333;
ctx.moveTo(437.843750, 584.281250);
ctx.bezierCurveTo(433.955600, 584.281250, 430.507960, 586.369250, 428.125000, 589.468750);
ctx.bezierCurveTo(425.742040, 592.568250, 424.343750, 596.708390, 424.343750, 601.218750);
ctx.bezierCurveTo(424.343750, 607.429300, 428.030400, 611.629210, 432.250000, 612.375000);
ctx.bezierCurveTo(437.812550, 613.590740, 444.544210, 608.571660, 438.353900, 601.570910);
ctx.bezierCurveTo(438.845660, 610.276540, 428.574420, 609.227550, 428.343750, 601.218750);
ctx.bezierCurveTo(428.343750, 597.549770, 429.524980, 594.231270, 431.312500, 591.906250);
ctx.bezierCurveTo(433.100020, 589.581230, 435.372870, 588.281250, 437.843750, 588.281250);
ctx.bezierCurveTo(441.960250, 588.281250, 445.841610, 590.756950, 448.812500, 595.156250);
ctx.bezierCurveTo(451.783390, 599.555550, 453.718750, 605.812910, 453.718750, 612.718750);
ctx.bezierCurveTo(453.718750, 629.692760, 434.908240, 644.905450, 412.281250, 636.718750);
ctx.lineTo(410.937500, 640.500000);
ctx.bezierCurveTo(435.752170, 649.478220, 457.718750, 632.639700, 457.718750, 612.718750);
ctx.bezierCurveTo(457.718750, 605.078290, 455.622030, 598.115910, 452.125000, 592.937500);
ctx.bezierCurveTo(448.627970, 587.759090, 443.569880, 584.281250, 437.843750, 584.281250);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(194, 165, 66)';
ctx.lineWidth = s * 0.264583;
ctx.globalAlpha = 1.0;
ctx.moveTo(365.901820, 640.799170);
ctx.lineTo(314.204150, 645.941150);
ctx.lineTo(313.438450, 683.958920);
ctx.lineTo(335.210340, 682.478750);
ctx.lineTo(336.485710, 725.367280);
ctx.lineTo(373.003710, 678.646010);
ctx.lineTo(352.677080, 672.490710);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(217, 188, 83)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(348.603590, 642.061860);
ctx.bezierCurveTo(329.629130, 654.064140, 321.946440, 666.066410, 313.397520, 678.068690);
ctx.lineTo(313.045080, 683.749100);
ctx.lineTo(333.374210, 682.069170);
ctx.bezierCurveTo(337.710040, 671.397510, 345.945950, 664.741640, 359.010350, 654.405700);
ctx.lineTo(364.160860, 641.516650);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.strokeStyle = 'rgb(134, 95, 29)';
ctx.lineWidth = s * 1.852083;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(312.642210, 645.018170);
ctx.lineTo(312.642210, 683.151430);
ctx.lineTo(336.380800, 683.151430);
ctx.lineTo(335.875720, 727.345600);
ctx.lineTo(373.251370, 678.557150);
ctx.bezierCurveTo(365.737240, 675.425460, 359.419080, 674.087730, 352.795780, 672.292290);
ctx.lineTo(363.654920, 640.977560);
ctx.closePath();
ctx.stroke();
ctx.beginPath();
ctx.fillStyle = 'rgb(119, 199, 247)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(487.442420, 575.927980);
ctx.bezierCurveTo(483.410430, 591.202230, 477.926670, 610.491870, 487.101200, 620.682120);
ctx.lineTo(535.344230, 624.696390);
ctx.bezierCurveTo(579.246990, 622.420720, 618.444240, 616.899870, 623.821250, 588.054720);
ctx.lineTo(599.843100, 567.515300);
ctx.bezierCurveTo(619.028740, 559.958240, 640.099270, 557.584620, 661.968260, 557.406780);
ctx.bezierCurveTo(686.650560, 552.163150, 712.835850, 558.191910, 735.095520, 534.778560);
ctx.bezierCurveTo(727.501400, 519.026780, 715.811910, 504.438460, 650.003800, 505.224750);
ctx.bezierCurveTo(695.884570, 471.418250, 784.199210, 432.076910, 775.123470, 405.438650);
ctx.bezierCurveTo(705.853660, 389.479070, 673.589240, 433.653230, 623.654750, 449.113550);
ctx.bezierCurveTo(650.524670, 415.250110, 712.206840, 362.322810, 688.595290, 356.103980);
ctx.bezierCurveTo(660.848660, 342.810600, 634.664480, 373.265830, 608.199450, 395.857140);
ctx.bezierCurveTo(550.890610, 439.364060, 539.576660, 517.415380, 487.442420, 575.927980);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(81, 161, 223)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(592.406250, 434.406250);
ctx.bezierCurveTo(591.329810, 434.343050, 590.228790, 434.381750, 589.125000, 434.499950);
ctx.bezierCurveTo(584.709830, 434.972910, 580.091690, 436.746090, 575.312500, 439.593700);
ctx.bezierCurveTo(565.754130, 445.288920, 557.589750, 460.654700, 548.395310, 474.490750);
ctx.lineTo(550.672280, 480.386060);
ctx.bezierCurveTo(559.405390, 467.244240, 570.571610, 450.572400, 578.875000, 445.624950);
ctx.bezierCurveTo(583.026700, 443.151220, 586.830940, 441.794790, 589.875000, 441.468700);
ctx.bezierCurveTo(592.919060, 441.142610, 595.111960, 441.732720, 596.812500, 443.093700);
ctx.bezierCurveTo(596.437280, 442.793400, 597.698720, 444.825180, 597.500000, 448.906200);
ctx.bezierCurveTo(597.301280, 452.987220, 596.159850, 458.820090, 593.687500, 465.906200);
ctx.bezierCurveTo(588.742800, 480.078430, 578.530050, 499.337540, 560.343750, 521.093700);
ctx.lineTo(542.875000, 541.968700);
ctx.lineTo(565.031250, 526.187450);
ctx.bezierCurveTo(574.268570, 519.609800, 585.681900, 513.255300, 595.406250, 510.249950);
ctx.bezierCurveTo(600.268420, 508.747270, 604.704480, 508.127800, 608.062500, 508.499950);
ctx.bezierCurveTo(611.203490, 508.848050, 613.217690, 509.950820, 614.750000, 511.999950);
ctx.bezierCurveTo(616.319200, 519.398670, 615.299130, 525.304870, 612.406250, 530.687450);
ctx.bezierCurveTo(609.403690, 536.274110, 604.265220, 541.342150, 597.718750, 546.187450);
ctx.bezierCurveTo(584.625820, 555.878050, 566.212150, 564.447590, 550.468750, 575.781200);
ctx.lineTo(545.750000, 579.156200);
ctx.lineTo(550.937500, 581.749950);
ctx.bezierCurveTo(556.980820, 584.747070, 559.982150, 587.962820, 561.156250, 590.874950);
ctx.bezierCurveTo(562.330350, 593.787080, 562.008490, 596.743110, 560.187500, 600.249950);
ctx.bezierCurveTo(556.545510, 607.263620, 544.415420, 617.504290, 532.604690, 622.866540);
ctx.lineTo(537.531250, 626.968700);
ctx.bezierCurveTo(550.269360, 621.185410, 561.414430, 613.052930, 566.375000, 603.499950);
ctx.bezierCurveTo(568.855290, 598.723460, 569.684600, 593.280900, 567.656250, 588.249950);
ctx.bezierCurveTo(566.171560, 584.567470, 563.287230, 581.292330, 559.125000, 578.437450);
ctx.bezierCurveTo(573.170550, 569.073620, 589.239000, 561.164850, 601.875000, 551.812450);
ctx.bezierCurveTo(608.876070, 546.630680, 614.861540, 540.944210, 618.593750, 533.999950);
ctx.bezierCurveTo(622.325960, 527.055690, 623.614910, 518.838170, 621.437500, 509.593700);
ctx.lineTo(621.312500, 508.968700);
ctx.lineTo(620.937500, 508.468700);
ctx.bezierCurveTo(618.154180, 504.280240, 613.625540, 502.064610, 608.812500, 501.531200);
ctx.bezierCurveTo(603.999460, 500.997790, 598.783370, 501.881310, 593.343750, 503.562450);
ctx.bezierCurveTo(588.158480, 505.164980, 582.769740, 507.543630, 577.500000, 510.312450);
ctx.bezierCurveTo(589.006640, 494.204920, 596.271900, 479.799660, 600.312500, 468.218700);
ctx.bezierCurveTo(602.953720, 460.648570, 604.255190, 454.277520, 604.500000, 449.249950);
ctx.bezierCurveTo(604.744810, 444.222380, 604.466000, 440.248840, 601.187500, 437.624950);
ctx.bezierCurveTo(598.699830, 435.634060, 595.635570, 434.596010, 592.406250, 434.406250);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(73, 154, 217)';
ctx.lineWidth = s * 1.587500;
ctx.moveTo(678.468750, 347.718750);
ctx.bezierCurveTo(672.779730, 347.771050, 666.737520, 349.405430, 660.500000, 352.062500);
ctx.bezierCurveTo(648.024960, 357.376640, 634.668470, 366.816030, 622.156250, 377.156250);
ctx.bezierCurveTo(609.644030, 387.496470, 598.025560, 398.740010, 589.343750, 407.625000);
ctx.bezierCurveTo(585.002850, 412.067500, 581.397980, 415.920100, 578.781250, 418.781250);
ctx.bezierCurveTo(576.164520, 421.642400, 574.656300, 423.364280, 574.093750, 424.062500);
ctx.bezierCurveTo(570.059760, 429.069380, 565.516280, 437.771550, 559.875000, 449.062500);
ctx.bezierCurveTo(554.233720, 460.353450, 547.622920, 474.138720, 540.031250, 488.843750);
ctx.bezierCurveTo(524.847910, 518.253800, 507.023950, 552.444520, 484.183040, 576.066960);
ctx.lineTo(487.156250, 579.093750);
ctx.bezierCurveTo(510.770860, 554.671130, 530.059560, 521.199140, 545.343750, 491.593750);
ctx.bezierCurveTo(552.985840, 476.791050, 559.613530, 462.937530, 565.218750, 451.718750);
ctx.bezierCurveTo(570.823970, 440.499970, 575.518280, 431.823630, 578.750000, 427.812500);
ctx.bezierCurveTo(578.901060, 427.625010, 580.612790, 425.658960, 583.187500, 422.843750);
ctx.bezierCurveTo(585.762210, 420.028540, 589.335450, 416.202440, 593.625000, 411.812500);
ctx.bezierCurveTo(602.204110, 403.032610, 613.696950, 391.922790, 625.968750, 381.781250);
ctx.bezierCurveTo(638.240550, 371.639710, 651.322260, 362.470440, 662.843750, 357.562500);
ctx.bezierCurveTo(668.604490, 355.108530, 673.977110, 353.760660, 678.531250, 353.718750);
ctx.bezierCurveTo(683.085390, 353.676850, 686.771260, 354.834210, 689.906250, 357.593750);
ctx.bezierCurveTo(691.754240, 359.220420, 692.340670, 360.761390, 692.250000, 363.031250);
ctx.bezierCurveTo(692.159300, 365.301110, 691.119760, 368.323830, 689.125000, 371.781250);
ctx.bezierCurveTo(685.135490, 378.696100, 677.501330, 387.209110, 668.531250, 396.218750);
ctx.bezierCurveTo(650.591100, 414.238020, 627.382780, 434.185740, 616.218750, 451.125000);
ctx.lineTo(610.687500, 459.500000);
ctx.lineTo(619.906250, 455.531250);
ctx.bezierCurveTo(640.152220, 446.774810, 662.694500, 433.230310, 685.156250, 422.156250);
ctx.bezierCurveTo(707.618000, 411.082190, 729.971810, 402.564780, 749.281250, 403.375000);
ctx.bezierCurveTo(753.601920, 403.556290, 758.754260, 403.183070, 763.187500, 403.406200);
ctx.bezierCurveTo(767.620740, 403.629380, 770.893240, 404.656450, 771.906250, 405.968700);
ctx.bezierCurveTo(773.518760, 408.057530, 773.836190, 409.768260, 773.656250, 411.656200);
ctx.bezierCurveTo(773.476310, 413.544140, 772.632850, 415.631860, 771.562500, 417.656200);
ctx.bezierCurveTo(762.987790, 433.873470, 739.439850, 448.037020, 713.437500, 461.562450);
ctx.bezierCurveTo(687.435150, 475.087880, 659.180490, 488.114690, 641.218750, 504.062450);
ctx.lineTo(634.500000, 510.031200);
ctx.lineTo(643.468750, 509.281200);
ctx.bezierCurveTo(678.587670, 506.354230, 704.896460, 511.901110, 719.406250, 519.437450);
ctx.bezierCurveTo(726.661140, 523.205620, 730.787060, 527.511690, 731.937500, 530.749950);
ctx.bezierCurveTo(732.512720, 532.369080, 732.473330, 533.673690, 731.906300, 535.031200);
ctx.bezierCurveTo(731.339220, 536.388710, 730.120140, 537.862400, 727.906300, 539.312450);
ctx.bezierCurveTo(723.600770, 542.132530, 719.011380, 545.394200, 708.781300, 548.312450);
ctx.bezierCurveTo(698.551220, 551.230700, 682.755900, 553.694320, 656.812550, 554.187450);
ctx.bezierCurveTo(626.079780, 554.771610, 615.549250, 557.688760, 595.875050, 565.593700);
ctx.lineTo(588.375050, 568.593700);
ctx.lineTo(596.031300, 571.218700);
ctx.bezierCurveTo(608.040920, 575.296220, 614.941710, 579.469660, 618.281300, 582.999950);
ctx.bezierCurveTo(621.620890, 586.530240, 621.768760, 588.986560, 620.843800, 591.749950);
ctx.bezierCurveTo(618.959670, 597.378940, 613.641280, 602.747730, 605.406300, 607.281200);
ctx.bezierCurveTo(597.171320, 611.814670, 586.144050, 615.455160, 573.468800, 617.937450);
ctx.bezierCurveTo(548.118300, 622.902040, 516.219290, 623.195100, 486.500050, 617.562450);
ctx.lineTo(485.375050, 623.468700);
ctx.bezierCurveTo(515.900110, 629.254080, 548.393120, 628.980910, 574.625050, 623.843700);
ctx.bezierCurveTo(587.741020, 621.275100, 599.297640, 617.494030, 608.312550, 612.531200);
ctx.bezierCurveTo(617.327460, 607.568370, 623.957430, 601.345870, 626.531300, 593.656200);
ctx.bezierCurveTo(628.045390, 589.132730, 627.104320, 583.610010, 622.625050, 578.874950);
ctx.bezierCurveTo(619.137610, 575.188370, 613.633690, 571.728620, 605.500050, 568.374950);
ctx.bezierCurveTo(620.237730, 562.860460, 630.780070, 560.684050, 656.906300, 560.187450);
ctx.bezierCurveTo(683.178090, 559.688080, 699.491960, 557.216060, 710.437550, 554.093700);
ctx.bezierCurveTo(721.383140, 550.971340, 727.012550, 547.078290, 731.187550, 544.343700);
ctx.bezierCurveTo(734.131250, 542.415600, 736.326700, 540.077730, 737.468800, 537.343700);
ctx.bezierCurveTo(738.610900, 534.609670, 738.591530, 531.527120, 737.593800, 528.718700);
ctx.bezierCurveTo(735.598330, 523.101860, 730.178410, 518.260360, 722.156300, 514.093700);
ctx.bezierCurveTo(707.556170, 506.510430, 683.657540, 501.398280, 652.375050, 502.781200);
ctx.bezierCurveTo(669.339820, 490.189660, 693.444390, 478.736330, 716.187550, 466.906200);
ctx.bezierCurveTo(742.358850, 453.292880, 766.915910, 439.273100, 776.875050, 420.437450);
ctx.bezierCurveTo(778.102020, 418.116910, 779.324460, 415.403770, 779.625050, 412.249950);
ctx.bezierCurveTo(779.925640, 409.096130, 779.126030, 405.511710, 776.656300, 402.312450);
ctx.bezierCurveTo(773.587100, 398.336610, 768.447160, 397.656820, 763.468800, 397.406200);
ctx.bezierCurveTo(758.490440, 397.155580, 753.256830, 397.531270, 749.531300, 397.375000);
ctx.bezierCurveTo(728.306200, 396.484390, 705.269200, 405.555640, 682.500050, 416.781250);
ctx.bezierCurveTo(663.917560, 425.942760, 645.586980, 436.477910, 628.750050, 444.718750);
ctx.bezierCurveTo(640.490920, 430.995480, 658.174580, 415.139890, 672.781300, 400.468750);
ctx.bezierCurveTo(681.877270, 391.332660, 689.757310, 382.676650, 694.312550, 374.781250);
ctx.bezierCurveTo(696.590170, 370.833550, 698.099680, 367.045580, 698.250050, 363.281250);
ctx.bezierCurveTo(698.400420, 359.516920, 696.918040, 355.772310, 693.875050, 353.093750);
ctx.bezierCurveTo(689.560770, 349.296200, 684.157770, 347.666400, 678.468750, 347.718750);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(488.523800, 624.536170);
ctx.bezierCurveTo(479.801360, 609.931030, 488.067400, 584.565710, 490.607710, 568.929410);
ctx.bezierCurveTo(474.254100, 576.810040, 468.810800, 620.972490, 488.523800, 624.536170);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(60, 63, 73)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(487.857150, 196.294640);
ctx.lineTo(347.349880, 200.653950);
ctx.lineTo(297.072280, 226.052340);
ctx.lineTo(326.803570, 252.022320);
ctx.lineTo(463.205360, 263.781250);
ctx.lineTo(503.665180, 208.709820);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(115, 120, 130)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(417.292360, 182.127050);
ctx.lineTo(341.524260, 175.052820);
ctx.lineTo(284.066890, 205.949170);
ctx.lineTo(243.963310, 236.444840);
ctx.lineTo(235.907280, 342.782280);
ctx.lineTo(257.265740, 348.045970);
ctx.lineTo(313.557570, 238.177200);
ctx.lineTo(426.291250, 223.880710);
ctx.lineTo(420.070280, 182.127050);
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(46, 52, 58)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(389.320750, -31.487470);
ctx.bezierCurveTo(384.773550, -4.755280, 385.787650, 21.050027, 384.930520, 47.167208);
ctx.bezierCurveTo(397.867670, 19.850091, 411.884460, -3.508335, 426.841700, -23.418470);
ctx.lineTo(426.686240, -33.130237);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(386.004540, -31.531500);
ctx.bezierCurveTo(385.562790, -33.918649, 413.078490, -32.572273, 427.041990, -32.667922);
ctx.bezierCurveTo(426.424230, -28.501043, 425.979860, -24.334163, 426.031840, -20.167284);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgba(34, 82, 240, 0.590164)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(366.685370, 145.750270);
ctx.bezierCurveTo(354.181430, 87.460635, 357.104040, 30.944132, 367.695530, -30.773885);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgba(210, 189, 189, 0.355191)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(178.928570, 287.005040);
ctx.bezierCurveTo(191.137340, 290.638790, 200.162230, 291.929550, 218.750000, 291.469320);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(46, 52, 58)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(436.638390, -28.415179);
ctx.bezierCurveTo(424.961170, 27.456792, 419.721470, 85.742834, 415.571430, 144.437500);
ctx.lineTo(481.571430, 131.705360);
ctx.bezierCurveTo(485.652100, 63.069998, 494.047650, 16.009091, 504.781250, -19.361607);
ctx.bezierCurveTo(483.054510, -26.329668, 460.385220, -29.527514, 436.638390, -28.415179);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(46, 52, 58)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(335.395470, -20.404826);
ctx.bezierCurveTo(326.721430, -17.938043, 318.486300, -15.056738, 314.033630, -8.603110);
ctx.bezierCurveTo(315.311370, 17.755394, 324.854300, 30.762447, 334.706060, 43.270627);
ctx.lineTo(342.430840, 6.751424);
ctx.bezierCurveTo(336.278390, 3.410323, 336.430190, -9.387140, 335.395470, -20.404826);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(46, 52, 58)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(227.500000, 68.986607);
ctx.lineTo(220.823400, 82.152443);
ctx.bezierCurveTo(227.567580, 94.411251, 237.389660, 101.547980, 246.982140, 105.736610);
ctx.lineTo(241.598210, 83.620536);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(46, 52, 58)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(182.151790, 176.897320);
ctx.bezierCurveTo(180.311370, 180.061490, 177.552330, 182.000820, 178.383930, 188.727680);
ctx.bezierCurveTo(185.258770, 203.183690, 200.064880, 201.718490, 208.919640, 204.446430);
ctx.lineTo(194.473210, 181.008930);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(84, 88, 96)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(384.286330, 50.858496);
ctx.lineTo(386.869030, -31.285076);
ctx.lineTo(367.811220, -31.806738);
ctx.bezierCurveTo(360.863710, 27.020097, 352.684460, 85.771086, 368.628960, 145.246990);
ctx.lineTo(415.011860, 146.930730);
ctx.bezierCurveTo(418.613700, 89.678565, 425.053200, 29.882136, 435.793950, -26.418174);
ctx.bezierCurveTo(413.541990, -12.211003, 399.420140, 20.473702, 384.286330, 50.858496);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(60, 64, 72)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(367.806810, -31.259064);
ctx.lineTo(359.517410, -28.871347);
ctx.bezierCurveTo(348.588650, -6.665528, 340.095940, 16.514709, 335.889650, 41.409515);
ctx.bezierCurveTo(323.744550, 27.417142, 314.447250, 11.573703, 315.665500, -11.104849);
ctx.lineTo(280.034260, 15.149666);
ctx.bezierCurveTo(271.272010, 69.574183, 279.641310, 112.907190, 311.842960, 155.244000);
ctx.lineTo(368.591390, 146.756530);
ctx.bezierCurveTo(350.143650, 87.417999, 363.158870, 28.079467, 367.806810, -31.259064);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(84, 88, 96)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(279.494290, 15.365144);
ctx.lineTo(242.274900, 52.928004);
ctx.bezierCurveTo(241.073880, 69.573513, 243.416580, 89.246192, 249.824880, 110.171940);
ctx.bezierCurveTo(239.187610, 105.303700, 227.631980, 94.363952, 218.895770, 82.841953);
ctx.lineTo(208.257200, 104.586610);
ctx.bezierCurveTo(225.166440, 133.798510, 247.177490, 160.868140, 275.908310, 173.529830);
ctx.lineTo(311.569810, 156.897370);
ctx.bezierCurveTo(291.982760, 121.197650, 270.465380, 87.988681, 279.494290, 15.365144);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(60, 64, 72)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(188.276790, 143.169640);
ctx.lineTo(208.325890, 103.343750);
ctx.bezierCurveTo(227.377890, 130.837960, 247.967700, 163.525340, 275.402970, 174.253010);
ctx.lineTo(230.066960, 234.241070);
ctx.bezierCurveTo(211.599010, 228.672190, 189.460120, 222.230920, 173.705430, 211.235530);
ctx.lineTo(176.332360, 191.438060);
ctx.bezierCurveTo(187.944000, 198.576110, 199.555630, 202.821260, 211.167270, 205.251000);
ctx.bezierCurveTo(202.358090, 184.224110, 186.868040, 169.305500, 188.276790, 143.169640);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(84, 88, 96)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(174.508930, 207.437500);
ctx.bezierCurveTo(170.274150, 225.312820, 173.714740, 263.287550, 179.908260, 289.070730);
ctx.lineTo(215.142860, 290.665180);
ctx.lineTo(230.937500, 234.401790);
ctx.bezierCurveTo(211.082180, 228.899670, 192.344470, 219.672210, 174.508930, 207.437500);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(60, 64, 72)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(181.379460, 290.718750);
ctx.bezierCurveTo(182.529230, 316.547240, 190.902340, 344.587460, 204.714290, 360.250000);
ctx.lineTo(218.402220, 361.696430);
ctx.lineTo(216.174110, 291.241070);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(109, 113, 121)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(368.705680, -32.541652);
ctx.bezierCurveTo(356.526730, 25.710479, 354.047210, 85.951347, 369.873670, 144.203480);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(109, 113, 121)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(278.297030, 15.945671);
ctx.bezierCurveTo(278.705950, 62.845605, 281.188920, 114.189800, 313.399820, 157.114490);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(109, 113, 121)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(209.606660, 100.293400);
ctx.bezierCurveTo(220.285100, 129.692670, 245.260300, 156.404670, 278.802110, 175.044700);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(109, 113, 121)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(175.000000, 208.790750);
ctx.bezierCurveTo(191.507620, 220.100650, 209.808590, 229.258540, 231.071430, 234.862180);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(109, 113, 121)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(178.544470, 290.202090);
ctx.lineTo(215.667570, 292.727470);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(63, 65, 73)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(482.301310, 205.638550);
ctx.lineTo(423.021800, 220.958760);
ctx.bezierCurveTo(364.508100, 204.154990, 339.986120, 209.868230, 297.072280, 226.052340);
ctx.lineTo(324.303570, 255.236610);
ctx.lineTo(463.205360, 263.781250);
ctx.lineTo(498.488150, 208.583550);
ctx.lineTo(480.728970, 194.483670);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(216.843600, 361.291570);
ctx.bezierCurveTo(216.212260, 361.291570, 203.293200, 361.670380, 203.293200, 361.670380);
ctx.bezierCurveTo(178.555740, 323.730920, 166.049340, 223.390130, 177.133020, 191.425330);
ctx.bezierCurveTo(182.821770, 197.001710, 193.499460, 204.069420, 211.207020, 204.989400);
ctx.bezierCurveTo(191.867950, 180.728960, 185.460280, 152.935480, 187.696440, 145.570290);
ctx.bezierCurveTo(194.748660, 122.342640, 208.085180, 101.085320, 220.072180, 80.300283);
ctx.bezierCurveTo(223.842780, 88.939993, 234.625510, 102.379090, 248.251200, 107.151910);
ctx.bezierCurveTo(243.668610, 93.170679, 238.325960, 70.424749, 240.834070, 52.653201);
ctx.bezierCurveTo(261.251960, 26.207176, 314.714210, -11.598613, 314.714210, -11.598613);
ctx.bezierCurveTo(314.607610, -6.362893, 317.850930, 30.199481, 336.312700, 45.274245);
ctx.bezierCurveTo(338.001100, 33.099307, 352.335990, -23.976083, 357.792240, -30.304753);
ctx.bezierCurveTo(367.183100, -32.276082, 377.551710, -31.943944, 387.631960, -32.530907);
ctx.bezierCurveTo(386.544690, -25.427422, 381.134350, 18.282084, 384.871940, 49.202496);
ctx.bezierCurveTo(397.815200, 21.735329, 406.987680, -4.085152, 435.000000, -30.137819);
ctx.bezierCurveTo(451.565220, -28.757856, 459.249980, -29.548672, 504.285720, -21.209248);
ctx.bezierCurveTo(490.974350, 31.290751, 484.407390, 83.790751, 483.214290, 136.290750);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(201, 161, 54)';
ctx.lineWidth = s * 10.054167;
ctx.moveTo(241.406250, 207.187500);
ctx.bezierCurveTo(211.957190, 252.994170, 208.467440, 317.048320, 218.793940, 383.546480);
ctx.lineTo(245.218750, 377.607140);
ctx.bezierCurveTo(237.229470, 314.812750, 248.336390, 258.063750, 273.375000, 227.718750);
ctx.bezierCurveTo(296.704270, 199.445350, 337.150330, 173.146360, 409.990800, 186.466210);
ctx.lineTo(404.062860, 144.848300);
ctx.bezierCurveTo(346.139100, 137.004370, 268.869070, 159.804830, 241.406250, 207.187500);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(60, 64, 72)';
ctx.lineWidth = s * 0.264583;
ctx.globalAlpha = 1.0;
ctx.moveTo(238.656250, 420.714290);
ctx.lineTo(217.802760, 331.738880);
ctx.bezierCurveTo(237.468080, 338.957870, 255.394740, 334.060760, 269.535710, 331.151790);
ctx.lineTo(343.544890, 443.133310);
ctx.lineTo(357.946430, 496.446430);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(119, 199, 247)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(277.138390, 211.183040);
ctx.lineTo(258.375000, 238.406250);
ctx.lineTo(251.801670, 288.485860);
ctx.lineTo(261.825890, 331.705360);
ctx.lineTo(291.746880, 323.015970);
ctx.lineTo(318.879310, 293.878900);
ctx.lineTo(326.721770, 270.174990);
ctx.lineTo(307.343750, 237.339290);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(197, 159, 57)';
ctx.lineWidth = s * 0.264583;
ctx.globalAlpha = 1.0;
ctx.moveTo(502.581670, 207.922100);
ctx.bezierCurveTo(479.087180, 215.680320, 469.239320, 235.320580, 462.295640, 259.801150);
ctx.bezierCurveTo(413.720070, 228.324770, 349.410150, 221.795930, 318.944480, 239.550430);
ctx.bezierCurveTo(332.452260, 266.560880, 331.283800, 275.201120, 308.989180, 303.130930);
ctx.bezierCurveTo(284.859330, 323.195260, 301.538140, 319.119170, 266.880200, 332.250560);
ctx.bezierCurveTo(274.434730, 377.973170, 291.488870, 426.914410, 338.202940, 444.767550);
ctx.lineTo(357.367910, 496.278750);
ctx.lineTo(239.379430, 412.706340);
ctx.lineTo(246.759720, 450.092840);
ctx.lineTo(399.997540, 545.795700);
ctx.lineTo(365.221110, 438.477590);
ctx.bezierCurveTo(302.702800, 411.756630, 301.280760, 365.628610, 319.197990, 313.357530);
ctx.bezierCurveTo(333.747980, 296.415680, 351.390180, 281.007270, 388.681430, 275.342800);
ctx.bezierCurveTo(430.877540, 280.410110, 458.003120, 301.007780, 473.665170, 313.656250);
ctx.bezierCurveTo(483.147570, 282.504560, 500.737490, 262.535650, 529.736610, 258.303570);
ctx.bezierCurveTo(529.935850, 237.891930, 519.338520, 221.747150, 502.581670, 207.922100);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(215, 191, 83)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(392.292200, 232.293780);
ctx.bezierCurveTo(375.040160, 229.508870, 358.784720, 229.514440, 343.214930, 231.439860);
ctx.bezierCurveTo(357.900630, 249.993990, 351.995960, 264.008980, 355.837560, 281.960660);
ctx.bezierCurveTo(372.829530, 276.143650, 393.175530, 276.475700, 414.163720, 277.985080);
ctx.bezierCurveTo(407.583470, 261.274830, 403.260200, 248.791050, 392.292200, 232.293780);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.fillStyle = 'rgb(215, 191, 83)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(476.442370, 227.529770);
ctx.bezierCurveTo(472.216510, 233.615610, 469.406820, 239.779910, 466.819320, 245.865750);
ctx.bezierCurveTo(476.417180, 259.994840, 482.394440, 267.541610, 487.366070, 284.446430);
ctx.lineTo(504.553570, 266.392860);
ctx.bezierCurveTo(491.698340, 243.054670, 485.994350, 235.767410, 476.442370, 227.529770);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.strokeStyle = 'rgb(131, 106, 50)';
ctx.lineWidth = s * 1.852083;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(479.317380, 190.954600);
ctx.bezierCurveTo(502.340930, 201.236390, 525.953710, 220.388860, 528.309780, 257.624670);
ctx.bezierCurveTo(483.233660, 267.714190, 486.144120, 292.154830, 474.266620, 312.172900);
ctx.bezierCurveTo(351.614780, 200.491580, 232.595480, 368.653010, 363.928570, 440.219320);
ctx.lineTo(400.357140, 548.076470);
ctx.lineTo(245.714290, 449.862180);
ctx.lineTo(230.178570, 380.755030);
ctx.stroke();
ctx.beginPath();
ctx.strokeStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.852083;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(479.317380, 190.954600);
ctx.bezierCurveTo(487.567120, 194.638740, 495.892510, 199.461810, 503.288530, 205.847620);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(314.262040, -10.370599);
ctx.bezierCurveTo(318.996120, -16.041731, 330.442440, -21.264586, 336.254530, -22.061320);
ctx.bezierCurveTo(337.281110, -10.411290, 339.614790, 8.635962, 342.053930, 18.033596);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(219.843100, 81.499962);
ctx.bezierCurveTo(221.447840, 74.332197, 225.660020, 71.488678, 229.285720, 70.308608);
ctx.bezierCurveTo(232.968970, 75.739716, 236.024430, 80.015700, 241.607140, 81.647895);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(177.397260, 192.342380);
ctx.bezierCurveTo(178.385460, 185.232110, 180.524320, 180.901040, 183.470540, 176.891460);
ctx.bezierCurveTo(188.711180, 180.774090, 191.187930, 181.574750, 195.714290, 181.647900);
ctx.stroke();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.322917;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(435.880820, -28.501041);
ctx.bezierCurveTo(423.631790, 29.951249, 418.869650, 89.567532, 417.340940, 145.339740);
ctx.stroke();
ctx.beginPath();
ctx.fillStyle = 'rgb(81, 88, 93)';
ctx.lineWidth = s * 0.264583;
ctx.globalAlpha = 1.0;
ctx.moveTo(423.500470, 221.183700);
ctx.lineTo(481.826630, 206.030140);
ctx.lineTo(481.842630, 163.379280);
ctx.lineTo(417.313260, 181.914020);
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(129, 98, 40)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(492.991070, 127.566960);
ctx.lineTo(403.732140, 144.901780);
ctx.lineTo(408.678570, 186.705360);
ctx.lineTo(493.116070, 167.495540);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(106, 170, 221)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(279.821430, 261.111610);
ctx.bezierCurveTo(272.676610, 270.909850, 274.334070, 306.277090, 286.138390, 322.200890);
ctx.lineTo(293.504460, 317.361610);
ctx.bezierCurveTo(278.839920, 303.441030, 278.687310, 264.576470, 279.821430, 261.111610);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(215, 192, 88)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(247.067260, 198.763800);
ctx.bezierCurveTo(241.894530, 206.149090, 236.715370, 213.531170, 233.185270, 221.737790);
ctx.lineTo(251.781250, 252.129130);
ctx.lineTo(261.338830, 229.723350);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.strokeStyle = 'rgb(106, 170, 221)';
ctx.lineWidth = s * 1.852083;
ctx.lineCap = 'butt';
ctx.lineJoin = 'miter';
ctx.miterLimit = 4;
ctx.moveTo(326.071430, 270.755030);
ctx.bezierCurveTo(325.914440, 254.737710, 288.317980, 207.581960, 274.673490, 210.760300);
ctx.bezierCurveTo(253.032840, 237.431390, 245.777290, 280.588080, 260.653010, 334.844230);
ctx.stroke();
ctx.beginPath();
ctx.fillStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.852083;
ctx.globalAlpha = 1.0;
ctx.moveTo(318.718750, 239.406250);
ctx.bezierCurveTo(338.417360, 275.336920, 294.697000, 346.039070, 219.781250, 327.531250);
ctx.lineTo(214.281250, 326.187500);
ctx.lineTo(215.500000, 331.687500);
ctx.lineTo(234.406250, 415.531250);
ctx.lineTo(241.218750, 413.968750);
ctx.lineTo(223.562500, 335.500000);
ctx.bezierCurveTo(318.385180, 351.892620, 348.322690, 256.917050, 318.718750, 239.406250);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(215, 192, 88)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(332.304200, 149.212360);
ctx.bezierCurveTo(312.584420, 153.912710, 295.347440, 160.772460, 280.149810, 169.756960);
ctx.lineTo(296.691970, 205.504470);
ctx.bezierCurveTo(305.708850, 198.526790, 323.651090, 190.616190, 338.848220, 186.736610);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(344.178570, 380.035710);
ctx.bezierCurveTo(344.178570, 380.035710, 318.273250, 391.966570, 322.651790, 393.593750);
ctx.bezierCurveTo(327.330730, 395.332570, 344.592670, 386.742810, 347.799110, 386.031250);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 0.264583;
ctx.moveTo(342.366070, 371.160710);
ctx.bezierCurveTo(341.779910, 370.681130, 302.828410, 374.129650, 321.116070, 376.589290);
ctx.bezierCurveTo(339.403730, 379.048930, 340.290370, 377.541140, 343.174060, 377.339290);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(547.575280, 323.858870);
ctx.bezierCurveTo(555.389790, 319.228120, 564.430890, 312.404440, 565.102630, 299.808310);
ctx.bezierCurveTo(560.463320, 306.171540, 553.327900, 312.903980, 545.324270, 316.743980);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(566.589990, 317.125700);
ctx.bezierCurveTo(561.446480, 322.941230, 556.139770, 325.296880, 546.214290, 325.866070);
ctx.lineTo(548.026790, 331.486610);
ctx.bezierCurveTo(561.130220, 328.228970, 563.961820, 325.771180, 566.589990, 317.125700);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(198, 0, 111)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(531.013390, 327.950890);
ctx.lineTo(499.083740, 358.181820);
ctx.bezierCurveTo(499.472060, 362.319700, 509.864600, 375.170150, 512.522320, 379.308040);
ctx.bezierCurveTo(540.169360, 396.763390, 556.501350, 361.894540, 539.540180, 320.924110);
ctx.bezierCurveTo(536.127860, 319.275940, 533.827550, 325.411910, 531.013390, 327.950890);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(240, 174, 208)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(538.071430, 352.575890);
ctx.lineTo(535.312500, 359.098210);
ctx.lineTo(548.428570, 364.183040);
ctx.lineTo(548.718750, 355.250000);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(214, 74, 153)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(536.633930, 358.656250);
ctx.lineTo(534.156250, 363.562500);
ctx.lineTo(545.665180, 369.553570);
ctx.lineTo(548.352680, 362.383930);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(255, 255, 255)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(539.041540, 319.379600);
ctx.bezierCurveTo(554.784160, 358.010810, 544.215700, 392.357210, 512.524860, 378.966420);
ctx.bezierCurveTo(511.389160, 378.476430, 516.310780, 384.580150, 514.963580, 384.480220);
ctx.bezierCurveTo(550.400480, 413.615710, 556.158920, 356.528410, 544.465600, 313.283450);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(535.022980, 322.522410);
ctx.lineTo(496.092530, 347.737930);
ctx.bezierCurveTo(518.767020, 397.011710, 556.692810, 365.928650, 535.022980, 322.522410);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(198, 0, 111)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(378.321430, 365.200890);
ctx.lineTo(362.183040, 366.258930);
ctx.bezierCurveTo(372.981730, 439.182300, 432.162390, 436.791550, 448.300430, 390.871130);
ctx.bezierCurveTo(455.433090, 362.712000, 444.720820, 371.273130, 440.017860, 371.754460);
ctx.bezierCurveTo(438.251510, 414.947250, 409.628610, 412.265420, 378.321430, 365.200890);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(240, 174, 208)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(387.116070, 381.816960);
ctx.lineTo(370.031250, 388.196430);
ctx.lineTo(376.763390, 402.223210);
ctx.lineTo(393.491070, 391.022320);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(214, 74, 153)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(392.450890, 388.540180);
ctx.lineTo(377.116070, 399.343750);
ctx.lineTo(386.459820, 410.379460);
ctx.lineTo(399.620540, 396.750000);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(446.731260, 366.227860);
ctx.lineTo(379.491070, 365.272320);
ctx.bezierCurveTo(392.718790, 422.090480, 453.769910, 412.552230, 446.731260, 366.227860);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(255, 255, 255)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(367.912120, 365.374360);
ctx.lineTo(340.973340, 366.789810);
ctx.bezierCurveTo(359.441280, 446.568610, 439.298340, 447.919210, 450.095030, 384.385310);
ctx.bezierCurveTo(444.448660, 406.837440, 426.986600, 417.723770, 413.152280, 417.834290);
ctx.bezierCurveTo(388.151930, 418.034010, 365.025750, 385.885150, 367.912120, 365.374360);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(255, 255, 255)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(412.571430, 368.540180);
ctx.bezierCurveTo(409.198140, 369.211490, 404.307040, 376.503150, 404.977680, 379.883930);
ctx.bezierCurveTo(405.648320, 383.264710, 407.440300, 384.466470, 410.821430, 383.790180);
ctx.bezierCurveTo(414.202560, 383.113890, 419.060880, 375.788810, 418.383930, 372.415180);
ctx.bezierCurveTo(417.706980, 369.041550, 415.944710, 367.868860, 412.571430, 368.540180);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(255, 255, 255)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(397.058380, 364.342000);
ctx.bezierCurveTo(394.524280, 362.906210, 379.633920, 362.947660, 378.125790, 365.481760);
ctx.bezierCurveTo(376.617660, 368.015850, 376.175430, 370.935150, 379.495720, 374.757140);
ctx.bezierCurveTo(382.816000, 378.579120, 396.787870, 376.287550, 398.933380, 371.092000);
ctx.bezierCurveTo(401.078890, 365.896460, 399.592470, 365.777790, 397.058380, 364.342000);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(255, 255, 255)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(522.290180, 349.348210);
ctx.bezierCurveTo(519.609070, 349.399710, 516.194060, 352.872460, 516.245540, 355.553570);
ctx.bezierCurveTo(516.297040, 358.234680, 518.595680, 360.850590, 521.276790, 360.799110);
ctx.bezierCurveTo(523.957900, 360.747610, 527.596120, 356.917720, 527.544640, 354.236610);
ctx.bezierCurveTo(527.493140, 351.555500, 524.971290, 349.296730, 522.290180, 349.348210);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(255, 255, 255)';
ctx.lineWidth = s * 1.852083;
ctx.moveTo(520.375000, 331.718750);
ctx.bezierCurveTo(517.550050, 330.522310, 501.160510, 341.296610, 499.959820, 344.125000);
ctx.bezierCurveTo(498.759130, 346.953390, 496.977950, 346.488720, 502.584820, 350.625000);
ctx.bezierCurveTo(508.191700, 354.761280, 522.921600, 342.196590, 523.000000, 338.187500);
ctx.bezierCurveTo(523.078400, 334.178410, 523.199950, 332.915190, 520.375000, 331.718750);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 2.116667;
ctx.moveTo(558.825890, 289.174110);
ctx.bezierCurveTo(550.519260, 306.759330, 522.522720, 324.465490, 496.250000, 340.000000);
ctx.bezierCurveTo(494.650730, 327.060700, 496.559790, 325.289620, 499.607140, 311.598210);
ctx.bezierCurveTo(488.293630, 324.723230, 487.747230, 336.264870, 489.718750, 352.343750);
ctx.bezierCurveTo(517.591030, 337.051460, 564.638350, 309.256420, 558.825890, 289.174110);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.322917;
ctx.moveTo(434.427190, 337.103430);
ctx.bezierCurveTo(442.137560, 346.022330, 449.658100, 353.076380, 450.776970, 360.646100);
ctx.lineTo(342.254460, 360.294640);
ctx.bezierCurveTo(331.587240, 359.973170, 326.711520, 357.044420, 320.102730, 353.388390);
ctx.bezierCurveTo(324.518310, 367.266870, 342.229390, 366.271160, 344.187550, 366.187500);
ctx.bezierCurveTo(386.243150, 366.320780, 429.071560, 368.528190, 465.749260, 368.865270);
ctx.bezierCurveTo(459.712780, 356.139050, 450.514790, 339.457160, 434.427190, 337.103430);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.322917;
ctx.moveTo(444.741430, 365.607710);
ctx.bezierCurveTo(449.238270, 377.472120, 449.124240, 382.732470, 448.615480, 391.431000);
ctx.bezierCurveTo(453.123700, 375.358760, 450.858730, 371.599300, 449.615160, 365.950190);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(0, 0, 0)';
ctx.lineWidth = s * 1.322917;
ctx.moveTo(496.441310, 344.812980);
ctx.lineTo(492.732710, 348.363260);
ctx.bezierCurveTo(497.733140, 358.722580, 496.052550, 359.684870, 506.035850, 369.823760);
ctx.closePath();
ctx.fill();
ctx.beginPath();
ctx.globalAlpha = 1.0;
ctx.fillStyle = 'rgb(73, 154, 217)';
ctx.lineWidth = s * 1.322917;
ctx.moveTo(514.000000, 381.750000);
ctx.bezierCurveTo(515.946470, 392.242180, 530.011110, 400.049660, 539.312500, 398.750000);
ctx.bezierCurveTo(544.363430, 397.971590, 546.967210, 399.456680, 548.781250, 402.312500);
ctx.bezierCurveTo(550.595290, 405.168320, 551.319080, 409.843860, 550.656250, 415.125000);
ctx.bezierCurveTo(549.330580, 425.687280, 542.551330, 438.111130, 533.187500, 442.625000);
ctx.bezierCurveTo(529.868000, 444.225180, 527.158990, 444.168110, 524.500000, 443.218750);
ctx.bezierCurveTo(521.841010, 442.269390, 519.262090, 440.271250, 516.968750, 437.750000);
ctx.bezierCurveTo(512.382060, 432.707500, 509.075650, 425.792450, 507.625000, 422.718750);
ctx.lineTo(504.718750, 416.593750);
ctx.lineTo(502.937500, 423.125000);
ctx.bezierCurveTo(499.256190, 436.633300, 500.957820, 446.600700, 505.687500, 453.562500);
ctx.bezierCurveTo(509.591280, 459.308620, 515.374260, 462.794790, 521.281250, 465.031250);
ctx.bezierCurveTo(510.050610, 476.704220, 491.945160, 484.092850, 469.968750, 487.781250);
ctx.bezierCurveTo(446.340370, 491.746910, 418.459350, 491.508210, 390.625000, 488.437500);
ctx.bezierCurveTo(439.872860, 503.504050, 504.404720, 492.603440, 527.656250, 465.562500);
ctx.lineTo(530.062500, 462.625000);
ctx.lineTo(526.406250, 461.562500);
ctx.bezierCurveTo(519.929000, 459.680210, 513.663450, 456.372360, 509.843750, 450.750000);
ctx.bezierCurveTo(506.792380, 446.258570, 505.244300, 440.046630, 506.437500, 431.375000);
ctx.bezierCurveTo(508.193030, 434.505130, 510.414340, 437.941940, 513.281250, 441.093750);
ctx.bezierCurveTo(515.926540, 444.001920, 519.053180, 446.595280, 522.812500, 447.937500);
ctx.bezierCurveTo(526.571820, 449.279720, 530.972320, 449.247330, 535.375000, 447.125000);
ctx.bezierCurveTo(546.990200, 441.525850, 554.077120, 427.833720, 555.593750, 415.750000);
ctx.bezierCurveTo(556.352060, 409.708140, 555.755510, 403.962960, 553.000000, 399.625000);
ctx.bezierCurveTo(550.244490, 395.287040, 545.042820, 392.813810, 538.562500, 393.812500);
ctx.bezierCurveTo(532.552460, 394.738710, 527.979350, 393.297150, 524.031250, 390.843750);
ctx.bezierCurveTo(520.083150, 388.390350, 516.862050, 384.869900, 514.000000, 381.750000);
ctx.closePath();
ctx.fill();
ctx.restore();
ctx.restore();